<project name="JasperReports Library" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<description>Helps build the JasperReports distribution files.</description>

	<property name="organization" value="TIBCO Software Inc."/>
	<property name="version" value="6.17.0"/>
	<property name="scm-tag" value="6.17.0"/>

	<path id="project-classpath">
		<path refid="project-lib"/>
		<pathelement location="./build/classes"/>
	</path>

	<target name="compile" description="Compiles the java source files of the library.">
		<mkdir dir="./build/classes"/>
		<ivy:configure file="./ivysettings.xml" override="true"/>
		<ivy:cachepath pathid="project-lib" log="download-only" conf="compile"/> 
		<ivy:cachepath pathid="annotations-lib" log="download-only" conf="annotations"/>
		<pathconvert property="annotations-paths" refid="annotations-lib"/>
		<javac destdir="./build/classes" debug="true" optimize="false" target="1.8" source="1.8"
				encoding="UTF-8" includeantruntime="false" excludes="**/package-info.java">
			<classpath refid="project-classpath"/>
			<src path="./src"/>
			<compilerarg value="-Xlint:-unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:-options"/>
			<compilerarg value="-processorpath"/>
			<compilerarg value="${annotations-paths}"/>
			<compilerarg value="-AmetadataMessagesName=metadata_messages"/>
			<compilerarg value="-ApropertiesDoc=${basedir}/docs/config.reference.xml"/>
			<compilerarg value="-AconfigReferenceOut=${basedir}/build/config.reference.xml"/>
		</javac>
		
		<copy todir="./build/classes">
			<fileset dir="./src">
				<include name="**/*.dtd"/>
				<include name="**/*.xsd"/>
				<include name="**/*.rels"/>
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
				<include name="**/*.png"/>
				<include name="**/*.GIF"/>
				<include name="**/*.gif"/>
				<include name="**/*.ico"/>
				<include name="**/*TokenTypes.txt"/>
				<include name="**/*.vm"/>
				<include name="**/*.js"/>
				<include name="**/*.css"/>
				<include name="**/*.ttf"/>
				<include name="**/*.woff"/>
				<include name="**/*.eot"/>
				<include name="**/*.svg"/>
				<include name="**/*.svgz"/>
				<include name="**/*.tmpl"/>
				<include name="**/LICENSE.txt"/>
			</fileset>
		</copy>

		<exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
			<arg value="log" />
			<arg value="-1" />
			<arg value="--pretty=format:%H" />
		</exec>
		<condition property="repository.version" value="${git.revision}" else="unknown">
			<and>
				<isset property="git.revision"/>
				<length string="${git.revision}" trim="yes" length="0" when="greater"/>
			</and>
		</condition>
		<copy todir="./build/classes">
			<filterchain>
				<!-- here it is important that the "from" properties do not 
				actually exist in this ant build file -->
				<replacestring from="${project.organization.name}" to="${organization}"/>
				<replacestring from="${project.name}" to="${ant.project.name}"/>
				<replacestring from="${project.version}" to="${version}"/>
				<replacestring from="${buildNumber}" to="${repository.version}"/>
			</filterchain>
			<fileset dir="./src">
				<include name="**/*.MF"/>
			</fileset>
		</copy>
	</target>
	
	<target name="antlr.generate" description="Generates source files for ANTLR grammars">
		<ivy:cachepath pathid="project-lib" log="download-only" conf="compile"/>
		<antlr target="src/net/sf/jasperreports/olap/mapping/mapping.g">
			<classpath refid="project-classpath"/>
		</antlr>
		<antlr target="src/net/sf/jasperreports/engine/json/parser/json_grammar.g">
			<classpath refid="project-classpath"/>
		</antlr>
	</target>

	<target name="jar" depends="compile" description="Builds the JasperReports JAR file.">
		<mkdir dir="./dist"/> 
		<jar jarfile="./dist/jasperreports-${version}.jar" manifest="build/classes/META-INF/MANIFEST.MF">
			<fileset dir="./build/classes"/>
			<fileset dir="./">
				<include name="**/lgpl.txt"/>
				<include name="**/license.txt"/>
			</fileset>
		</jar>
	</target>
	
	<target name="alljars" depends="jar, javaflow" description="Builds all JasperReports JAR files."/>

	<target name="javaflow" depends="compile" description="Builds the JavaFlow instrumentated JAR file.">
		<ivy:cachepath pathid="project-lib" log="download-only" conf="javaflow"/> 
		<taskdef name="javaflow" classname="net.sf.jasperreports.ant.JavaflowRewriteTask">
			<classpath refid="project-classpath"/>
		</taskdef>

		<copy todir="./build/javaflow" overwrite="true">
			<fileset dir="./build/classes"/>
		</copy>

		<replaceregexp
			file="./build/javaflow/default.jasperreports.properties"
			match="net.sf.jasperreports.subreport.runner.factory\=[\w\.]*"
			replace="net.sf.jasperreports.subreport.runner.factory=net.sf.jasperreports.engine.fill.JRContinuationSubreportRunnerFactory">
		</replaceregexp>

		<javaflow srcdir="./build/javaflow" destdir="./build/javaflow" mode="asm5">
			<include name="net/sf/jasperreports/engine/fill/BaseReportFiller.class"/>
			<include name="net/sf/jasperreports/engine/fill/JRBaseFiller.class"/>
			<include name="net/sf/jasperreports/engine/fill/JRVerticalFiller.class"/>
			<include name="net/sf/jasperreports/engine/fill/JRHorizontalFiller.class"/>
			<include name="net/sf/jasperreports/engine/fill/JRFillSubreport.class"/>
			<include name="net/sf/jasperreports/engine/fill/JRSubreportRunnable.class"/>
			<include name="net/sf/jasperreports/engine/fill/JRContinuationSubreportRunner.class"/>
			<include name="net/sf/jasperreports/engine/fill/FillerSubreportParent.class"/>
		</javaflow>

		<mkdir dir="./dist"/> 
		<jar jarfile="./dist/jasperreports-javaflow-${version}.jar" manifest="build/classes/META-INF/MANIFEST.MF">
			<fileset dir="./build/javaflow"/>
			<fileset dir="./">
				<include name="**/lgpl.txt"/>
				<include name="**/license.txt"/>
			</fileset>
		</jar>
	</target>

	<target name="clean" description="Deletes all build files.">
		<delete dir="./build"/>
		<delete dir="./dist"/>
		<delete dir="./target"/>
	</target>

	<target name="javadoc" description="Compiles the library API documentation.">
		<mkdir dir="./dist/docs/api"/> 
		<delete dir="./dist/docs/api/net"/>
		<delete>
			<fileset dir="./dist/docs/api" includes="**/*.*" />
		</delete>
		<ivy:cachepath pathid="project-lib" log="download-only" conf="docs"/>
		<condition property="javadoc-arg" value="-Xdoclint:none" else="">
			<or>
				<matches pattern="1.8.*" string="${java.version}"/>
				<matches pattern="9.*" string="${java.version}"/>
				<matches pattern="10.*" string="${java.version}"/>
				<matches pattern="11.*" string="${java.version}"/>
				<matches pattern="12.*" string="${java.version}"/>
			</or>
		</condition>
		<tstamp>
			<format property="CURRENT_YEAR" pattern="yyyy" locale="en"/>
		</tstamp>
		<javadoc packagenames="net.sf.jasperreports.*"
				sourcepath="./src"
				destdir="./dist/docs/api"
				author="true"
				version="true"
				use="true"
				windowtitle="JasperReports ${version} API"
				maxmemory="1024m"
				failonerror="true"
				encoding="UTF-8">
			<doctitle>
<![CDATA[
<table width="100%" border="0" cellpadding="0" cellspacing="0">
<tr valign="middle">
<td nowrap="true"><span style="font-decoration:none;font-family:Arial,Helvetica,sans-serif;font-size:28px;font-weight:normal;color:#000000;">JasperReports API (version ${version})</span></td><td align="right"><img border="0" src="resources/jasperreports.svg"></td>
</tr>
</table>
]]>
			</doctitle>
			<bottom>
<![CDATA[
<span style="font-decoration:none;font-family:Arial,Helvetica,sans-serif;font-size:8pt;font-style:normal;color:#000000;">&copy; 2001 - ${CURRENT_YEAR} TIBCO Software Inc. <a href="http://www.jaspersoft.com" target="_blank" style="color:#000000;">www.jaspersoft.com</a></span>
]]>
			</bottom>
			<classpath refid="project-classpath"/>
			<arg line="${javadoc-arg}"/>
		</javadoc>
		<copy todir="./dist/docs/api/resources">
			<fileset dir="./docs/resources">
				<include name="**/jasperreports.png"/>
				<include name="**/jasperreports.svg"/>
			</fileset>
		</copy>
	</target>

	<target name="preparedocs" description="Prepares Documentation Folder.">
		<mkdir dir="./dist/docs"/> 
		<copy todir="./dist/docs">
			<fileset dir="docs">
				<include name="resources/*.*"/>
			</fileset>
			<fileset dir="docs">
				<include name="*.pdf"/>
			</fileset>
		</copy>
	</target>
	
	<target name="schemaref" description="Generates the Schema Reference.">
		<ivy:cachepath pathid="project-lib" log="download-only" conf="docs"/> 
		<xslt basedir="src/net/sf/jasperreports/engine/dtds" in="src/net/sf/jasperreports/engine/dtds/jasperreport.xsd" destdir="dist/docs" style="docs/schema.reference.xsl" out="./dist/docs/schema.reference.html">
			<param name="sf.net" expression="${sf.net}"/>
			<param name="version" expression="${version}"/>
			<classpath refid="project-classpath"/>
		</xslt>
	</target>
	
	<target name="partschemaref" description="Generates the Report Parts Schema Reference.">
		<ivy:cachepath pathid="project-lib" log="download-only" conf="docs"/> 
		<xslt basedir="src/net/sf/jasperreports/parts" in="src/net/sf/jasperreports/parts/parts.xsd" destdir="dist/docs" style="docs/parts.schema.reference.xsl" out="./dist/docs/parts.schema.reference.html">
			<param name="sf.net" expression="${sf.net}"/>
			<param name="version" expression="${version}"/>
			<classpath refid="project-classpath"/>
		</xslt>
	</target>
	
	<target name="componentschemaref" description="Generates the Component Schema Reference.">
		<ivy:cachepath pathid="project-lib" log="download-only" conf="docs"/> 
		<xslt basedir="src/net/sf/jasperreports/components" in="src/net/sf/jasperreports/components/components.xsd" destdir="dist/docs" style="docs/components.schema.reference.xsl" out="./dist/docs/components.schema.reference.html">
			<param name="sf.net" expression="${sf.net}"/>
			<param name="version" expression="${version}"/>
			<classpath refid="project-classpath"/>
		</xslt>
	</target>
	
	<target name="configref" description="Generates the Configuration Reference." depends="compile">
		<ivy:cachepath pathid="project-lib" log="download-only" conf="docs"/> 
		<xslt basedir="docs" in="build/config.reference.xml" destdir="dist/docs" style="docs/config.reference.xsl" out="./dist/docs/config.reference.html">
			<param name="sf.net" expression="${sf.net}"/>
			<param name="version" expression="${version}"/>
			<classpath refid="project-classpath"/>
		</xslt>
	</target>
	
	<target name="sampleref" depends="compile" description="Generates the Sample Reference.">
		<ivy:cachepath pathid="project-lib" log="download-only" conf="docs"/> 
		<xslt basedir="docs" in="docs/sample.reference.xml" destdir="dist/docs" style="docs/sample.reference.xsl" out="./dist/docs/sample.reference.html">
			<param name="sf.net" expression="${sf.net}"/>
			<param name="version" expression="${version}"/>
			<classpath refid="project-classpath"/>
		</xslt>
		<mkdir dir="./dist/docs/sample.reference"/> 
		<mkdir dir="./dist/docs/resources"/> 
		<xslt basedir="demo/samples" destdir="dist/docs/sample.reference" style="./docs/sample.xsl">
			<param name="sf.net" expression="${sf.net}"/>
			<param name="version" expression="${version}"/>
			<param name="scm-tag" expression="${scm-tag}"/>
			<regexpmapper from="^(.*)/docs/(.*).xml$$" to="\1/\2.html" handledirsep="true"/>
			<classpath refid="project-classpath"/>
		</xslt>
		<copy todir="./dist/docs/sample.reference">
			<regexpmapper from="^(.*)/docs/(.*)$$" to="\1/\2" handledirsep="true"/>
			<fileset dir="./demo/samples">
				<exclude name="**/docs/*.xml"/>
			</fileset>
		</copy>
		<copy todir="./dist/docs/resources">
			<fileset dir="./docs/resources">
				<include name="**/*.gif"/>
				<include name="**/*.png"/>
			</fileset>
		</copy>
		<ant dir="./demo/samples/functions" target="test"/>
		<copy todir="./dist/docs/sample.reference/functions" file="./demo/samples/functions/build/reports/FunctionsReport.html"/>
		<mkdir dir="./dist/docs/sample.reference/functions/FunctionsReport.html_files"/> 
		<copy todir="./dist/docs/sample.reference/functions/FunctionsReport.html_files">
			<fileset dir="./demo/samples/functions/build/reports/FunctionsReport.html_files"/>
		</copy>
	</target>
	
	<target name="docs" depends="preparedocs, javadoc, schemaref, partschemaref, componentschemaref, configref, sampleref" description="Generates all documentation."/>

	<target name="retrievelibs" description="Retrieve dependencies with Apache Ivy">
		<ivy:retrieve conf="compile, javaflow, test" pattern="dist/lib/[artifact](-[classifier])-[revision].[ext]"/>
	</target>
	
	<target name="test" depends="compile" description="Compiles the test sources and runs the tests">
		<ivy:cachepath pathid="test-compile-libs" log="download-only" conf="test"/>
		<path id="test-compile">
			<path refid="test-compile-libs"/>
			<pathelement location="./build/classes"/>
		</path>
		
		<mkdir dir="./build/test-classes"/>
		<javac destdir="./build/test-classes" debug="true" optimize="false" target="1.8" source="1.8" 
				encoding="UTF-8" includeantruntime="false">
			<classpath refid="test-compile"/>
			<src path="./tests"/>
			<compilerarg value="-Xlint:-unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:-options"/>
		</javac>
		<copy todir="./build/test-classes">
			<fileset dir="./tests">
				<include name="**/*.jrxml"/>
				<include name="**/*.sha"/>
				<include name="**/*.jrpxml"/>
				<include name="**/*.svg"/>
				<include name="**/*.xml"/>
				<include name="**/*.csv"/>
				<include name="**/*.png"/>
				<include name="**/*.jpg"/>
				<include name="**/*.json"/>
				<include name="**/*.err"/>
			</fileset>
		</copy>
		
		<taskdef resource="testngtasks" classpathref="test-compile"/>
		<testng outputdir="build/test-output" haltonfailure="true" haltonskipped="true">
			<classpath>
				<path refid="test-compile"/>
				<pathelement location="./build/test-classes"/>
				<pathelement location="./ext/fonts"/>
			</classpath>
			<classfileset dir="./build/test-classes" includes="**/*Test.class" />
		</testng>
		
	</target>
	
</project>
