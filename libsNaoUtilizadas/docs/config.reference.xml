<?xml version="1.0" encoding="UTF-8"?>

<!-- TODO barcode image properties -->

<configReference>

  <category key="net.sf.jasperreports.metadata.property.category:data.source">
    <name>Data Source / Query Executer</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:compile">
    <name>Report Compilation</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:design">
    <name>Report Design</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:fill">
    <name>Report Filling</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:governor">
    <name>Governors</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:crosstab">
    <name>Crosstabs</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:barcode">
  	<name>Barcode Component</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:map">
  	<name>Map Component</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:table">
  	<name>Table Component</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:chart.theme">
    <name>Chart Themes</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:export">
    <name>Report Export</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:extensions">
    <name>JasperReports Extensions</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:repository">
    <name>JasperReports Repository</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:data.cache">
    <name>Data Cache</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:chrome">
    <name>Chrome</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:phantomjs">
    <name>PhantomJS</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:web.util">
    <name>Web Util</name>
  </category>
  
  <category key="net.sf.jasperreports.metadata.property.category:other">
    <name>Other</name>
  </category>
  
  
  <!-- net.sf.jasperreports.bookmarks.data.source.parameter -->
  
  <configProperty name="net.sf.jasperreports.bookmarks.data.source.parameter">
    <description>
Property that references the parameter containing the bookmarks data source.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.column.names.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.csv.column.names.{arbitrary_name}">
    <description>
Property having this prefix store the comma separated names of the columns to be extracted from the CSV source.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.date.pattern -->
  
  <configProperty name="net.sf.jasperreports.csv.date.pattern">
    <description>
Property holding the value of the date format pattern to be used when parsing the CSV data.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.encoding -->
  
  <configProperty name="net.sf.jasperreports.csv.encoding">
    <description>
Property holding the value of the charset used to encode the CSV stream.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.field.column.name -->
  
  <configProperty name="net.sf.jasperreports.csv.field.column.name">
    <description>
Property specifying the name of the column in the CSV data to which the dataset field is mapped to, in case CSV data is used. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.field.column.index -->
  
  <configProperty name="net.sf.jasperreports.csv.field.column.index">
    <description>
Property specifying the 0-based index of the column in the CSV data to which the dataset field is mapped to, in case CSV data is used. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.field.delimiter -->
  
  <configProperty name="net.sf.jasperreports.csv.field.delimiter">
    <description>
Property holding the value of the field delimiter from the CSV source.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.locale.code -->
  
  <configProperty name="net.sf.jasperreports.csv.locale.code">
    <description>
Property holding the <code>java.lang.String</code> code of the locale to be used when parsing the CSV data.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.number.pattern -->
  
  <configProperty name="net.sf.jasperreports.csv.number.pattern">
    <description>
Property holding the value of the number format pattern to be used when parsing the CSV data.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.record.delimiter -->
  
  <configProperty name="net.sf.jasperreports.csv.record.delimiter">
    <description>
Property holding the value of the record delimiter from the CSV source
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.source -->
  
  <configProperty name="net.sf.jasperreports.csv.source">
    <description>
String property representing a valid path to the requested resource containing the CSV data. It can be:
<ul>
 <li>a resource on the classpath</li>
 <li>a file from the filesystem, with an absolute or relative path</li>
 <li>an url</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.csv.timezone.id -->
  
  <configProperty name="net.sf.jasperreports.csv.timezone.id">
    <description>
Property holding the <code>java.lang.String</code> value of the time zone id to be used when parsing the CSV data.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.data.adapter -->
  
  <configProperty name="net.sf.jasperreports.data.adapter">
    <description>
Property that provides the location of a data adapter resource to be used for the dataset.    
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.data.cache.included -->
  
  <configProperty name="net.sf.jasperreports.data.cache.included">
    <description>
Flag property that specifies if data associated with this object (report parameter, subreport element, subdataset run, report part) 
will be included in the data snapshot. Default value is <code>false</code> for report parameters and <code>true</code> for 
subreport elements, subdataset run and report parts.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.data.cache.persistable -->
  
  <configProperty name="net.sf.jasperreports.data.cache.persistable">
    <description>
Flag property that specifies if the data snapshot can be persisted. Default value is <code>true</code>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.data.cache.recordable -->
  
  <configProperty name="net.sf.jasperreports.data.cache.recordable">
    <description>
Flag property that specifies if data recording is enabled. Default value is <code>true</code>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.ejbql.query.hint.{hint} -->
  
  <configProperty name="net.sf.jasperreports.ejbql.query.hint.{hint}">
    <description>
Properties with this prefix introduce JPA implementation specific EJBQL query hints to be used by the 
<api href="net/sf/jasperreports/engine/query/JRJpaQueryExecuter.html">JRJpaQueryExecuter</api>. The suffix is the name of the hint, as documented by the specific JPA implementation.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.ejbql.query.page.size -->
  
  <configProperty name="net.sf.jasperreports.ejbql.query.page.size">
    <description>
Property specifying the number of result rows to be retrieved at once. Result pagination is implemented by 
<code>javax.persistence.Query.setFirstResult()</code> and <code>javax.persistence.Query.setMaxResults()</code>.
<br/>
By default, all the rows are retrieved (no result pagination is performed).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.hql.clear.cache -->
  
  <configProperty name="net.sf.jasperreports.hql.clear.cache">
    <description>
Property specifying whether Hibernate session cache should be cleared between two consecutive fetches when using pagination. 
<br/>
By default, the cache cleanup is not performed.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.hql.field.mapping.descriptions -->
  
  <configProperty name="net.sf.jasperreports.hql.field.mapping.descriptions">
    <description>
Property specifying whether field descriptions should be used to determine the mapping between the fields and the query return values. 
<br/>
By default, field description are used.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.hql.query.list.page.size -->
  
  <configProperty name="net.sf.jasperreports.hql.query.list.page.size">
    <description>
Property specifying the number of result rows to be retrieved at once when the execution type is <code>list</code>.
Result pagination is implemented by <code>org.hibernate.Query.setFirstResult()</code> and  <code>org.hibernate.Query.setMaxResults()</code>.
By default, all the rows are retrieved (no result pagination is performed).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.hql.query.run.type -->
  
  <configProperty name="net.sf.jasperreports.hql.query.run.type">
    <description>
Property specifying the Hibernate query execution type. Possible values are:
<ul>
  <li><code>list</code> - the query will be run by calling <code>org.hibernate.Query.list()</code></li>
  <li><code>iterate</code> - the query will be run by calling <code>org.hibernate.Query.iterate()</code></li>
  <li><code>scroll</code> - the query will be run by calling <code>org.hibernate.Query.scroll()</code></li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.http.data.url -->
  
  <configProperty name="net.sf.jasperreports.http.data.url">
    <description>
Property that specifies the base URL to be used by the HTTP data adapters.
If present in the dataset or at report parameter level, it overrides the URL specified in the data adapter definition, or the value provided
by the report parameter having the now deprecated <api href="net/sf/jasperreports/data/http/HttpDataService.html#PARAMETER_URL">HTTP_DATA_URL</api> name.
When specified at parameter level, it does not need to provide a value. Instead, it is used to mark the report parameter that would provide the URL value.
If multiple parameters have this property set, the last one will be used to provide the URL value.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.http.data.username -->
  
  <configProperty name="net.sf.jasperreports.http.data.username">
    <description>
Property that specifies the user name to be used by the HTTP data adapters with basic authentication.
If present in the dataset or at report parameter level, it overrides the user name specified in the data adapter definition, or the value provided
by the report parameter having the now deprecated <api href="net/sf/jasperreports/data/http/HttpDataService.html#PARAMETER_USERNAME">HTTP_DATA_USERNAME</api> name.
When specified at parameter level, it does not need to provide a value. Instead, it is used to mark the report parameter that would provide the user name value.
If multiple parameters have this property set, the last one will be used to provide the user name value.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.http.data.password -->
  
  <configProperty name="net.sf.jasperreports.http.data.password">
    <description>
Property that specifies the password to be used by the HTTP data adapters with basic authentication.
If present in the dataset or at report parameter level, it overrides the password specified in the data adapter definition, or the value provided
by the report parameter having the now deprecated <api href="net/sf/jasperreports/data/http/HttpDataService.html#PARAMETER_PASSWORD">HTTP_DATA_PASSWORD</api> name.
When specified at parameter level, it does not need to provide a value. Instead, it is used to mark the report parameter that would provide the password value.
If multiple parameters have this property set, the last one will be used to provide the password value.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.http.data.url.parameter -->
  
  <configProperty name="net.sf.jasperreports.http.data.url.parameter">
    <description>
Property which specifies that the current parameter will append a request parameter value to the base URL when HTTP data adapters are used.
The value of this property indicates the name of the request parameter to be appended. In case the property is used, but no value is provided, the name of the request
parameter will be the same as the current report parameter name.
Request parameters introduced this way override the request parameters having the same name which were declared at data adapter level or were provided
by the report parameters having the now deprecated <api href="net/sf/jasperreports/data/http/HttpDataService.html#PARAMETER_PREFIX_URL_PARAMETER">HTTP_DATA_URL_PARAMETER_</api> prefix.
If multiple parameters try to provide a value for the same request parameter, the request parameter will be sent multiple times, becoming a request parameter of type array.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.http.data.body -->
  
  <configProperty name="net.sf.jasperreports.http.data.body">
    <description>
Property that specifies the body entity of the POST/PUT request used by the HTTP data adapters.
If present in the dataset or at report parameter level, it overrides the request body specified in the data adapter definition.
When specified at parameter level, it does not need to provide a value. Instead, it is used to mark the report parameter that would provide the POST/PUT request body entity value.
If multiple parameters have this property set, the last one will be used to provide the request body value.
Also, when the POST/PUT request body is specified, all other POST parameter values are ignored. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.http.data.method -->
  
  <configProperty name="net.sf.jasperreports.http.data.method">
    <description>
Property that specifies the request method used by the HTTP data adapters.
If present in the dataset or at report parameter level, it overrides the request method specified in the data adapter definition.
When specified at parameter level, it does not need to provide a value. Instead, it is used to mark the report parameter that would 
provide the request method.
If multiple parameters have this property set, the last one will be considered as request method value. 
<br/>
This property takes priority over request <code>BODY</code> or <code>POST</code> parameters. 
<br/>
If the property is missing, its default value depends on the presence/absence of the request <code>BODY</code> or <code>POST</code> 
parameters: if <code>BODY</code> or <code>POST</code>. 
parameters are present, the default value is <code>POST</code>, otherwise it is <code>GET</code>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.http.data.post.parameter -->
  
  <configProperty name="net.sf.jasperreports.http.data.post.parameter">
    <description>
Property which specifies that the current parameter will contribute a POST request parameter value when HTTP data adapters are used.
The value of this property indicates the name of the request parameter to be contributed. In case the property is used, but no value is provided, the name of the request
parameter will be the same as the current report parameter name.
Request parameters introduced this way override the request parameters having the same name which were declared at data adapter level or were provided
by the report parameters having the now deprecated <api href="net/sf/jasperreports/data/http/HttpDataService.html#PARAMETER_PREFIX_POST_PARAMETER">HTTP_DATA_POST_PARAMETER_</api> prefix.
If multiple parameters try to provide a value for the same request parameter, the request parameter will be sent multiple times, becoming a request parameter of type array.
All POST parameter values are ignored if a POST/PUT request body is specified.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.http.data.header -->
  
  <configProperty name="net.sf.jasperreports.http.data.header">
    <description>
Property which specifies that the current parameter will contribute a request header value when HTTP data adapters are used.
The value of this property indicates the name of the request header to be contributed. In case the property is used, but no value is provided, the name of the request
header will be the same as the current report parameter name.
Request headers introduced this way override the request headers having the same name which were declared at data adapter level.
If multiple parameters try to provide a value for the same request header, the request header will be added multiple times to the request.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.javabean.field.property -->
  
  <configProperty name="net.sf.jasperreports.javabean.field.property">
    <description>
Property specifying the JavaBean property name for the dataset field in case an JavaBean data source is used. 
This mapping was previously specified using the <code>fieldDescription</code> attribute, but using this custom property is now recommended.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.json.date.pattern -->
  
  <configProperty name="net.sf.jasperreports.json.date.pattern">
    <description>
Parameter/property holding the format pattern used to instantiate <code>java.util.Date</code> instances.    
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.json.field.expression -->
  
  <configProperty name="net.sf.jasperreports.json.field.expression">
    <description>
Property specifying the JSON expression for the dataset field in case a JSON data source is used. 
This mapping was previously specified using the <code>fieldDescription</code> attribute, but using this custom property is now recommended.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.json.locale.code -->
  
  <configProperty name="net.sf.jasperreports.json.locale.code">
    <description>
Built-in parameter/property holding the <code>java.lang.String</code> code of the locale to be used when parsing the JSON data.
<br/>
The allowed format is: <code>language[_country[_variant]]</code>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.json.number.pattern -->
  
  <configProperty name="net.sf.jasperreports.json.number.pattern">
    <description>
Parameter/property holding the format pattern used to instantiate <code>java.lang.Number</code> instances.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.json.source -->
  
  <configProperty name="net.sf.jasperreports.json.source">
    <description>
Built-in parameter/property holding the value of the source for the JSON file. 
<br/>
It can be:
<ul>
<li>a resource on the classpath</li>
<li>a file from the filesystem, with an absolute or relative path</li>
<li>a url</li>
</ul>    
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.json.timezone.id -->
  
  <configProperty name="net.sf.jasperreports.json.timezone.id">
    <description>
Built-in parameter/property holding the <code>java.lang.String</code> value of the time zone id to be used when parsing the JSON data. 
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.jsonql.field.expression -->
  
  <configProperty name="net.sf.jasperreports.jsonql.field.expression">
    <description>
Property specifying the JSONQL expression for the dataset field.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.jdbc.cached.rowset -->
  
  <configProperty name="net.sf.jasperreports.jdbc.cached.rowset">
    <description>
Flag property specifying if data will be stored in a cached rowset.
    </description>
  </configProperty>
  
  <!-- net.sf.jasperreports.jdbc.fetch.size -->
  
  <configProperty name="net.sf.jasperreports.jdbc.fetch.size">
    <description>
Property specifying the fetch size for the <code>java.sql.ResultSet</code> created by the 
<api href="net/sf/jasperreports/engine/query/JRJdbcQueryExecuter.html">JRJdbcQueryExecuter</api> and the 
<api href="net/sf/jasperreports/engine/query/JRHibernateQueryExecuter.html">JRHibernateQueryExecuter</api>.
    </description>
  </configProperty>
  
  <!-- net.sf.jasperreports.result.set.type -->
  
  <configProperty name="net.sf.jasperreports.jdbc.result.set.type">
    <description>
Property specifying the type for the <code>java.sql.ResultSet</code> created by the 
<api href="net/sf/jasperreports/engine/query/JRJdbcQueryExecuter.html">JRJdbcQueryExecuter</api>. Possible values are:
<ul>
  <li><code>forwardOnly</code> - the cursor may move only forward.</li>
  <li><code>scrollInsensitive</code> - the result set is scrollable but generally not sensitive to changes made by others.</li>
  <li><code>scrollSensitive</code> - the result set is scrollable and generally sensitive to changes made by others.</li>
</ul>
    </description>
  </configProperty>
  
  <!-- net.sf.jasperreports.result.set.concurrency -->
  
  <configProperty name="net.sf.jasperreports.jdbc.concurrency">
    <description>
Property specifying the concurrency rule for the <code>java.sql.ResultSet</code> created by the 
<api href="net/sf/jasperreports/engine/query/JRJdbcQueryExecuter.html">JRJdbcQueryExecuter</api>. Possible values are:
<ul>
  <li><code>readOnly</code> - the concurrency mode for a <code>ResultSet</code> object that may NOT be updated.</li>
  <li><code>updatable</code> - the concurrency mode for a <code>ResultSet</code> object that may be updated.</li>
</ul>
    </description>
  </configProperty>
  
  <!-- net.sf.jasperreports.result.set.holdability -->
  
  <configProperty name="net.sf.jasperreports.jdbc.holdability">
    <description>
Property specifying the cursor holdability after commit for the <code>java.sql.ResultSet</code> created by the 
<api href="net/sf/jasperreports/engine/query/JRJdbcQueryExecuter.html">JRJdbcQueryExecuter</api>. Possible values are:
<ul>
  <li><code>hold</code> - indicates that <code>ResultSet</code> objects should not be closed when the method <code>Connection.commit()</code> is called.</li>
  <li><code>close</code> - indicates that <code>ResultSet</code> objects should be closed when the method <code>Connection.commit()</code> is called.</li>
</ul>
    </description>
  </configProperty>
  
  <!-- net.sf.jasperreports.statement.max.field.size -->
  
  <configProperty name="net.sf.jasperreports.jdbc.max.field.size">
    <description>
Property specifying the limit for the maximum number of bytes in a <code>ResultSet</code> column 
storing character or binary values created by the 
<api href="net/sf/jasperreports/engine/query/JRJdbcQueryExecuter.html">JRJdbcQueryExecuter</api>.
    </description>
  </configProperty>

  <!-- net.sf.jasperreports.jdbc.query.timeout -->

  <configProperty name="net.sf.jasperreports.jdbc.query.timeout">
    <description>
Property specifying the number of seconds to wait for the <code>Statement</code> created by the 
<api href="net/sf/jasperreports/engine/query/JRJdbcQueryExecuter.html">JRJdbcQueryExecuter</api> to execute.
<br/>
The value must be greater than or equal to 0.
<br/>
Setting this property to 0 means that there is no limit.
    </description>
  </configProperty>
  
  <!-- net.sf.jasperreports.query.chunk.token.separators -->
  
  <configProperty name="net.sf.jasperreports.query.chunk.token.separators">
    <description>
Property that specifies the list of token separators characters for <api href="net/sf/jasperreports/engine/JRQueryChunk.html#TYPE_CLAUSE_TOKENS">TYPE_CLAUSE_TOKENS</api> tokenized query clauses.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.query.executer.factory.{language} -->
  
  <configProperty name="net.sf.jasperreports.query.executer.factory.{language}">
    <description>
Properties with this prefix associate a query executer factory implementation with a query language.
To obtain query executer factories, a property having the query language appended to this prefix is used to get the query executer factory name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.sql.field.column.name -->
  
  <configProperty name="net.sf.jasperreports.sql.field.column.name">
    <description>
Property specifying the name of the column in the JDBC result set to which the dataset field is mapped to, in case an SQL query is used. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.sql.field.column.label -->
  
  <configProperty name="net.sf.jasperreports.sql.field.column.label">
    <description>
Property specifying the label of the column in the JDBC result set to which the dataset field is mapped to, in case an SQL query is used. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.sql.field.column.index -->
  
  <configProperty name="net.sf.jasperreports.sql.field.column.index">
    <description>
Property specifying the 1-based index of the column in the JDBC result set to which the dataset field is mapped to, in case an SQL query is used. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.column.indexes.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.xls.column.indexes.{arbitrary_name}">
    <description>
Property having this prefix hold the comma separated values of the column indexes to be extracted from the Excel source.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.column.names.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.xls.column.names.{arbitrary_name}">
    <description>
Property having this prefix hold the comma separated names of the columns to be extracted from the Excel source.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.field.column.name -->
  
  <configProperty name="net.sf.jasperreports.xls.field.column.name">
    <description>
Property specifying the name of the column in the Excel data to which the dataset field is mapped to, in case Excel data is used. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.field.column.index -->
  
  <configProperty name="net.sf.jasperreports.xls.field.column.index">
    <description>
Property specifying the 0-based index of the column in the Excel data to which the dataset field is mapped to, in case Excel data is used. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.date.pattern -->
  
  <configProperty name="net.sf.jasperreports.xls.date.pattern">
    <description>
Property holding the value of the date format pattern to be used when parsing the Excel data.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.locale.code -->
  
  <configProperty name="net.sf.jasperreports.xls.locale.code">
    <description>
String property specifying the code of the locale to be used when parsing the Excel data.
<p/>
The allowed format is: language[_country[_variant]] 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.number.pattern -->
  
  <configProperty name="net.sf.jasperreports.xls.number.pattern">
    <description>
Property holding the value of the number format pattern to be used when parsing the Excel data.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.source -->
  
  <configProperty name="net.sf.jasperreports.xls.source">
    <description>
String property representing a valid path to the requested resource containing the Excel data. It can be:
<ul>
 <li>a resource on the classpath</li>
 <li>a file from the filesystem, with an absolute or relative path</li>
 <li>an url</li>
</ul>  
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.timezone.id -->
  
  <configProperty name="net.sf.jasperreports.xls.timezone.id">
    <description>
String property specifying value of the time zone id to be used when parsing the Excel data.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xml.source -->
  
  <configProperty name="net.sf.jasperreports.xml.source">
    <description>
String property representing a valid path to the requested resource containing the XML data. It can be:
<ul>
 <li>a resource on the classpath</li>
 <li>a file from the filesystem, with an absolute or relative path</li>
 <li>an url</li>
</ul>  
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xpath.executer.factory -->
  
  <configProperty name="net.sf.jasperreports.xpath.executer.factory">
    <description>
Property specifying the 
<api href="net/sf/jasperreports/engine/util/xml/JRXPathExecuterFactory.html">JRXPathExecuterFactory</api> XPath executer factory implementation class name. JasperReports is shipped with two implementation of this factory interface: 
<api href="net/sf/jasperreports/engine/util/xml/XalanXPathExecuterFactory.html">XalanXPathExecuterFactory</api> and 
<api href="net/sf/jasperreports/engine/util/xml/JaxenXPathExecuter.html">JaxenXPathExecuter</api>.
    </description>
    <api>net/sf/jasperreports/engine/util/xml/JRXPathExecuterUtils.html#PROPERTY_XPATH_EXECUTER_FACTORY</api>
    <default><code>net.sf.jasperreports.engine.util.xml.XalanXPathExecuterFactory</code></default>
    <scope>Global</scope>
    <since>2.0.0</since>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xpath.field.expression -->
  
  <configProperty name="net.sf.jasperreports.xpath.field.expression">
    <description>
Property specifying the XPath expression for the dataset field in case an XML data source is used. 
This mapping was previously specified using the <code>fieldDescription</code> attribute, but using this custom property is now recommended.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.compiler.{language} -->
  
  <configProperty name="net.sf.jasperreports.compiler.{language}">
    <description>
Prefix for properties that map report compilers to expression languages.
<br/>
Properties having this prefix indicate the JRCompiler implementation to be used when compiling
report designs that rely on the expression language specified as property suffix.
<br/>
For reports that use Java as expression language (which is the default), <code>net.sf.jasperreports.engine.design.JRJdtCompiler</code> is used as report compiler, if available, and <code>net.sf.jasperreports.engine.design.JRJdk13Compiler</code> otherwise.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.compiler.classpath -->
  
  <configProperty name="net.sf.jasperreports.compiler.classpath">
    <description>
Property specifying the classpath used by the report compiler during the compilation process.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.compiler.keep.java.file -->
  
  <configProperty name="net.sf.jasperreports.compiler.keep.java.file">
    <description>
Property specifying whether the temporary source file created by the report compiler should be kept or deleted after the report compilation process ended.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.compiler.temp.dir -->
  
  <configProperty name="net.sf.jasperreports.compiler.temp.dir">
    <description>
Property specifying the temporary working directory to be used by the report compiler.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.compiler.xml.validation -->
  
  <configProperty name="net.sf.jasperreports.compiler.xml.validation">
    <description>
Property that forces the XML validation of the report template file before compiling.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.compiler.xml.parser.cache.schemas -->
  
  <configProperty name="net.sf.jasperreports.compiler.xml.parser.cache.schemas">
    <description>
Property that determines whether XML schemas/grammars are to be cached 
so that they are not read/initialized each time a report is compiled.
<br/>
Currently, setting this property is only effective when a Xerces XML 
parser is used (either a stock one from Apache or one embedded into a 
SUN JDK).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.compiler.xml.parser.factory -->
  
  <configProperty name="net.sf.jasperreports.compiler.xml.parser.factory">
    <description>
Property that gives a parser factory class which should be used 
for parsing JRXMLs.
<br/>
By default, this property is set to use <api href="net/sf/jasperreports/engine/xml/JRReportSaxParserFactory.html">JRReportSaxParserFactory</api> 
as report parser factory.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.compiler.max.groovy.method.size -->
  
  <configProperty name="net.sf.jasperreports.compiler.max.groovy.method.size">
    <description>
Property that determines the maximum size of a generated groovy method.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.compiler.max.java.method.size -->
  
  <configProperty name="net.sf.jasperreports.compiler.max.java.method.size">
    <description>
Property that determines the maximum size of a generated Java method.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.javascript.class.compiler.expressions.per.script -->
  
  <configProperty name="net.sf.jasperreports.javascript.class.compiler.expressions.per.script">
    <description>
Property that determines the maximum number of report expressions that will be included in a single generated Java class.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.javascript.class.compiler.optimization.level -->
  
  <configProperty name="net.sf.jasperreports.javascript.class.compiler.optimization.level">
    <description>
Property that determines the optimization level to use when compiling expressions into Java bytecode.
<br/>
See <a href="http://www-archive.mozilla.org/rhino/apidocs/org/mozilla/javascript/Context.html#setOptimizationLevel%28int%29"/>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.javascript.class.compiler.script.max.size -->
  
  <configProperty name="net.sf.jasperreports.javascript.class.compiler.script.max.size">
    <description>
Property that determines the maximum size of a script that will be compiled into a single Java class.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.javascript.evaluator.optimization.level -->
  
  <configProperty name="net.sf.jasperreports.javascript.evaluator.optimization.level">
    <description>
Property that determines the optimization level to use when compiling expressions into Java bytecode.
<br/>
See <a href="http://www-archive.mozilla.org/rhino/apidocs/org/mozilla/javascript/Context.html#setOptimizationLevel%28int%29"/>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.legacy.expression.parser -->
  
  <configProperty name="net.sf.jasperreports.legacy.expression.parser">
    <description>
Property that specifies whether a legacy parser method should be used to parse this expression. Default value is <code>false</code>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xml.replace.invalid.chars -->
  
  <configProperty name="net.sf.jasperreports.export.xml.replace.invalid.chars">
    <description>
Stores the text sequence used to replace invalid XML characters. 
<br/>
By default, this property is set to replace invalid chars with question marks. Depending on particular needs, the following settings are available:
<ul>
<li>to completely remove invalid XML chars from the processed text, set an empty string as property value:
<br/>
&lt;property name="net.sf.jasperreports.export.xml.replace.invalid.chars" value=""/&gt;
</li>
<li>to replace invalid XML chars with a custom char or text sequence, set the text sequence as property value. For instance:
<br/>
&lt;property name="net.sf.jasperreports.export.xml.replace.invalid.chars" value="??"/&gt;
</li>
<li>to preserve invalid chars in the processed text, either set the property with no value, or remove the property from the JasperReports context. 
Below is the property with no value set:
<br/>
&lt;property name="net.sf.jasperreports.export.xml.replace.invalid.chars"/&gt;
</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.allow.element.negative.width -->
  
  <configProperty name="net.sf.jasperreports.allow.element.negative.width">
    <description>
A property that determines whether elements having negative width values are allowed.
<br/>
If this value is set to <code>false</code>, the report is verified not
to contain elements with negative width values. This is useful when the report is
meant to be exported to grid-based formats such as HTML, XLS or CSV, which might enter
an infinite loop. Having elements with negative widths does not make sense, but allowing 
this is a workaround in case older report templates still need to pass validation
at report compile time.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.allow.element.negative.x -->
  
  <configProperty name="net.sf.jasperreports.allow.element.negative.x">
    <description>
Property that determines whether elements positioned at negative X offsets on bands, frames and other element containers are allowed in a report.
<br/>
Elements placed at negative X offsets can cause unexpected problems in grid-based exporters where they can overlap elements from previous bands/element containers.
<br/>
If the property is set to <code>false</code>, elements in the report are verified to have positive X offsets.  Otherwise, no check is performed on element X offsets.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.allow.element.negative.y -->
  
  <configProperty name="net.sf.jasperreports.allow.element.negative.y">
    <description>
Property that determines whether elements positioned at negative Y offsets on bands, frames and other element containers are allowed in a report.
<br/>
Elements placed at negative Y offsets can cause unexpected problems in grid-based exporters where they can overlap elements from previous bands/element containers.
<br/>
If the property is set to <code>false</code>, elements in the report are verified to have positive Y offsets.  Otherwise, no check is performed on element Y offsets.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.allow.element.overlap -->
  
  <configProperty name="net.sf.jasperreports.allow.element.overlap">
    <description>
A property that determines whether elements are allowed to overlap.
<br/>
If this value is set to <code>false</code>, the report is verified not
to contain elements that overlap.  This is useful when the report is
meant to be exported to grid-based formats such as HTML, XLS or CSV.
Setting this property to <code>false</code> ensures that element overlap
issues are caught at report compile time.
<br/>
Additionally, when this property is set to false <code>false</code>, the
report is verified not to have any content in the background section as
this content would likely be overlapped by other sections and would not
show in grid-based exporters.
<br/>
By default, the property is set to <code>true</code> which means that
no element overlap checks are performed.
<br/>
The property can be set at the following levels:
<ul>
	<li>At global level (in jasperreports.properties) to provide a default
value.</li>
	<li>At report level, to indicate whether element overlap checks are to
be performed for the report.  If not set, the global property value is
used.</li>
	<li>At report element level to specify that the particular element is
allowed to overlap or be overlapped by other elements, when the report
or global property determines report element overlap verification.
The element level property is only effective when set to <code>true</code>;
setting the property to <code>false</code> does not make the verifier
check for overlaps when the report is not set to be checked for element
overlaps.</li>
</ul>
<br/>
Note that print when expressions or export filters cannot be taken into
consideration while checking for overlapping elements as this check is
performed at report compilation time.
If a report contains two elements that overlap but have print when
expressions that guarantee that only one of them will be printed,
or if export filters are in place to exclude one of the elements,
one of them should be explicitly marked to allow element overlap
when the report is configured to check for overlaps.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.mode -->
  
  <configProperty name="net.sf.jasperreports.style.mode">
    <description>
Property used to configure dynamic style mode for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related style mode of the element.
<br/>
Possible values are:
<ul>
<li><code>Opaque</code></li>
<li><code>Transparent</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.backcolor -->
  
  <configProperty name="net.sf.jasperreports.style.backcolor">
    <description>
Property used to configure dynamic style background color for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related style background color of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.forecolor -->
  
  <configProperty name="net.sf.jasperreports.style.forecolor">
    <description>
Property used to configure dynamic style forecolor for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related style forecolor of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.fill -->
  
  <configProperty name="net.sf.jasperreports.style.fill">
    <description>
Property used to configure dynamic fill pattern style for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related fill pattern style of the element.
<br/>
Possible values are:
<ul>
<li><code>Solid</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.radius -->
  
  <configProperty name="net.sf.jasperreports.style.radius">
    <description>
Property used to configure dynamic corner radius for rectangle elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related corner radius of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.scaleImage -->
  
  <configProperty name="net.sf.jasperreports.style.scaleImage">
    <description>
Property used to configure dynamic scale image style for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related scale image style of the element.
<br/>
Possible values are:
<ul>
<li><code>Clip</code></li>
<li><code>FillFrame</code></li>
<li><code>RetainShape</code></li>
<li><code>RealHeight</code></li>
<li><code>RealSize</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.hAlign -->
  
  <configProperty name="net.sf.jasperreports.style.hAlign">
    <description>
<b>Deprecated</b> since v.6.0.2 - replaced with <a href="#net.sf.jasperreports.style.hTextAlign" target="_blank">net.sf.jasperreports.style.hTextAlign</a> 
or <a href="#net.sf.jasperreports.style.hImageAlign" target="_blank">net.sf.jasperreports.style.hImageAlign</a>.<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.vAlign -->
  
  <configProperty name="net.sf.jasperreports.style.vAlign">
    <description>
<b>Deprecated</b> since v.6.0.2 - replaced with <a href="#net.sf.jasperreports.style.vTextAlign" target="_blank">net.sf.jasperreports.style.vTextAlign</a> 
or <a href="#net.sf.jasperreports.style.vImageAlign" target="_blank">net.sf.jasperreports.style.vImageAlign</a>.<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.hTextAlign -->
  
  <configProperty name="net.sf.jasperreports.style.hTextAlign">
    <description>
Property used to configure dynamic horizontal text alignment for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related horizontal text alignment of the element.
<br/>
Possible values are:
<ul>
<li><code>Left</code></li>
<li><code>Center</code></li>
<li><code>Right</code></li>
<li><code>Justified</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.vTextAlign -->
  
  <configProperty name="net.sf.jasperreports.style.vTextAlign">
    <description>
Property used to configure dynamic vertical text alignment for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related vertical text alignment of the element.
<br/>
Possible values are:
<ul>
<li><code>Top</code></li>
<li><code>Middle</code></li>
<li><code>Bottom</code></li>
<li><code>Justified</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.hImageAlign -->
  
  <configProperty name="net.sf.jasperreports.style.hImageAlign">
    <description>
Property used to configure dynamic horizontal image alignment for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related horizontal image alignment of the element.
<br/>
Possible values are:
<ul>
<li><code>Left</code></li>
<li><code>Center</code></li>
<li><code>Right</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.vImageAlign -->
  
  <configProperty name="net.sf.jasperreports.style.vImageAlign">
    <description>
Property used to configure dynamic vertical image alignment for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related vertical image alignment of the element.
<br/>
Possible values are:
<ul>
<li><code>Top</code></li>
<li><code>Middle</code></li>
<li><code>Bottom</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.rotation -->
  
  <configProperty name="net.sf.jasperreports.style.rotation">
    <description>
Property used to configure dynamic text or image rotation for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related text rotation of the element.
<br/>
Possible values are:
<ul>
<li><code>None</code></li>
<li><code>Left</code></li>
<li><code>Right</code></li>
<li><code>UpsideDown</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.markup -->
  
  <configProperty name="net.sf.jasperreports.style.markup">
    <description>
Property used to configure dynamic text markup style for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related text markup style of the element.
<br/>
Possible values are:
<ul>
<li><code>none</code></li>
<li><code>styled</code></li>
<li><code>html</code></li>
<li><code>rtf</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.pattern -->
  
  <configProperty name="net.sf.jasperreports.style.pattern">
    <description>
Property used to configure dynamic format pattern for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related format pattern of the text element. 
Also, the value of this property is overridden by the <code>&lt;patternExpression/&gt;</code>, if present.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.isBlankWhenNull -->
  
  <configProperty name="net.sf.jasperreports.style.isBlankWhenNull">
    <description>
Property used to specify whether null content of a report element should be rendered as blank space. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the value of <code>isBlankWhenNull</code> feature of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.fontName -->
  
  <configProperty name="net.sf.jasperreports.style.fontName">
    <description>
Property used to configure dynamic font name for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related font name in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.fontSize -->
  
  <configProperty name="net.sf.jasperreports.style.fontSize">
    <description>
Property used to configure dynamic font size for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related font size in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.isBold -->
  
  <configProperty name="net.sf.jasperreports.style.isBold">
    <description>
Boolean property used to configure dynamic font bold style for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related font bold style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.isItalic -->
  
  <configProperty name="net.sf.jasperreports.style.isItalic">
    <description>
Boolean property used to configure dynamic font italic style for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related font italic style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.isUnderline -->
  
  <configProperty name="net.sf.jasperreports.style.isUnderline">
    <description>
Boolean property used to configure dynamic font underline style for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related font underline style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.isStrikeThrough -->
  
  <configProperty name="net.sf.jasperreports.style.isStrikeThrough">
    <description>
Boolean property used to configure dynamic font strike through style for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related font strike through style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.pdfFontName -->
  
  <configProperty name="net.sf.jasperreports.style.pdfFontName">
    <description>
Property used to configure dynamic PDF font name for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related PDF font name in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.pdfEncoding -->
  
  <configProperty name="net.sf.jasperreports.style.pdfEncoding">
    <description>
Property used to configure dynamic PDF encoding character set for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related PDF encoding character set in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.isPdfEmbedded -->
  
  <configProperty name="net.sf.jasperreports.style.isPdfEmbedded">
    <description>
Boolean property used to specify whether the font should be embedded in the PDF output. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related <code>isPdfEmbedded</code> style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.pen.lineWidth -->
  
  <configProperty name="net.sf.jasperreports.style.pen.lineWidth">
    <description>
Property used to configure dynamic pen line width for shape elements (line, rectangle, ellipse). It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related pen line width in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.pen.lineStyle -->
  
  <configProperty name="net.sf.jasperreports.style.pen.lineStyle">
    <description>
Property used to configure dynamic pen line style for shape elements (line, rectangle, ellipse). It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related pen line style of the element.
<br/>
Possible values are:
<ul>
<li><code>Solid</code></li>
<li><code>Dashed</code></li>
<li><code>Dotted</code></li>
<li><code>Double</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.pen.lineColor -->
  
  <configProperty name="net.sf.jasperreports.style.pen.lineColor">
    <description>
Property used to configure dynamic pen line color for shape elements (line, rectangle, ellipse). It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related pen line color in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.padding -->
  
  <configProperty name="net.sf.jasperreports.style.box.padding">
    <description>
Property used to configure dynamic padding style for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related padding style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.topPadding -->
  
  <configProperty name="net.sf.jasperreports.style.box.topPadding">
    <description>
Property used to configure dynamic top padding style for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related top padding style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.leftPadding -->
  
  <configProperty name="net.sf.jasperreports.style.box.leftPadding">
    <description>
Property used to configure dynamic left padding style for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related left padding style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.rightPadding -->
  
  <configProperty name="net.sf.jasperreports.style.box.rightPadding">
    <description>
Property used to configure dynamic right padding style for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related right padding style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.bottomPadding -->
  
  <configProperty name="net.sf.jasperreports.style.box.bottomPadding">
    <description>
Property used to configure dynamic bottom padding style for report elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related bottom padding style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.style.box.pen.lineWidth -->
  
  <configProperty name="net.sf.jasperreports.style.box.pen.lineWidth">
    <description>
Property used to configure dynamic pen line width for report element's border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related border pen line width in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.pen.lineStyle -->
  
  <configProperty name="net.sf.jasperreports.style.box.pen.lineStyle">
    <description>
Property used to configure dynamic pen line style for report element's border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related border pen line style of the element.
<br/>
Possible values are:
<ul>
<li><code>Solid</code></li>
<li><code>Dashed</code></li>
<li><code>Dotted</code></li>
<li><code>Double</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.pen.lineColor -->
  
  <configProperty name="net.sf.jasperreports.style.box.pen.lineColor">
    <description>
Property used to configure dynamic pen line color for report element's border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related border pen line color in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.top.pen.lineWidth -->
  
  <configProperty name="net.sf.jasperreports.style.box.top.pen.lineWidth">
    <description>
Property used to configure dynamic pen line width for report element's top border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related top border pen line width in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.top.pen.lineStyle -->
  
  <configProperty name="net.sf.jasperreports.style.box.top.pen.lineStyle">
    <description>
Property used to configure dynamic pen line style for report element's top border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related top border pen line style of the element.
<br/>
Possible values are:
<ul>
<li><code>Solid</code></li>
<li><code>Dashed</code></li>
<li><code>Dotted</code></li>
<li><code>Double</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.top.pen.lineColor -->
  
  <configProperty name="net.sf.jasperreports.style.box.top.pen.lineColor">
    <description>
Property used to configure dynamic pen line color for report element's top border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related top border pen line color in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.style.box.left.pen.lineWidth -->
  
  <configProperty name="net.sf.jasperreports.style.box.left.pen.lineWidth">
    <description>
Property used to configure dynamic pen line width for report element's left border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related left border pen line width in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.left.pen.lineStyle -->
  
  <configProperty name="net.sf.jasperreports.style.box.left.pen.lineStyle">
    <description>
Property used to configure dynamic pen line style for report element's left border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related left border pen line style of the element.
<br/>
Possible values are:
<ul>
<li><code>Solid</code></li>
<li><code>Dashed</code></li>
<li><code>Dotted</code></li>
<li><code>Double</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.left.pen.lineColor -->
  
  <configProperty name="net.sf.jasperreports.style.box.left.pen.lineColor">
    <description>
Property used to configure dynamic pen line color for report element's left border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related left border pen line color in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  

  <!-- net.sf.jasperreports.style.box.right.pen.lineWidth -->
  
  <configProperty name="net.sf.jasperreports.style.box.right.pen.lineWidth">
    <description>
Property used to configure dynamic pen line width for report element's right border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related right border pen line width in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.right.pen.lineStyle -->
  
  <configProperty name="net.sf.jasperreports.style.box.right.pen.lineStyle">
    <description>
Property used to configure dynamic pen line style for report element's right border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related right border pen line style of the element.
<br/>
Possible values are:
<ul>
<li><code>Solid</code></li>
<li><code>Dashed</code></li>
<li><code>Dotted</code></li>
<li><code>Double</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.right.pen.lineColor -->
  
  <configProperty name="net.sf.jasperreports.style.box.right.pen.lineColor">
    <description>
Property used to configure dynamic pen line color for report element's right border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related right border pen line color in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.style.box.bottom.pen.lineWidth -->
  
  <configProperty name="net.sf.jasperreports.style.box.bottom.pen.lineWidth">
    <description>
Property used to configure dynamic pen line width for report element's bottom border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related bottom border pen line width in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.bottom.pen.lineStyle -->
  
  <configProperty name="net.sf.jasperreports.style.box.bottom.pen.lineStyle">
    <description>
Property used to configure dynamic pen line style for report element's bottom border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related bottom border pen line style of the element.
<br/>
Possible values are:
<ul>
<li><code>Solid</code></li>
<li><code>Dashed</code></li>
<li><code>Dotted</code></li>
<li><code>Double</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.box.bottom.pen.lineColor -->
  
  <configProperty name="net.sf.jasperreports.style.box.bottom.pen.lineColor">
    <description>
Property used to configure dynamic pen line color for report element's bottom border. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related bottom border pen line color in the element style.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.paragraph.lineSpacing -->
  
  <configProperty name="net.sf.jasperreports.style.paragraph.lineSpacing">
    <description>
Property used to configure dynamic paragraph line spacing style for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related line spacing style of the element.
<br/>
Possible values are:
<ul>
<li><code>Single</code></li>
<li><code>1_1_2</code></li>
<li><code>Double</code></li>
<li><code>AtLeast</code></li>
<li><code>Fixed</code></li>
<li><code>Proportional</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.paragraph.lineSpacingSize -->
  
  <configProperty name="net.sf.jasperreports.style.paragraph.lineSpacingSize">
    <description>
Property used to configure dynamic paragraph line spacing size for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related paragraph line spacing size of the element. 
This value is used in combination with the size-dependent <a href="#net.sf.jasperreports.style.paragraph.lineSpacing" target="_blank">line spacings</a>:
<ul>
<li><code>AtLeast</code></li>
<li><code>Fixed</code></li>
<li><code>Proportional</code></li>
</ul>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.paragraph.firstLineIndent -->
  
  <configProperty name="net.sf.jasperreports.style.paragraph.firstLineIndent">
    <description>
Property used to configure dynamic paragraph first line indent (in pixels) for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related paragraph first line indent of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  

  <!-- net.sf.jasperreports.style.paragraph.leftIndent -->
  
  <configProperty name="net.sf.jasperreports.style.paragraph.leftIndent">
    <description>
Property used to configure dynamic paragraph left indent (in pixels) for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related paragraph left indent of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.paragraph.rightIndent -->
  
  <configProperty name="net.sf.jasperreports.style.paragraph.rightIndent">
    <description>
Property used to configure dynamic paragraph right indent (in pixels) for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related paragraph right indent of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.paragraph.spacingBefore -->
  
  <configProperty name="net.sf.jasperreports.style.paragraph.spacingBefore">
    <description>
Property used to configure dynamic spacing before paragraph (in pixels) for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related spacing before paragraph style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.paragraph.spacingAfter -->
  
  <configProperty name="net.sf.jasperreports.style.paragraph.spacingAfter">
    <description>
Property used to configure dynamic spacing after paragraph (in pixels) for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related spacing after paragraph style of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.style.paragraph.tabStopWidth -->
  
  <configProperty name="net.sf.jasperreports.style.paragraph.tabStopWidth">
    <description>
Property used to configure dynamic paragraph tab stop width (in pixels) for text elements. It is declared in the 
<api href="net/sf/jasperreports/engine/style/PropertyStyleProvider.html">PropertyStyleProvider</api> class 
(which is the default JR implementation of the <api href="net/sf/jasperreports/engine/style/StyleProvider.html">StyleProvider</api> interface). 
<br/>
If such a property is found at element level, its value will override the related paragraph tab stop width of the element.
<br/>
<br/>
See also <a href="./sample.reference/crosstabs/index.html#dynamic_styles" target="_blank">this page</a>. 
    </description>
  </configProperty>
    
  
  <!-- net.sf.jasperreports.styles.inherit.from.default -->
  
  <configProperty name="net.sf.jasperreports.styles.inherit.from.default">
    <description>
Specifies whether report styles that do not have a parent specified would rely on the default style as parent for property inheritance. 
Before version 6.2.1, styles without parent were not inheriting from default style.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.band.split.type -->
  
  <configProperty name="net.sf.jasperreports.band.split.type">
    <description>
Specifies the default split type for bands. See the splitType attribute of the report band. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.pie.ignore.duplicated.key -->
  
  <configProperty name="net.sf.jasperreports.chart.pie.ignore.duplicated.key">
    <description>
Specifies whether duplicated key entries in pie dataset should be ignored and only the last value be considered, or whether an exception should be raised instead.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.render.type -->
  
  <configProperty name="net.sf.jasperreports.chart.render.type">
    <description>
Specifies the default render type for charts. See the <code>renderType</code> attribute of the chart elements.
<br/>
Possible values are:
<ul>
<li><code>draw</code></li>
<li><code>image</code></li>
<li><code>svg</code></li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.renderer.factory.{render_type} -->
  
  <configProperty name="net.sf.jasperreports.chart.renderer.factory.{render_type}">
    <description>
Prefix for properties that map chart renderers.
<br/>
Properties having this prefix indicate the JRRenderable implementation to be used when rendering
a chart element having a rendering type specified in the property suffix.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.theme -->
  
  <configProperty name="net.sf.jasperreports.chart.theme">
    <description>
Property used to specify the chart theme name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.customizer.class.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.customizer.class.{arbitrary_name}">
    <description>
Properties having this prefix specify the name of a class that implements the <api href="net/sf/jasperreports/engine/JRChartCustomizer.html">JRChartCustomizer</api> 
interface and has an empty constructor.
This class will be used to instantiate a chart customizer object that will be then called to customize the chart produced by the element.
The {arbitrary_name} suffix of the property is considered to be the name of the chart customizer instance and in case the chart customizer class
implements the <api href="net/sf/jasperreports/engine/NamedChartCustomizer.html">NamedChartCustomizer</api> interface, this name is passed to it after instantiation 
using the setName(String) method.
Named customizer implementations such as the ones extending the <api href="net/sf/jasperreports/engine/JRAbstractChartCustomizer.html">JRAbstractChartCustomizer</api> could 
use this name to read custom chart element properties that are supposed to be their own, because they have this name as part of the full custom property name in the form of 
net.sf.jasperreports.customizer.{arbitrary_name}.{property_name}. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.customizer.{arbitrary_name}.{property_name} -->
  
  <configProperty name="net.sf.jasperreports.customizer.{arbitrary_name}.{property_name}">
    <description>
Properties having this form are usually supposed to be read by <api href="net/sf/jasperreports/engine/NamedChartCustomizer.html">NamedChartCustomizer</api> 
instances assigned to a chart element using a custom property in the form of 
<a href="#net.sf.jasperreports.customizer.class.{arbitrary_name}" target="_blank">net.sf.jasperreports.customizer.class.{arbitrary_name}</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.consume.space.on.overflow -->
  
  <configProperty name="net.sf.jasperreports.consume.space.on.overflow">
    <description>
Property used to force the expanding text fields to occupy all remaining space at the bottom of the page so that no other element renders there.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.scale.font.step.limit -->
  
  <configProperty name="net.sf.jasperreports.scale.font.step.limit">
    <description>
Property used to specify the minimum amount when scaling down font size to adjust the content in text elements. 
This works in conjunction with the <code>textAdjust</code> property of text elements which needs to be set to <code>ScaleFont</code> value.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.default.first.line.indent -->
  
  <configProperty name="net.sf.jasperreports.default.first.line.indent">
    <description>
Specifies the default value (in pixels) for the first line indent, if no explicit information is provided in a JR paragraph. 
<br/>
By default the first line in JR paragraphs has no indentation. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.default.font.name -->
  
  <configProperty name="net.sf.jasperreports.default.font.name">
    <description>
Specifies the default font name when no default font is explicitly given in a report.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.default.font.size -->
  
  <configProperty name="net.sf.jasperreports.default.font.size">
    <description>
Specifies the default font size when no default font size is explicitly given in a report.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.default.left.indent -->
  
  <configProperty name="net.sf.jasperreports.default.left.indent">
    <description>
Specifies the default value (in pixels) for the left indent, if no explicit information is provided in a JR paragraph. 
<br/>
By default JR paragraphs provide no left indentation. 
    </description>
  </configProperty>
  

  <!-- net.sf.jasperreports.default.line.spacing.size -->
  
  <configProperty name="net.sf.jasperreports.default.line.spacing.size">
    <description>
Specifies the default value for the text line spacing size, if no explicit information is provided in a 
JR paragraph. 
<br/>
This value is used in combination with the size-dependent line spacings in 
<api href="net/sf/jasperreports/engine/type/LineSpacingEnum.html">LineSpacingEnum</api>:
<ul>
 <li><api href="net/sf/jasperreports/engine/type/LineSpacingEnum.html#AT_LEAST">AT_LEAST</api></li>
 <li><api href="net/sf/jasperreports/engine/type/LineSpacingEnum.html#FIXED">FIXED</api></li>
<li><api href="net/sf/jasperreports/engine/type/LineSpacingEnum.html#PROPORTIONAL">PROPORTIONAL</api></li>
</ul>
    </description>
  </configProperty>
  

  <!-- net.sf.jasperreports.default.right.indent -->
  
  <configProperty name="net.sf.jasperreports.default.right.indent">
    <description>
Specifies the default value (in pixels) for the right indent, if no explicit information is provided in a JR paragraph. 
<br/>
By default JR paragraphs provide no right indentation. 
    </description>
  </configProperty>
  

  <!-- net.sf.jasperreports.default.spacing.after -->
  
  <configProperty name="net.sf.jasperreports.default.spacing.after">
    <description>
Specifies the default value (in pixels) for the spacing after lines, if no explicit information is provided in a JR paragraph. 
<br/>
By default JR paragraphs provide no spacing after lines. 
    </description>
  </configProperty>
  

  <!-- net.sf.jasperreports.default.spacing.before -->
  
  <configProperty name="net.sf.jasperreports.default.spacing.before">
    <description>
Specifies the default value (in pixels) for the spacing before lines, if no explicit information is provided in a JR paragraph. 
<br/>
By default JR paragraphs provide no spacing before lines. 
    </description>
  </configProperty>
  

  <!-- net.sf.jasperreports.default.tab.stop.width -->
  
  <configProperty name="net.sf.jasperreports.default.tab.stop.width">
    <description>
Specifies the default value (in pixels) for the tab stop width, if no explicit information is provided in a paragraph. 
<br/>
By default JR paragraphs provide 40 pixels wide tab stops. 
    </description>
  </configProperty>
  

  <!-- net.sf.jasperreports.image.encoder -->
  
  <configProperty name="net.sf.jasperreports.image.encoder">
    <description>
Property specifying the name of the class implementing the 
<api href="net/sf/jasperreports/engine/util/JRImageEncoder.html">JRImageEncoder</api> interface to be used by the engine. 
If not set, the engine will try to an image encoder implementation that corresponds to the JVM version.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.image.reader -->
  
  <configProperty name="net.sf.jasperreports.image.reader">
    <description>
Property specifying the name of the class implementing the 
<api href="net/sf/jasperreports/engine/util/JRImageReader.html">JRImageReader</api> interface to be used by the engine. 
If not set, the engine will try to an image reader implementation that corresponds to the JVM version.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.markup.processor.factory.{markup} -->
  
  <configProperty name="net.sf.jasperreports.markup.processor.factory.{markup}">
    <description>
Prefix for properties that map markup text processors.
<br/>
Properties having this prefix indicate the MarkupProcessor implementation to be used when parsing 
a given styled text having the markup type specified in the property suffix.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.print.collapse.missing.bookmark.levels -->
  
  <configProperty name="net.sf.jasperreports.print.collapse.missing.bookmark.levels">
    <description>
This property is used to determine whether missing bookmarks levels should be colapsed when 
the propety <a href="#net.sf.jasperreports.print.create.bookmarks">net.sf.jasperreports.print.create.bookmarks</a> is set
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.print.create.bookmarks -->
  
  <configProperty name="net.sf.jasperreports.print.create.bookmarks">
    <description>
Property used to determine whether bookmarks should be collected at report generation time.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.print.keep.full.text -->
  
  <configProperty name="net.sf.jasperreports.print.keep.full.text">
    <description>
Property used to determine whether the fill process must preserve the original text for text elements that are not able to fit their entire contents.
When this property is set, the engine saves the original text in the <api href="net/sf/jasperreports/engine/JRPrintText.html">JRPrintText</api> print text object, along with the index at which the text is to be truncated by the print object.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.print.transfer.{arbitrary_suffix} -->
  
  <configProperty name="net.sf.jasperreports.print.transfer.{arbitrary_suffix}">
    <description>
Properties having this prefix specify the properties to be transfered from report templates to print objects during the report filling.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.text.truncate.at.char -->
  
  <configProperty name="net.sf.jasperreports.text.truncate.at.char">
    <description>
Boolean property that determines whether text elements are to be truncated at the last character that fits.
By default, when the entire text of a text element does not fit the element's area, the text is truncated at the last word that fits the area.<br/>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.text.truncate.suffix -->
  
  <configProperty name="net.sf.jasperreports.text.truncate.suffix">
    <description>
Property whose value is used as a suffix for the truncated text.
The suffix is appended to the text when truncation occurs.
If the property is not defined or empty (which is the case by default), no suffix will be used when the text is truncated.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.text.measurer.factory -->
  
  <configProperty name="net.sf.jasperreports.text.measurer.factory">
    <description>
This property can either hold the name of a text measurer factory class, or hold an alias of a text measurer factory class property.
One can write an implementation of the <api href="net/sf/jasperreports/engine/util/JRTextMeasurerFactory.html">JRTextMeasurerFactory</api> interface.  This will usually imply writing a custom implementation of the <api href="net/sf/jasperreports/engine/fill/JRTextMeasurer.html">JRTextMeasurer</api> interface, either from scratch or by extending the default implementation (<api href="net/sf/jasperreports/engine/fill/TextMeasurer.html">TextMeasurer</api>).
A text measurer is responsible with computing text layout attributes (in the form of <api href="net/sf/jasperreports/engine/fill/JRMeasuredText.html">JRMeasuredText</api> instances) for report text elements.  The measurer is only used at report fill time, the exporters will use the computed text layout attributes. 
Then one can define an alias of the text measurer factory implementation by declaring a property <code>named net.sf.jasperreports.text.measurer.factory.{alias}</code> which has the name of the factory class as value. 
The <code>net.sf.jasperreports.text.measurer.factory</code> property is set to a defined alias or a full factory class name. 
The factory class is used to instantiate text measurers for report text elements, which are then used to compute the text layout attributes. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.text.save.line.breaks -->
  
  <configProperty name="net.sf.jasperreports.text.save.line.breaks">
    <description>
Boolean property that determines whether the positions where text line
break occurs are to be saved during report fill in oder to be used at
export time.
<br/>
At report fill time, each text element is measured in order to determine
how long it needs to stretch or where it needs to be truncated.
During this measurement, the text wraps at certain positions in order to
fit the text element defined width.
<br/>
Setting this property to true instructs the engine to save the positions
at which line breaks occur in the generated print element.
The positions can be used by report exporters that want to enforce line
breaks to occur at exactly the same position as they did during text
measurement at fill time.
<br/>
Currently, the HTML exporter will make use of the saved line break
positions by introducing explicit line breaks.
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.virtualizer.files.delete.on.exit -->
  
  <configProperty name="net.sf.jasperreports.virtualizer.files.delete.on.exit">
    <description>
Property used to decide whether <code>java.io.File#deleteOnExit()</code> should be requested for temporary files created by the virtualizer.
Temporary files will be deleted by explicitly calling <code>cleanup()</code> or from the virtualizer <code>finalize()</code> method.
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.virtual.page.element.size -->
  
  <configProperty name="net.sf.jasperreports.virtual.page.element.size">
    <description>
Property that determines how many print elements will make up a virtual page handled as a unit by the virtualizer.

<p>
For most paginated reports, a virtual page corresponds to a report page.
But for non-paginated reports and for reports having very large pages, a report page is broken into several virtual pages which are handled individually by the virtualizer.
</p>

<p>
This property provides the size of a virtual page in print elements.
Note that virtual page sizes will actually vary around the configured size since there are cases when fewer elements remain on a report page and cases when the configured size is exceeded due to print frames being included at the end of virtual page.
</p>
 
<p>
If set to 0 or negative, report pages will not be broken into several virtual pages.
</p>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.when.no.data.type -->
  
  <configProperty name="net.sf.jasperreports.when.no.data.type">
    <description>
Property that specifies a default value for the <code>whenNoDataType</code> attribute of report.
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.subreport.generate.rectangle -->
  
  <configProperty name="net.sf.jasperreports.subreport.generate.rectangle">
    <description>
Property used to specify when rectangle elements should be generated  for subreports during the report filling. 
If the property value is <code>always</code>, rectangle elements will be always generated, otherwise they will be created 
only if the subreport element is not transparent or it has properties.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.subreport.runner.factory -->
  
  <configProperty name="net.sf.jasperreports.subreport.runner.factory">
    <description>
Property specifying the <api href="net/sf/jasperreports/engine/fill/JRSubreportRunnerFactory.html">JRSubreportRunnerFactory</api> implementation to use for creating subreport runners.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.legacy.element.stretch.enabled -->
  
  <configProperty name="net.sf.jasperreports.legacy.element.stretch.enabled">
    <description>
Property that indicates whether a legacy stretch type for the element is enabled.
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.legacy.band.evaluation.enabled -->
  
  <configProperty name="net.sf.jasperreports.legacy.band.evaluation.enabled">
    <description>
Property that indicates whether the legacy band evaluation is enabled.
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.evaluator.class.reference.fix.enabled -->
  
  <configProperty name="net.sf.jasperreports.evaluator.class.reference.fix.enabled">
    <description>
Property that indicates whether a legacy fix for a JVM issue related to
evaluator classes generated by JasperReports is enabled.  The fix is
enabled by default.
<br/>
Due to the fix, the garbage collector might not be able to collect
a classloader that loaded JasperReports classes.   This would be
inconvenient in scenarios in which JasperReports classes are repeatedly
loaded by different classloaders, e.g. when JasperReports is part of
the classpath of a web application which is often reloaded.  In such
scenarios, set this property to false.
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.evaluator.ignore.npe -->
  
  <configProperty name="net.sf.jasperreports.evaluator.ignore.npe">
    <description>
The expression evaluation engine in JasperReports has always ignored 
java.lang.NullPointerException exceptions raised during expression evaluation. 
An expression raising NullPointerException is evaluated to null. 
However, in certain cases, users want to be able to track down the source of 
their NPE and this configuration property can be set to instruct the expression 
evaluation engine to treat NPEs just the way all other expression exceptions are treated.
<br/> 
The default value of this configuration property is true, meaning NPEs are ignored. 
The property can be set globally, at report or at dataset level.
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.style.evaluation.time.enabled -->
  
  <configProperty name="net.sf.jasperreports.style.evaluation.time.enabled">
    <description>
A flag the determines whether the style of an element is evaluated at
the element evaluation time, or at the time the band on which the element 
is placed is rendered.
<br/>
This applies to report elements that can have delayed evaluations times 
(such as text fields and images).  When this flag is set to
<code>true</code>, conditional style expressions of the style that is
associated with the element are evaluated at the moment the element is
set to evaluate, and the resulting style to the generated print element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.governor.max.pages.enabled -->
  
  <configProperty name="net.sf.jasperreports.governor.max.pages.enabled">
    <description>
A flag indicating whether the governor that checks if a report exceeds a specified limit of pages is turned on. 
With this property enabled, the JR engine will stop the report execution if the number of pages becomes greater than a 
custom given value. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.governor.max.pages -->
  
  <configProperty name="net.sf.jasperreports.governor.max.pages">
    <description>
If the governor that checks if a report exceeds a specified limit of pages is turned on, this property will indicate the 
maximum number of pages allowed to be ran, in order to prevent a memory overflow error. If the number of pages in the report 
becomes greater than this value, the report execution will be stopped. 
    </description>
    <api>net/sf/jasperreports/governors/MaxPagesGovernor.html#PROPERTY_MAX_PAGES</api>
    <default>N/A</default>
    <scope>Global | Report</scope>
    <since>3.1.4</since>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.governor.timeout.enabled -->
  
  <configProperty name="net.sf.jasperreports.governor.timeout.enabled">
    <description>
A flag indicating whether the governor that checks if the elapsed time during report execution 
exceeds a specified amount of time is turned on. 
<br/>
With this property enabled, the JR engine will stop the report execution if the elapsed time 
becomes greater than the limit value. 
<br/>
By default it should be turned off.  
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.governor.timeout -->
  
  <configProperty name="net.sf.jasperreports.governor.timeout">
    <description>
If the governor that checks if the elapsed time during report execution 
exceeds a specified amount of time is turned on, this property will indicate the 
maximum allowed amount of time, in order to prevent a memory overflow error. If this value  
becomes exceeded, the report execution will be stopped. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.crosstab.bucket.measure.limit -->
  
  <configProperty name="net.sf.jasperreports.crosstab.bucket.measure.limit">
    <description>
Property that limits the number of buckets in a crosstab, to avoid out of memory errors.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.crosstab.cell.type -->
  
  <configProperty name="net.sf.jasperreports.crosstab.cell.type">
    <description>
Property that provides the type of the cell that generated a print frame. (FIXME not a user defined property)
<br/>
The property value is one of
<ul>
	<li><api href="net/sf/jasperreports/crosstabs/JRCellContents.html#TYPE_CROSSTAB_HEADER">TYPE_CROSSTAB_HEADER</api></li>
	<li><api href="net/sf/jasperreports/crosstabs/JRCellContents.html#TYPE_COLUMN_HEADER">TYPE_COLUMN_HEADER</api></li>
	<li><api href="net/sf/jasperreports/crosstabs/JRCellContents.html#TYPE_ROW_HEADER">TYPE_ROW_HEADER</api></li>
	<li><api href="net/sf/jasperreports/crosstabs/JRCellContents.html#TYPE_DATA">TYPE_DATA</api></li>
	<li><api href="net/sf/jasperreports/crosstabs/JRCellContents.html#TYPE_NO_DATA_CELL">TYPE_NO_DATA_CELL</api></li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.crosstab.cell.row.span -->
  
  <configProperty name="net.sf.jasperreports.crosstab.cell.row.span">
    <description>
Property that provides the crosstab row span of a print frame. (FIXME not a user defined property)
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.crosstab.cell.column.span -->
  
  <configProperty name="net.sf.jasperreports.crosstab.cell.column.span">
    <description>
Property that provides the crosstab column span of a print frame. (FIXME not a user defined property)
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.crosstab.column.header.sort.measure.index -->
  
  <configProperty name="net.sf.jasperreports.crosstab.column.header.sort.measure.index">
    <description>
Property that provides the index of measure to be used for sorting the crosstab.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.crosstab.ignore.width -->
  
  <configProperty name="net.sf.jasperreports.crosstab.ignore.width">
    <description>
Property that provides the default value for the crosstab <code>ignoreWidth</code> attribute.
    </description>
  </configProperty>

  <!-- net.sf.jasperreports.crosstab.interactive -->

  <configProperty name="net.sf.jasperreports.crosstab.interactive">
    <description>
Property that enables/disables the interactivity in the crosstab component.
    </description>
  </configProperty>

  <!-- net.sf.jasperreports.crosstab.floating.headers -->

  <configProperty name="net.sf.jasperreports.crosstab.floating.headers">
    <description>
Property that enables/disables the floating headers in the crosstab component when scrolling.
<br/>
If the interactivity has been disabled by setting <a href="#net.sf.jasperreports.crosstab.interactive">net.sf.jasperreports.crosstab.interactive</a> to <code>false</code>, then setting this property will have no effect.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.crosstab.row.group.column.header -->

  <configProperty name="net.sf.jasperreports.crosstab.row.group.column.header">
    <description>
Property that specifies this element is the column header for a row group represented by its index.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.barcode4j.image.producer -->
  
  <configProperty name="net.sf.jasperreports.components.barcode4j.image.producer">
    <description>
Property that determines which image producer to be used for a barcode component element. The property can 
have a value of the name of the class that implements the image producer interface or an 
alias that has been set for such a class, using a property of the form 
<a href="#net.sf.jasperreports.components.barcode4j.image.producer.{alias}">net.sf.jasperreports.components.barcode4j.image.producer.{alias}</a>. 
<br/>
JasperReports provides two barcode image producer implementations: one which renders the 
barcode in SVG format and one which renders the barcode as a rasterized image. The 
first implementation is registered under the <code>svg</code> alias and is used by default; 
the second one has <code>image</code> as alias and can be used by changing the 
<a href="#net.sf.jasperreports.components.barcode4j.image.producer.{alias}">net.sf.jasperreports.components.barcode4j.image.producer.{alias}</a> 
property at any level. 
<br/>
The SVG barcode image producer uses the Barcode4J API to export the barcode to SVG, 
then it creates a SVG renderer based on the Batik SVG library. Hence, this option 
introduces a dependency on Batik for viewing or exporting a report that includes 
barcodes.
<br/> 
The rasterized image producer draws the barcode on a PNG image which can be then 
displayed in the generated report. This producer uses further properties, set at the same 
levels as the image producer property, to allow the customization of the generated image.
   	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.barcode4j.image.producer.{alias} -->
  
  <configProperty name="net.sf.jasperreports.components.barcode4j.image.producer.{alias}">
    <description>
Property that determines which image producer implementation to be used for an alias associated 
with the barcode component element using the <a href="#net.sf.jasperreports.components.barcode4j.image.producer">net.sf.jasperreports.components.barcode4j.image.producer</a> 
property. 
<br/>
The value of this property represents the name of the class that implements the image 
producer interface for the specified alias. 
<br/>
Rendering the barcode in SVG format is registered under the <code>svg</code> alias and is used by default; 
the built-in property value for this alias is <code>net.sf.jasperreports.components.barcode4j.BarcodeSVGImageProducer</code>.
Rendering the barcode as rasterized is registered under the <code>image</code> alias and 
the built-in property value for this alias is <code>net.sf.jasperreports.components.barcode4j.BarcodeRasterizedImageProducer</code>.
<br/>
If the <code>svg</code> alias is set, the built-in SVG renderer is based on the Batik SVG library. 
Hence, this option introduces a dependency on Batik for viewing or exporting a report that includes 
barcodes.
<br/> 
The rasterized image producer draws the barcode on a PNG image which can be then 
displayed in the generated report. This producer uses further properties, set at the same 
levels as the image producer property, to allow the customization of the generated image.
<br/>
<br/>
<b>Note: </b>This property does not apply to QRCode barcodes which are generated based on a different library (ZXing). For 
QRCode barcodes, see <a href="#net.sf.jasperreports.components.barcode4j.qrcode.producer.{alias}">net.sf.jasperreports.components.barcode4j.qrcode.producer.{alias}</a>.
   	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.barcode4j.image.antiAlias -->
  
  <configProperty name="net.sf.jasperreports.components.barcode4j.image.antiAlias">
    <description>
Flag property that specify the barcode image should use antialiasing. Default value is <code>true</code>.
   	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.barcode4j.image.gray -->
  
  <configProperty name="net.sf.jasperreports.components.barcode4j.image.gray">
    <description>
Flag property that specify the barcode image should use the gray color scheme. Default value is <code>true</code>.
   	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.barcode4j.image.resolution -->
  
  <configProperty name="net.sf.jasperreports.components.barcode4j.image.resolution">
    <description>
Property that specify the barcode image resolution (ppi). Default value is 300.
   	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.barcode4j.qrcode.producer.{alias} -->
  
  <configProperty name="net.sf.jasperreports.components.barcode4j.qrcode.producer.{alias}">
    <description>
Property that determines which image producer implementation to be used for an alias associated 
with the QRCode component element using the <a href="#net.sf.jasperreports.components.barcode4j.image.producer">net.sf.jasperreports.components.barcode4j.image.producer</a> 
property. 
<br/>
The value of this property represents the name of the class that implements the image 
producer interface for the specified alias. 
<br/>
Rendering the QRCode component in SVG format is registered under the <code>svg</code> alias and is used by default; 
the built-in property value for this alias is <code>net.sf.jasperreports.components.barcode4j.QRCodeSVGImageProducer</code>.
Rendering the QRCode component as rasterized is registered under the <code>image</code> alias and 
the built-in property value for this alias is <code>net.sf.jasperreports.components.barcode4j.QRCodeRasterizedImageProducer</code>.
   	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.map.key -->
  
  <configProperty name="net.sf.jasperreports.components.map.key">
    <description>
Property that specifies the Google Maps API key. Using an API key enables additional features: 
<ul>
<li>better Maps APIs usage monitoring in your application</li>
<li>purchasing additional quota if the usage limits are exceeded</li>
<li>allows Google contact you about your application, if necessary</li>
</ul>
<b>Note: </b>The API key <b>must not</b> be included in Google Maps API for Business requests. Business customers should send their 
<a href="#net.sf.jasperreports.components.map.client.id">client ID</a> instead.
   	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.map.google.version -->
  
  <configProperty name="net.sf.jasperreports.components.map.google.version">
    <description>
Property that indicates which version of the Google Maps API to be loaded. The version property may be set as:
<ul>
<li>experimental version - specified by including the <code>.exp</code> suffix: <code>&lt;property name="net.sf.jasperreports.components.map.google.version" value="3.exp"&gt;</code></li>
<li>release version - specified either with the release major number (<code>&lt;property name="net.sf.jasperreports.components.map.google.version" value="3"&gt;</code>) or with the release 
version number (<code>&lt;property name="net.sf.jasperreports.components.map.google.version" value="3.12"&gt;</code>)</li>
<li>numbered version - specified with the version number (<code>&lt;property name="net.sf.jasperreports.components.map.google.version" value="3.11"&gt;</code>)</li>
</ul>
If not specified, the experimental version is loaded by default.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.map.client.id -->
  
  <configProperty name="net.sf.jasperreports.components.map.client.id">
    <description>
Property that specifies the client ID for Google Maps API for Business. If set, it takes precedence over the <a href="#net.sf.jasperreports.components.map.key">API key</a> property.  
<br/>
Usually works along with the <a href="#net.sf.jasperreports.components.map.signature">signature</a> property for signed URLs.
    </description>
    <api>net/sf/jasperreports/components/map/MapComponent.html#PROPERTY_CLIENT_ID</api>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.map.signature -->
  
  <configProperty name="net.sf.jasperreports.components.map.signature">
    <description>
Property that specifies the encrypted client signature for signed request URLs. For complete information see the official <b>Authentication and Authorization</b> documentation for 
<a href="https://developers.google.com/maps/documentation/business/image/auth">Maps Image APIs</a> and 
<a href="https://developers.google.com/maps/documentation/business/webservices/auth">Web Services APIs</a>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.sort.up.arrow.char -->
  
  <configProperty name="net.sf.jasperreports.components.sort.up.arrow.char">
    <description>
Property that specifies the character to be used on the column header when the tables's column is sorted ascending
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.sort.down.arrow.char -->
  
  <configProperty name="net.sf.jasperreports.components.sort.down.arrow.char">
    <description>
Property that specifies the character to be used on the column header when the tables's column is sorted descending
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.filter.char -->
  
  <configProperty name="net.sf.jasperreports.components.filter.char">
    <description>
Property that specifies the character to be used on the column header when the tables's column has a filtered applied
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.icon.font -->
  
  <configProperty name="net.sf.jasperreports.components.icon.font">
    <description>
Global property that specifies the font to be used for the icons on the column header
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.table.generate.pdf.tags -->
  
    <configProperty name="net.sf.jasperreports.components.table.generate.pdf.tags">
    <description>
Property that enables/disables the automatic addition of specific custom properties to table cell elements, 
that would in turn trigger the creation of special document accessibility tags during PDF export.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.table.interactive -->
  
    <configProperty name="net.sf.jasperreports.components.table.interactive">
    <description>
Property that enables/disables the interactivity in the table component
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.components.table.floating.header -->

  <configProperty name="net.sf.jasperreports.components.table.floating.header">
    <description>
      Property that enables/disables the floating header in the table component when scrolling.
      <br/>
      If the interactivity has been disabled by setting <a href="#net.sf.jasperreports.components.table.interactive">net.sf.jasperreports.components.table.interactive</a> to <code>false</code>, then setting this property will have no effect.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.table.column.field -->
  
  <configProperty name="net.sf.jasperreports.components.table.column.field">
    <description>
Property that specifies the field to be used for sorting and/or filtering
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.table.column.variable -->
  
  <configProperty name="net.sf.jasperreports.components.table.column.variable">
    <description>
Property that specifies the variable to be used for sorting and/or filtering
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.table.column.sortable -->
  
  <configProperty name="net.sf.jasperreports.components.table.column.sortable">
    <description>
Property that enables/disables sorting
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.table.column.filterable -->
  
  <configProperty name="net.sf.jasperreports.components.table.column.filterable">
    <description>
Property that enables/disables filtering
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.table.column.conditionally.formattable -->
  
  <configProperty name="net.sf.jasperreports.components.table.column.conditionally.formattable">
    <description>
Property that enables/disables conditional formatting
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.table.when.no.data.type -->
  
  <configProperty name="net.sf.jasperreports.components.table.when.no.data.type">
    <description>
Property that specifies a default value for the <code>whenNoDataType</code> attribute of table components.
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.create.sort.fields.for.groups -->
  
  <configProperty name="net.sf.jasperreports.create.sort.fields.for.groups">
    <description>
Property that specifies whether additional sort fields should be created automatically to preserve 
the integrity of dataset groups, when interactive sorting is performed. The groups need to have simple 
expressions using single field or single variable reference, for this feature to work properly.
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.chart.dial.value.display.visible -->  
  
  <configProperty name="net.sf.jasperreports.chart.dial.value.display.visible">
    <description>
Property specifying whether the measured value should be rendered visible on a meter or thermometer chart's display zone.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.dial.label -->
  
  <configProperty name="net.sf.jasperreports.chart.dial.label">
    <description>
Property containing the label text attached to the measured value in a meter or thermometer chart.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.domain.axis.integer.unit -->
  
  <configProperty name="net.sf.jasperreports.chart.domain.axis.integer.unit">
    <description>
Flag property enabling the JFreeCharts engine to use integer tick units on a domain value axis. If set to true, it will take precedence over the 
<code>net.sf.jasperreports.chart.domain.axis.tick.interval</code> and <code>net.sf.jasperreports.chart.domain.axis.tick.count</code> properties.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.domain.axis.tick.count -->
  
  <configProperty name="net.sf.jasperreports.chart.domain.axis.tick.count">
    <description>
Property specifying the number of ticks on a domain value axis. If it is not set, the JFreeCharts engine will use its own defaults to instantiate the axis.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.domain.axis.tick.interval -->
  
  <configProperty name="net.sf.jasperreports.chart.domain.axis.tick.interval">
    <description>
Property specifying the interval between 2 consecutive ticks on a domain value axis. If the <code>net.sf.jasperreports.chart.domain.axis.tick.count</code> property 
is set, this interval will be neglected.
<br/>
If it is not set, the JFreeCharts engine will use its own defaults to instantiate the axis.
<br/>
By default it is not set.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.domain.axis.integer.unit -->
  
  <configProperty name="net.sf.jasperreports.chart.range.axis.integer.unit">
    <description>
Flag property enabling the JFreeCharts engine to use integer tick units on a range value axis. If set to true, it will take precedence over the 
<code>net.sf.jasperreports.chart.range.axis.tick.interval</code> and <code>net.sf.jasperreports.chart.range.axis.tick.count</code> properties.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.range.axis.tick.count -->
  
  <configProperty name="net.sf.jasperreports.chart.range.axis.tick.count">
    <description>
Property specifying the number of ticks on a range value axis. If it is not set, the JFreeCharts engine will use its own defaults to instantiate the axis.
<br/>
By default it is not set.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.chart.range.axis.tick.interval -->
  
  <configProperty name="net.sf.jasperreports.chart.range.axis.tick.interval">
    <description>
Property specifying the interval between 2 consecutive ticks on a range value axis. If the <code>net.sf.jasperreports.chart.range.axis.tick.count</code> property 
is set, this interval will be neglected.
<br/>
If it is not set, the JFreeCharts engine will use its own defaults to instantiate the axis.
<br/>
By default it is not set.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.extension.registry.factory.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.extension.registry.factory.{arbitrary_name}">
    <description>
Properties used to indicate <api href="net/sf/jasperreports/extensions/ExtensionsRegistryFactory.html">extensions registry</api> factories.
<br/>
Such factories are used by <api href="net/sf/jasperreports/extensions/DefaultExtensionsRegistry.html">the default components registry</api> class to
instantiate sub extensions registries. Each such property contains the fixed property prefix <code>net.sf.jasperreports.extension.registry.factory.</code> and an arbitrary name suffix 
which is used as registry ID when instantiating. The property should have as value the name of a 
 <api href="net/sf/jasperreports/extensions/ExtensionsRegistryFactory.html">ExtensionsRegistryFactory</api> implementation.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.extension.{registry_id}.{property_suffix} -->
  
  <configProperty name="net.sf.jasperreports.extension.{registry_id}.{property_suffix}">
    <description>
Property that can be used to provide a registry-specific property, by appending the registry ID and then a fixed property suffix to the fixed property prefix <code>net.sf.jasperreports.extension.</code>.
<br/>
For example:
<br/>
the <code>net.sf.jasperreports.extension.chart.theme.spring.beans.resource</code> contains the spring beans resource bundle location 
for the spring-based extensions registry class with the <code>"chart.theme"</code> registry ID.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.extensions.registry.class -->
  
  <configProperty name="net.sf.jasperreports.extensions.registry.class">
    <description>
A property that provides the default <api href="net/sf/jasperreports/extensions/ExtensionsRegistry.html">ExtensionsRegistry</api> 
implementation class. 
<br/>
This property is only read at initialization time, therefore changing
the property value at a later time will have no effect. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.file.buffer.os.memory.threshold -->
  
  <configProperty name="net.sf.jasperreports.file.buffer.os.memory.threshold">
    <description>
Property specifying the maximum in-memory buffer length that triggers the creation of a temporary file on disk to store further content sent to a 
<api href="net/sf/jasperreports/engine/util/FileBufferedOutputStream.html">FileBufferedOutputStream</api> instance. 
<br/>
<b>Note:</b> While the Global level setting is available for all document exporters, the Report level setting is processed for the XLSX output 
format only. To avoid memory leaks when exporting reports with a large number of sheets to XLSX format, just set this property to 0 at report level.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.image.dpi -->
  
  <configProperty name="net.sf.jasperreports.image.dpi">
    <description>
Specifies the image resolution in dots-per-inch, for the images created by the engine when rasterizing SVGs or when clipping other renderers.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.properties -->
  
  <configProperty name="net.sf.jasperreports.properties">
    <description>
The name of the system property that specifies the properties file name.
If the system property <code>net.sf.jasperreports.properties</code> has been set then the specified properties file is loaded. 
Otherwise the <code>jasperreports.properties</code> file is loaded, if found in the classpath.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.pattern.timezone -->
  
  <configProperty name="net.sf.jasperreports.pattern.timezone">
    <description>
Property that specifies the timezone ID for this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.sql.date.pattern.timezone -->
  
  <configProperty name="net.sf.jasperreports.sql.date.pattern.timezone">
    <description>
Property that specifies the timezone ID for elements of type <code>java.sql.Date</code> in the report.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.sql.time.pattern.timezone -->
  
  <configProperty name="net.sf.jasperreports.sql.time.pattern.timezone">
    <description>
Property that specifies the timezone ID for elements of type <code>java.sql.Time</code> in the report.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.sql.timestamp.pattern.timezone -->
  
  <configProperty name="net.sf.jasperreports.sql.timestamp.pattern.timezone">
    <description>
Property that specifies the timezone ID for elements of type <code>java.sql.Timestamp</code> in the report.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.report.version -->
  
  <configProperty name="net.sf.jasperreports.report.version">
    <description>
Property that specifies the JasperReports version associated with this report. Report elements/attributes newer than 
this version will be skipped by the JRXML writers (see the <code><api href="net/sf/jasperreports/engine/xml/JRXmlWriter.html">JRXmlWriter</api></code> class for example) 
during the report template generation. If not set, the version is considered to be the currenly deployed version.
	</description>
    <api>net/sf/jasperreports/engine/xml/JRXmlBaseWriter.html#PROPERTY_REPORT_VERSION</api>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.viewer.async -->
  
  <configProperty name="net.sf.jasperreports.viewer.async">
    <description>
Property that determines whether a report can be generated and displayed asynchronously in a viewer.
<br/>
Asynchronous report generation implies displaying report pages before the report is complete.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.viewer.render.buffer.max.size -->
  
  <configProperty name="net.sf.jasperreports.viewer.render.buffer.max.size">
    <description>
Maximum size (in pixels) of a buffered image that would be used by <api href="net/sf/jasperreports/view/JRViewer.html">JRViewer</api> to render a report page.
If rendering a report page would require an image larger than this threshold (i.e. image width x image height > maximum size), the report page will be rendered directly on the viewer component.
If this property is zero or negative, buffered images will never be used to render a report page.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.measure.simple.text -->
  
  <configProperty name="net.sf.jasperreports.measure.simple.text">
    <description>
Flag property that specifies whether a faster text measurer should be used for simple texts (text without markup or complex scripts). 
Default value is <code>true</code>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.measure.simple.text.element.cache.size -->
  
  <configProperty name="net.sf.jasperreports.measure.simple.text.element.cache.size">
    <description>
Property that specifies the size of the element font infos cache. Default value is 2000.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.measure.simple.text.exact -->
  
  <configProperty name="net.sf.jasperreports.measure.simple.text.exact">
    <description>
Property that specifies the exact text measuring type. Possible values are:
<ul>
<li><code>always</code> - the entire text is measured without considering possible line breaks</li>
<li><code>multiline</code> - the entire text is measured taking into account possible line breaks</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.jrxml.writer.exclude.properties.{suffix} -->
  
  <configProperty name="net.sf.jasperreports.jrxml.writer.exclude.properties.{suffix}">
    <description>
Properties having this prefix specify which properties will be excluded when a JRXML representation is extracted from an in-memory 
<api href="net/sf/jasperreports/engine/JRReport.html">JRReport</api> object. The value of such a report context property is  
a regular expression that matches property names in the <code>JRReport</code> object. Properties with matching names will be 
excluded from the generated JRXML representation.
<br/>
This feature does not apply to property expressions.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.jrxml.writer.exclude.uuids -->
  
  <configProperty name="net.sf.jasperreports.jrxml.writer.exclude.uuids">
    <description>
Property to control the writing of UUIDs for report elements and other report entities in the generated JRXML representation of the report template.
When the UUDIs are missing in the JRXML report template definition, they will be regenerated automatically on report template loading.
Excluding UUIDs from generated JRXML is useful for triggering their regeneration and thus ensuring they are unique again in case the report template source
was edited manually and UUIDs were duplicated by copy/paste.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xml.validation -->
  
  <configProperty name="net.sf.jasperreports.export.xml.validation">
    <description>
Property that forces the XML validation, when a document exported to XML format is loaded.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xml.parser.factory -->
  
  <configProperty name="net.sf.jasperreports.export.xml.parser.factory">
    <description>
Property that gives a parser factory class which should be used 
for parsing XML exports.
<br/>
By default, this property is set to use <api href="net/sf/jasperreports/engine/xml/PrintSaxParserFactory.html">PrintSaxParserFactory</api> 
as report parser factory.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.template.xml.parser.factory -->
  
  <configProperty name="net.sf.jasperreports.template.xml.parser.factory">
    <description>
Property that gives a parser factory class which should be used for parsing style templates.
<br/>
By default, this property is set to use <api href="net/sf/jasperreports/engine/xml/TemplateSaxParserFactory.html">TemplateSaxParserFactory</api> 
as style templates parser factory.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.default.pdf.font.name -->
  
  <configProperty name="net.sf.jasperreports.default.pdf.font.name">
    <description>
Property indicating the default PDF font, if not specified in the report template or at export time.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.default.pdf.encoding -->
  
  <configProperty name="net.sf.jasperreports.default.pdf.encoding">
    <description>
Property indicating the default PDF encoding, if not specified in the report template or at export time.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.default.pdf.embedded -->
  
  <configProperty name="net.sf.jasperreports.default.pdf.embedded">
    <description>
Property indicating the default PDF font embedding behavior, if not specified in the report template or at export time.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.ignore.hyperlink -->
  
  <configProperty name="net.sf.jasperreports.export.docx.ignore.hyperlink">
    <description>
This property is used by the DOCX exporter to determine if a certain hyperlink should be activated or not. 
This flag can be controlled at hyperlink declaration level by using the hyperlink parameter with the same name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.ignore.hyperlink -->
  
  <configProperty name="net.sf.jasperreports.export.html.ignore.hyperlink">
    <description>
This property is used by the HTML exporter to determine if a certain hyperlink should be activated or not. 
This flag can be controlled at hyperlink declaration level by using the hyperlink parameter with the same name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.odt.ignore.hyperlink -->
  
  <configProperty name="net.sf.jasperreports.export.odt.ignore.hyperlink">
    <description>
This property is used by the ODT exporter to determine if a certain hyperlink should be activated or not. 
This flag can be controlled at hyperlink declaration level by using the hyperlink parameter with the same name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.ignore.hyperlink -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.ignore.hyperlink">
    <description>
This property is used by the PDF exporter to determine if a certain hyperlink should be activated or not. 
This flag can be controlled at hyperlink declaration level by using the hyperlink parameter with the same name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.ignore.hyperlink -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.ignore.hyperlink">
    <description>
This property is used by the PPTX exporter to determine if a certain hyperlink should be activated or not. 
This flag can be controlled at hyperlink declaration level by using the hyperlink parameter with the same name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.rtf.ignore.hyperlink -->
  
  <configProperty name="net.sf.jasperreports.export.rtf.ignore.hyperlink">
    <description>
This property is used by the RTF exporter to determine if a certain hyperlink should be activated or not. 
This flag can be controlled at hyperlink declaration level by using the hyperlink parameter with the same name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.ignore.hyperlink -->
  
  <configProperty name="net.sf.jasperreports.export.xls.ignore.hyperlink">
    <description>
This property is used by XLS, XLSX and ODS exporters to determine if a certain hyperlink should be activated or not. 
This flag can be controlled at hyperlink declaration level by using the hyperlink parameter with the same name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.default.exclude -->
  
  <configProperty name="net.sf.jasperreports.export.default.exclude">
    <description>
Element level property that acts as default for <code>net.sf.jasperreports.export.{format}.exclude</code> properties.
Setting this property to <code>true</code> will exclude the element from all export formats except the ones for which
<code>net.sf.jasperreports.export.{format}.exclude</code> is explicitly set to <code>false</code>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.{format}.exclude -->
  
  <configProperty name="net.sf.jasperreports.export.{format}.exclude">
    <description>
Element level property to exclude elements when exporting to a specific format.
Possible values for the <code>{format}</code> token are 
<code>pdf</code>, <code>html</code>, <code>xls</code>, <code>xlsx</code>, <code>rtf</code>, <code>odt</code>, <code>ods</code>, <code>csv</code> 
and <code>txt</code>.
The element will be excluded from a specific export format if the property is set to <code>true</code> at element level.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.{format}.exclude.key.{suffix} -->
  
  <configProperty name="net.sf.jasperreports.export.{format}.exclude.key.{suffix}">
    <description>
Properties with this syntax are used by the exporters to create default exporter filter instances that filter 
out content based on element key information. Possible values for the <code>{format}</code> token are 
<code>pdf</code>, <code>html</code>, <code>xls</code>, <code>xlsx</code>, <code>rtf</code>, <code>odt</code>, <code>ods</code>, <code>csv</code> 
and <code>txt</code>. The <code>{suffix}</code> token can be either the element's key value or an arbitrary string. The value of the property, if 
defined, should be the element's key value. If the property has no value, its suffix will be assumed as a value.
<br/>
The following example shows how to specify element keys which are to be excluded
from specific export outputs:
<br/><br/><code>
  &lt;jasperReport ...&gt;
  <br/>
  &lt;!-- exclude elements with keys Image1 and Text4 from HTML export --&gt;
  <br/>
  &lt;property name="net.sf.jasperreports.export.html.exclude.key.Image1"/&gt;
  <br/>
  &lt;property name="net.sf.jasperreports.export.html.exclude.key.Text4"/&gt;
  <br/>
  &lt;!-- exclude elements with keys Image5 from PDF export --&gt;
  <br/>
  &lt;property name="net.sf.jasperreports.export.pdf.exclude.key.the.image"	value="Image5"/&gt;
  <br/>
  ...
  <br/>
  &lt;/jasperReport&gt;</code>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.{format}.exclude.origin.{suffix}.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.export.{format}.exclude.origin.{suffix}.{arbitrary_name}">
    <description>
Properties with this syntax are used by the exporters to create default exporter filter instances that filter 
out content based on element origin information. Possible values for the <code>{format}</code> token are 
<code>pdf</code>, <code>html</code>, <code>xls</code>, <code>xlsx</code>, <code>rtf</code>, <code>odt</code>, <code>csv</code> 
and <code>txt</code>. The <code>{suffix}</code> token can be: <code>band</code>, <code>group</code> or 
<code>report</code>.
<br/>
See this <a href="http://community.jaspersoft.com/wiki/how-can-i-suppress-page-headers-and-footers-when-exporting-xls">FAQ</a> for more details about filtering out content while exporting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.{format}.exclude.origin.keep.first.{suffix}.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.export.{format}.exclude.origin.keep.first.{suffix}.{arbitrary_name}">
    <description>
Properties with this syntax are used by the exporters to create default exporter filter instances that filter 
out content based on element origin information. Possible values for the <code>{format}</code> token are 
<code>pdf</code>, <code>html</code>, <code>xls</code>, <code>xlsx</code>, <code>rtf</code>, <code>odt</code>, <code>csv</code> 
and <code>txt</code>. The <code>{suffix}</code> token can be: <code>band</code>, <code>group</code> or 
<code>report</code>.
<br/>
See this <a href="http://community.jaspersoft.com/wiki/how-can-i-suppress-page-headers-and-footers-when-exporting-xls">FAQ</a> for more details about filtering out content while exporting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.filter.factory.{filter_element} -->
  
  <configProperty name="net.sf.jasperreports.export.filter.factory.{filter_element}">
    <description>
A set of properties that are used to register filter factories. They all contain the fixed prefix <code>net.sf.jasperreports.export.filter.factory.</code> 
and a suffix indicating the considered filter element.
<br/>
For example: <code>net.sf.jasperreports.export.filter.factory.origin</code> indicates an element origin filter factory.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.default.filter.factory -->
  
  <configProperty name="net.sf.jasperreports.export.default.filter.factory">
    <description>
A property that gives the generic default filter factory class name.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.{arbitrary_name}.default.filter.factory -->
  
  <configProperty name="net.sf.jasperreports.export.{arbitrary_name}.default.filter.factory">
    <description>
Property that gives the default filter factory for a specific exporter.
Contains the property prefix <code>net.sf.jasperreports.export.</code> concatenated with an arbitrary name indicating the exporter type and 
the property suffix <code>default.filter.factory</code>.
<br/>
For instance, the default filter factory for XLS exporters is
 <code>net.sf.jasperreports.export.xls.default.filter.factory</code>.
If this property is not defined for a specific exporter, the generic
 exporter factory given by <api href="net/sf/jasperreports/engine/JRAbstractExporter.html#PROPERTY_DEFAULT_FILTER_FACTORY">PROPERTY_DEFAULT_FILTER_FACTORY</api> is used.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.character.encoding -->
  
  <configProperty name="net.sf.jasperreports.export.character.encoding">
    <description>
Property whose value is used as as default for the <api href="net/sf/jasperreports/export/WriterExporterOutput.html#getEncoding--">getEncoding()</api> export output setting.
Stores the character encoding for exported reports.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.column.name -->
  
  <configProperty name="net.sf.jasperreports.export.csv.column.name">
    <description>
Property specifying the name of the CSV exported column the element belongs to.
It must be one of the column names in the <a href="#net.sf.jasperreports.export.csv.column.names.{arbitrary_name}">net.sf.jasperreports.export.csv.column.names.{suffix}</a>, if provided.    
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.column.names.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.export.csv.column.names.{arbitrary_name}">
    <description>
Properties with '<code>net.sf.jasperreports.export.csv.column.names.</code>' prefix contain a list of 
comma-separated names of the columns used in the metadata-based CSV export.
<br/>
Column names in this property are used as default list for the 
<api href="net/sf/jasperreports/export/CsvMetadataReportConfiguration.html#getColumnNames--">getColumnNames()</api> 
CSV metadata export output setting.
<br/><br/>
<b>Note: </b>For accurate results it's recommended that column names in the list to follow the same order as the original columns.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.data -->
  
  <configProperty name="net.sf.jasperreports.export.csv.data">
    <description>
Property that specifies a custom value to be associated with the column specified by the 
<api href="net/sf/jasperreports/engine/export/JRCsvMetadataExporter.html#PROPERTY_COLUMN_NAME">PROPERTY_COLUMN_NAME</api>.
<br/>
The property itself defaults to the text value of the report element this property is assigned to.    
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.field.delimiter -->
  
  <configProperty name="net.sf.jasperreports.export.csv.field.delimiter">
    <description>
Property that contains the character or sequence of characters used to delimit two fields on the same record. Its value is used as default for the 
<api href="net/sf/jasperreports/export/CsvExporterConfiguration.html#getFieldDelimiter--">getFieldDelimiter()</api> CSV export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.field.enclosure -->
  
  <configProperty name="net.sf.jasperreports.export.csv.field.enclosure">
    <description>
Property containing the character to enclose a field value on a record. 
<br/>
If a sequence of characters is set for this property, only the leading one will be taken into account. 
Regular white spaces are trimmed and will not be considered. Non-breaking spaces (such as <code>&amp;#xa0;</code> or <code>&amp;#xfeff;</code>) will be taken into account.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/CsvExporterConfiguration.html#getFieldEnclosure--">getFieldEnclosure()</api> CSV export configuration setting.
<br/>
When this property is set in the JRXML report, we have to ensure that characters representing XML entity references are XML-escaped, accordingly.
For instance, use <code>&amp;#x22;</code> instead of <code>"</code>, <code>&amp;#x27;</code> instead of <code>'</code>, etc:
<br/>
<br/>
<code>&lt;property name=&quot;net.sf.jasperreports.export.csv.field.enclosure&quot; value=&quot;&amp;#x22;&quot;/&gt;</code> 
<br/>or<br/>
<code>&lt;property name=&quot;net.sf.jasperreports.export.csv.field.enclosure&quot; value=&quot;&amp;#x27;&quot;/&gt;</code>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.force.field.enclosure -->
  
  <configProperty name="net.sf.jasperreports.export.csv.force.field.enclosure">
    <description>
Property that enforces all exported field values to be enclosed within a pair of enclosure characters (usually a pair of quotes:""). 
Its value is used as default for the 
<api href="net/sf/jasperreports/export/CsvExporterConfiguration.html#getForceFieldEnclosure--">getForceFieldEnclosure()</api> CSV export configuration flag.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.record.delimiter -->
  
  <configProperty name="net.sf.jasperreports.export.csv.record.delimiter">
    <description>
Property that contains the character or sequence of characters used to delimit two records. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/CsvExporterConfiguration.html#getRecordDelimiter--">getRecordDelimiter()</api> CSV export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.repeat.value -->
  
  <configProperty name="net.sf.jasperreports.export.csv.repeat.value">
    <description>
Property that specifies whether the value associated with <api href="net/sf/jasperreports/engine/export/JRCsvMetadataExporter.html#PROPERTY_COLUMN_NAME">PROPERTY_COLUMN_NAME</api> 
should be repeated or not when it is missing.
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.write.bom -->
  
  <configProperty name="net.sf.jasperreports.export.csv.write.bom">
    <description>
Property that specifies whether a BOM character should be put at the beginning of the output.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/CsvExporterConfiguration.html#isWriteBOM--">isWriteBOM()</api> CSV export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.csv.write.header -->
  
  <configProperty name="net.sf.jasperreports.export.csv.write.header">
    <description>
Property that specifies whether the export header (the column names) should be written or not.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/CsvMetadataReportConfiguration.html#isWriteHeader--">isWriteHeader()</api> CSV metadata export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.graphics2d.min.job.size -->
  
  <configProperty name="net.sf.jasperreports.export.graphics2d.min.job.size">
    <description>
Flag property that controls the use of an AWT rendering fix which causes the printer job size to be reduced when the exporter draws onto a printer graphic context.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/Graphics2DReportConfiguration.html#isMinimizePrinterJobSize--">isMinimizePrinterJobSize()</api> Graphics2D export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.ignore.page.margins -->
  
  <configProperty name="net.sf.jasperreports.export.ignore.page.margins">
    <description>
This flag property specifies whether page margins should be ignored when the report is exported using a grid-based exporter. 
<br/>
Its value is used as default for the <api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isIgnorePageMargins--">Excel</api> 
and <api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#isIgnorePageMargins--">HTML</api> isIgnorePageMargins() export 
configuration setting.
<br/>
If the property is <code>true</code>, any page in the document will be exported without taking into account its margins.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.embed.fonts -->
  
  <configProperty name="net.sf.jasperreports.export.docx.embed.fonts">
    <description>
This property indicates whether the embeddable true type fonts used in the report should be embedded into the generated DOCX document. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/DocxReportConfiguration.html#isEmbedFonts--">isEmbedFonts()</api> DOCX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.frames.as.nested.tables -->
  
  <configProperty name="net.sf.jasperreports.export.docx.frames.as.nested.tables">
    <description>
This property specifies whether <api href="net/sf/jasperreports/engine/JRPrintFrame.html">JRPrintFrame</api> frames are to be exported as nested tables.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/DocxReportConfiguration.html#isFramesAsNestedTables--">isFramesAsNestedTables()</api> DOCX export configuration setting.
<br/>
If set to <code>false</code>, the frame content will be integrated into the master/page table.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.flexible.row.height -->
  
  <configProperty name="net.sf.jasperreports.export.docx.flexible.row.height">
    <description>
This property indicates whether table rows can grow if more text is added into cells.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/DocxReportConfiguration.html#isFlexibleRowHeight--">isFlexibleRowHeight()</api> DOCX export configuration setting.
<br/>
If set to <code>false</code>, the table rows do not increase in height automatically and the user has to enlarge them manually.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.hidden.text -->
  
  <configProperty name="net.sf.jasperreports.export.docx.hidden.text">
    <description>
This property is used to mark text elements as being hidden either for printing or on-screen display.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.metadata.application -->
  
  <configProperty name="net.sf.jasperreports.export.docx.metadata.application">
    <description>
Property that contains the application information to use for the generated DOCX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/DocxExporterConfiguration.html#getMetadataApplication--">getMetadataApplication()</api> DOCX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.metadata.author -->
  
  <configProperty name="net.sf.jasperreports.export.docx.metadata.author">
    <description>
Property that contains the author information to use for the generated DOCX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/DocxExporterConfiguration.html#getMetadataAuthor--">getMetadataAutor()</api> DOCX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.metadata.keywords -->
  
  <configProperty name="net.sf.jasperreports.export.docx.metadata.keywords">
    <description>
Property that contains the keywords to use for the generated DOCX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/DocxExporterConfiguration.html#getMetadataKeywords--">getMetadataKeywords()</api> DOCX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.metadata.subject -->
  
  <configProperty name="net.sf.jasperreports.export.docx.metadata.subject">
    <description>
Property that contains the subject information to use for the generated DOCX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/DocxExporterConfiguration.html#getMetadataSubject--">getMetadataSubject()</api> DOCX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.metadata.title -->
  
  <configProperty name="net.sf.jasperreports.export.docx.metadata.title">
    <description>
Property that contains the title information to use for the generated DOCX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/DocxExporterConfiguration.html#getMetadataTitle--">getMetadataTitle()</api> DOCX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.docx.new.line.as.paragraph -->
  
  <configProperty name="net.sf.jasperreports.export.docx.new.line.as.paragraph">
    <description>
This property specifies whether the newline element present in a justified paragraph introduces a new justified paragraph.
If set to <code>true</code>, the text line before the new paragraph will lose the justified alignment.
<br/>
It serves as default value for the 
<api href="net/sf/jasperreports/export/DocxReportConfiguration.html#isNewLineAsParagraph--">isNewLineAsParagraph()</api> DOCX export configuration setting.
The property itself defaults to <code>false</code> (for backward compatibility reasons).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.flash.element.allow.script.access -->
  
  <configProperty name="net.sf.jasperreports.export.flash.element.allow.script.access">
    <description>
Property that determines the value of the allowScriptAccess parameter for Flash elements.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.accessible -->
  
  <configProperty name="net.sf.jasperreports.export.html.accessible">
    <description>
Configuration property that determines the exporter to produce accessible HTML.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#isAccessibleHtml--">isAccessibleHtml()</api> HTML export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.between.pages -->
  
  <configProperty name="net.sf.jasperreports.export.html.between.pages">
    <description>
Configuration property that provides the HTML code that will be inserted between pages of the generated report.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlExporterConfiguration.html#getBetweenPagesHtml--">getBetweenPagesHtml()</api> HTML export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.border.collapse -->
  
  <configProperty name="net.sf.jasperreports.export.html.border.collapse">
    <description>
Configuration property that provides the value for the <code>border-collapse</code> CSS property to be applied 
to the table generated for the report. Possible values are:
<ul>
<li><code>separate</code></li>
<li><code>collapse</code> (default)</li>
<li><code>initial</code></li>
<li><code>inherit</code></li>
</ul>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#getBorderCollapseValue--">getBorderCollapseValue()</api> HTML export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.header -->
  
  <configProperty name="net.sf.jasperreports.export.html.header">
    <description>
Configuration property that provides the HTML code that will be inserted before the generated report content.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlExporterConfiguration.html#getHtmlHeader--">getHtmlHeader()</api> HTML export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.footer -->
  
  <configProperty name="net.sf.jasperreports.export.html.footer">
    <description>
Configuration property that provides the HTML code that will be inserted after the generated report content.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlExporterConfiguration.html#getHtmlFooter--">getHtmlFooter()</api> HTML export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.class -->
  
  <configProperty name="net.sf.jasperreports.export.html.class">
    <description>
Property used to specify the value of the CSS <code>class</code> attribute of elements when exported to HTML format. The value of this property 
will be used as the value for the <code>class</code> attribute of the <code>&lt;td&gt;</code> tag for the element when exported to HTML.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.convert.svg.to.image -->
  
  <configProperty name="net.sf.jasperreports.export.html.convert.svg.to.image">
    <description>
This property specifies whether the SVG graphics should be rasterized as images.
The property provides a default value for the <api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#isConvertSvgToImage--">isConvertSvgToImage()</api> export setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.embed.image -->
  
  <configProperty name="net.sf.jasperreports.export.html.embed.image">
    <description>
This property specifies whether the image should be Base64 encoded and embedded into the src attribute of the image tag, and not referenced as separate resource.
The property provides a default value for the <api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#isEmbedImage--">isEmbedImage()</api> export setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.embedded.svg.use.fonts -->
  
  <configProperty name="net.sf.jasperreports.export.html.embedded.svg.use.fonts">
    <description>
This property specifies whether the HTML embedded SVG should have the font family names replaced with the web fonts coming from font extensions, similar to what we do for text elements.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.id -->
  
  <configProperty name="net.sf.jasperreports.export.html.id">
    <description>
Property used to specify the value of the <code>ID</code> attribute of elements when exported to HTML format. The value of this property will be used 
as the value for the <code>id</code> attribute of the <code>&lt;td&gt;</code> tag for the element when exported to HTML.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.remove.emtpy.space.between.rows -->
  
  <configProperty name="net.sf.jasperreports.export.html.remove.emtpy.space.between.rows">
    <description>
Flag property that specifies whether the blank lines that sometimes appear between rows as spacers should be removed.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#isRemoveEmptySpaceBetweenRows--">isRemoveEmptySpaceBetweenRows()</api> HTML export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.size.unit -->
  
  <configProperty name="net.sf.jasperreports.export.html.size.unit">
    <description>
Property that specifies the unit to use when measuring lengths or font size. This can be one of the supported size units from the CSS 
specifications like "px" for pixels or "pt" for points. The default value is "px", meaning that lengths and font sizes are specified in pixels.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#getSizeUnit--">getSizeUnit()</api> HTML export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.white.page.background -->
  
  <configProperty name="net.sf.jasperreports.export.html.white.page.background">
    <description>
Property that indicates whether the report background should be turned to white. If not set, the default background will appear, depending on the selected CSS styles.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#isWhitePageBackground--">isWhitePageBackground()</api> HTML export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.wrap.break.word -->
  
  <configProperty name="net.sf.jasperreports.export.html.wrap.break.word">
    <description>
Property that specifies whether the export engine should force text wrapping by breaking words (CSS <code>word-wrap: break-word</code>). 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#isWrapBreakWord--">isWrapBreakWord()</api> HTML export configuration setting.
<br/>
Note that this CSS property is not currently supported by all browsers. An alternative approach for forcing word breaks in HTML is to save the 
line breaks at fill time via the <a href="#net.sf.jasperreports.text.save.line.breaks">net.sf.jasperreports.text.save.line.breaks</a> property.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.use.background.image.to.align -->
  
  <configProperty name="net.sf.jasperreports.export.html.use.background.image.to.align">
    <description>
Property that indicates whether the images should be rendered using CSS background images, to achieve certain image alignment requirements, especially in the case of lazy images,
for which the real dimensions are not known at report fill time.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/HtmlReportConfiguration.html#isUseBackgroundImageToAlign--">isUseBackgroundImageToAlign()</api> HTML export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.boolean.{path} -->
  
  <configProperty name="net.sf.jasperreports.export.json.boolean.{path}">
    <description>
This element-level property is considered by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and provides the exported value of a boolean type for that element. This value will be exported within the JSON tree following the path specified 
by the property suffix. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.date.{path} -->
  
  <configProperty name="net.sf.jasperreports.export.json.date.{path}">
    <description>
This element-level property is considered by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and provides the exported value of a date type for that element. This value will be exported within the JSON tree following the path specified 
by the property suffix.
<br/>
When working with this property, dates must be written according to ISO 8601 standard: "yyyy-MM-dd'T'HH:mm:ss".
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.number.{path} -->
  
  <configProperty name="net.sf.jasperreports.export.json.number.{path}">
    <description>
This element-level property is considered by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and provides the exported value of a numeric type for that element. This value will be exported within the JSON tree following the path specified 
by the property suffix.
<br/>
When working with this property, numbers have to be written with no thousand separators and using a period as decimal. For instance, 1,000,000 should be written as 
"1000000" and 2,000.45 should be written as "2000.45".
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.string.{path} -->
  
  <configProperty name="net.sf.jasperreports.export.json.string.{path}">
    <description>
This element-level property is considered by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and provides the exported value of a String type for that element. This value will be exported within the JSON tree following the path specified 
by the property suffix.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.data -->
  
  <configProperty name="net.sf.jasperreports.export.json.data">
    <description>
This element-level property is considered by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and provides the exported value for that element. By default is considered the value of the report element itself.
<br/>
When working with this property, numbers have to be written with no thousand separators and using a period as decimal. For instance, 1,000,000 should be written as 
"1000000" and 2,000.45 should be written as "2000.45". Dates must be written according to ISO 8601 standard: "yyyy-MM-dd'T'HH:mm:ss".
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.escape.members -->
  
  <configProperty name="net.sf.jasperreports.export.json.escape.members">
    <description>
This report-level flag is considered by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and specifies if the member property names should be enclosed with quotes or no. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.path -->
  
  <configProperty name="net.sf.jasperreports.export.json.path">
    <description>
This element-level property is used by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and specifies a given path within the JSON tree, where the current element will be exported. If the 
<a href="#net.sf.jasperreports.export.json.schema">net.sf.jasperreports.export.json.schema</a> property is not 
present in the report, this property can be used to determine a rule in the JSON schema as well.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.repeat.{path} -->
  
  <configProperty name="net.sf.jasperreports.export.json.repeat.{path}">
    <description>
This element-level flag is considered by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and specifies whether the value associated to that JSON path should be repeated or not when it is missing. Usually this property 
works in conjunction with one of the <a href="#net.sf.jasperreports.export.json.{type}.{path}">net.sf.jasperreports.export.json.{type}.{path}</a> 
properties. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.repeat.value -->
  
  <configProperty name="net.sf.jasperreports.export.json.repeat.value">
    <description>
This element-level flag is considered by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and specifies whether the value associated to the JSON path specified by <a href="#net.sf.jasperreports.export.json.path">net.sf.jasperreports.export.json.path</a> property 
should be repeated or not when it is missing.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.json.schema -->
  
  <configProperty name="net.sf.jasperreports.export.json.schema">
    <description>
This report-level property is considered by the <api href="net/sf/jasperreports/engine/export/JsonMetadataExporter.html">JsonMetadataExporter</api> 
and specifies the path to a JSON schema file that will be used to generate the JSON structure at export time. Nodes in a given schema should provide:
<ul>
<li>the <code>_type</code> property (mandatory), which can be an <code>object</code> or an <code>array</code>.</li>
<li>the  <code>_children</code> property (mandatory for array-type nodes), which defines the type of the objects in the array.</li>
<li>other properties that describe the object.</li>
</ul> 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.ods.flexible.row.height -->
  
  <configProperty name="net.sf.jasperreports.export.ods.flexible.row.height">
    <description>
This property indicates whether table rows in ODS documents can grow if more text is added into cells. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/OdsReportConfiguration.html#isFlexibleRowHeight--">isFlexibleRowHeight()</api> ODS export configuration setting.
<br/>
If set to <code>false</code>, the rows in the ODS document do not increase in height automatically and the user has to enlarge them manually. Otherwise, 
the table rows will adjust their height automatically in order to fit their content in.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.odt.flexible.row.height -->
  
  <configProperty name="net.sf.jasperreports.export.odt.flexible.row.height">
    <description>
This property table rows in ODT documents can grow if more text is added into cells. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/OdtReportConfiguration.html#isFlexibleRowHeight--">isFlexibleRowHeight()</api> ODT export configuration setting.
<br/>
If set to <code>false</code>, the table rows in the ODT document do not increase in height automatically and the user has to enlarge them manually. 
Otherwise, the table rows will adjust their height automatically in order to fit their content in.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.parameters.override.report.hints -->
  
  <configProperty name="net.sf.jasperreports.export.parameters.override.report.hints">
    <description>
Deprecated. Replaced by <a href="#net.sf.jasperreports.export.configuration.override.report.hints">net.sf.jasperreports.export.configuration.override.report.hints</a>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.configuration.override.report.hints -->
  
  <configProperty name="net.sf.jasperreports.export.configuration.override.report.hints">
    <description>
Property that establishes the priority of export parameters against report hints.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/CommonExportConfiguration.html#isOverrideHints--">isOverrideHints()</api> export configuration setting.
<br/>
If the property is <code>true</code>, export parameters override report hints; this is the default behavior.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.matcher.filter.key -->
  
  <configProperty name="net.sf.jasperreports.export.matcher.filter.key">
    <description>
Property that specifies a key for the element, in order to make it eligible for the exporter filter during the report export.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.128.bit.key -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.128.bit.key">
    <description>
Property that specifies whether the encryption key is 128 bits.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#is128BitKey--">is128BitKey()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.compressed -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.compressed">
    <description>
Property that specifies whether the PDF document should be compressed.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#isCompressed--">isCompressed()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.create.batch.mode.bookmarks -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.create.batch.mode.bookmarks">
    <description>
Property that specifies whether the PDF document should contain an outline section.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#isCreatingBatchModeBookmarks--">isCreatingBatchModeBookmarks()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.encrypted -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.encrypted">
    <description>
Property that specifies  whether the final PDF document should be encrypted.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#isEncrypted--">isEncrypted()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.border.style -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.border.style">
    <description>
Property that specifies the PDF-compatible border style for input fields. Possible values are:
<ul>
<li><code>Solid</code> - specifies a solid border</li>
<li><code>Dashed</code> - specifies a dashed border</li>
<li><code>Beveled</code> - specifies a beveled border</li>
<li><code>Inset</code> - specifies an inset border</li>
<li><code>Underline</code> - specifies an underline border</li>
</ul>
When this property is not set, the engine looks at the JasperReports element border settings. If the pen style is 
'<code>Solid</code>' or '<code>Dashed</code>', these styles will be applied, otherwise the '<code>Solid</code>' style will be considered by default.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.check.type -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.check.type">
    <description>
Property applicable to check input fields in a PDF form that specifies the check type decoration. Possible values are:
<ul>
<li><code>Check</code> - specifies a checkbox type decoration</li>
<li><code>Circle</code> - specifies a circle tipe decoration</li>
<li><code>Cross</code> - specifies a cross type decoration</li>
<li><code>Diamond</code> - specifies a diamond type decoration</li>
<li><code>Square</code> - specifies a square type decoration</li>
<li><code>Star</code> - specifies a star type decoration</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.checked -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.checked">
    <description>
Flag property applicable for check input fields that specifies if the input field is checked.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.choice.separators -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.choice.separators">
    <description>
Specifies the set of characters used as choices separator in the choices list. 
See <a href="#net.sf.jasperreports.export.pdf.field.choices">net.sf.jasperreports.export.pdf.field.choices</a> property.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.choices -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.choices">
    <description>
Specifies the list of choices for an input field such as list or combobox. Choices in the list are delimited by a set of separator characters provided 
by the <a href="#net.sf.jasperreports.export.pdf.field.choice.separators">net.sf.jasperreports.export.pdf.field.choice.separators</a> property. 
If no <code>net.sf.jasperreports.export.pdf.field.choice.separators</code> property is set, the default choices separator is "|".<br/>
Example: <code>'One'|'Two'|'Three'</code>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.combo.edit -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.combo.edit">
    <description>
Flag property applicable for combobox input fields that specifies if the combobox field is editable. By default the combobox is not editable.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.name -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.name">
    <description>
Property that specifies the field name, which serves as unique identifier within the PDF form. 
If not specified, the field name is generated using the report element UUID.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.read.only -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.read.only">
    <description>
Flag property that specifies if the input field is read-only. As a known limitation, this property is not applicable for radio group fields.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.text.multiline -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.text.multiline">
    <description>
Flag property applicable for input text fields that specifies if the input text is also multiline.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.value -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.value">
    <description>
Property that specifies the initial text content for the text field or the initial selected value in 
list or combobox field, depending on the PDF form field type of the element. When this property is missing,
the actual text content of the text element is used.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.field.type -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.field.type">
    <description>
Property that specifies the input field type in PDF forms. Possible values are:
<ul>
<li><code>Text</code> - specifies a text input field</li>
<li><code>Combo</code> - specifies a combobox input field</li>
<li><code>List</code> - specifies a list input field</li>
<li><code>Check</code> - specifies a checkbox input field</li>
<li><code>Radio</code> - specifies a radio group option input field</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.font.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.font.{arbitrary_name}">
    <description>
Prefix of properties that specify font files for the PDF exporter.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.fontdir.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.fontdir.{arbitrary_name}">
    <description>
Prefix of properties that specify font directories for the PDF exporter.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.force.linebreak.policy -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.force.linebreak.policy">
    <description>
Property that specifies whether the PDF exporter should use a <a href="http://itext.ugent.be/library/api/com/lowagie/text/SplitCharacter.html">SplitCharacter</a> 
implementation to ensure that PDF text wrap behavior is the same as in AWT.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfReportConfiguration.html#isForceLineBreakPolicy--">isForceLineBreakPolicy()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.force.svg.shapes -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.force.svg.shapes">
    <description>
Property that specifies whether the rendering of SVG images using shapes on the PDF Graphics2D context should be forced.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfReportConfiguration.html#isForceSvgShapes--">isForceSvgShapes()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.javascript -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.javascript">
    <description>
Property that contains the user defined JavaScript piece of code to be inserted into the generated PDF document.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getPdfJavaScript--">getPdfJavaScript()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.justified.letter.spacing -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.justified.letter.spacing">
    <description>
Property that determines whether justified text alignment can modify letter spacing in words. Default value is <code>false</code>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.metadata.author -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.metadata.author">
    <description>
Property that contains the author information to use for the generated PDF metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getMetadataAuthor--">getMetadataAutor()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.metadata.creator -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.metadata.creator">
    <description>
Property that contains the creator information to use for the generated PDF metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getMetadataCreator--">getMetadataCreator()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.metadata.keywords -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.metadata.keywords">
    <description>
Property that contains the keywords to use for the generated PDF metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getMetadataKeywords--">getMetadataKeywords()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.metadata.subject -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.metadata.subject">
    <description>
Property that contains the subject information to use for the generated PDF metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getMetadataSubject--">getMetadataSubject()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.metadata.title -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.metadata.title">
    <description>
Property that contains the title information to use for the generated PDF metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getMetadataTitle--">getMetadataTitle()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.display.metadata.title -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.display.metadata.title">
    <description>
Property that specifies whether the document title should be displayed in the title bar instead of the file name. Should be set to true for accessible documents that provide a document title.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#isDisplayMetadataTitle--">isDisplayMetadataTitle()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.even.page.offset.x -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.even.page.offset.x">
    <description>
Property that specifies the X offset (in pixels) for moving elements in even page number pages, to simulate gutter margins.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfReportConfiguration.html#getEvenPageOffsetX--">getEvenPageOffsetX()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.even.page.offset.y -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.even.page.offset.y">
    <description>
Property that specifies the Y offset (in pixels) for moving elements in even page number pages, to simulate gutter margins.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfReportConfiguration.html#getEvenPageOffsetY--">getEvenPageOffsetY()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.odd.page.offset.x -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.odd.page.offset.x">
    <description>
Property that specifies the X offset (in pixels) for moving elements in odd page number pages, to simulate gutter margins.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfReportConfiguration.html#getOddPageOffsetX--">getOddPageOffsetX()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.odd.page.offset.y -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.odd.page.offset.y">
    <description>
Property that specifies the Y offset (in pixels) for moving elements in odd page number pages, to simulate gutter margins.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfReportConfiguration.html#getOddPageOffsetY--">getOddPageOffsetY()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.owner.password -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.owner.password">
    <description>
Property that contains the password belonging to the owner of the document, if it is encrypted. If the owner password is not specified, but the PDF is 
encrypted, then the password will be a random string.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getOwnerPassword--">getOwnerPassword()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.permissions.allowed -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.permissions.allowed">
    <description>
Property that contains the allowed user permissions of the PDF document, if it is encrypted. Allowed values are one or many the permission names enumerated in  
<api href="net/sf/jasperreports/export/type/PdfPermissionsEnum.html">PdfPermissionsEnum</api> class, separated by a pipe (|) sign:
<ul>
<li><code>ALL</code> - all user permissions are allowed</li>
<li><code>ASSEMBLY</code> - assembly permission allowed</li>
<li><code>COPY</code> - copy permission allowed</li>
<li><code>DEGRADED_PRINTING</code> - degraded printing permission allowed</li>
<li><code>FILL_IN</code> - fill in forms permission allowed</li>
<li><code>MODIFY_ANNOTATIONS</code> - modify annotation permission allowed</li>
<li><code>MODIFY_CONTENTS</code> - modify contents permission allowed</li>
<li><code>PRINTING</code> - print permission allowed</li>
<li><code>SCREENREADERS</code> - screen readers permission allowed</li>
</ul>
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getAllowedPermissions--">getAllowedPermissions()</api> PDF export configuration setting. 
By default no user permissions are allowed at all.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.permissions.denied -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.permissions.denied">
    <description>
Property that contains the denied user permissions of the PDF document, if it is encrypted. This property works in conjunction with 
the <a href="#net.sf.jasperreports.export.pdf.permissions.allowed">net.sf.jasperreports.export.pdf.permissions.allowed</a>. If present, denied permissions 
will be excluded from the allowed values. This property may contain one or many permission names enumerated in  
<api href="net/sf/jasperreports/export/type/PdfPermissionsEnum.html">PdfPermissionsEnum</api> class, separated by a pipe (|) sign:
<ul>
<li><code>ALL</code> - all user permissions are denied</li>
<li><code>ASSEMBLY</code> - assembly permission denied</li>
<li><code>COPY</code> - copy permission denied</li>
<li><code>DEGRADED_PRINTING</code> - degraded printing permission denied</li>
<li><code>FILL_IN</code> - fill in forms permission denied</li>
<li><code>MODIFY_ANNOTATIONS</code> - modify annotation permission denied</li>
<li><code>MODIFY_CONTENTS</code> - modify contents permission denied</li>
<li><code>PRINTING</code> - print permission denied</li>
<li><code>SCREENREADERS</code> - screen readers permission denied</li>
</ul>
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getDeniedPermissions--">getDeniedPermissions()</api> PDF export configuration setting. 
By default there are no user permissions allowed for the document.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.print.scaling -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.print.scaling">
    <description>
Property that specifies the print scaling preference in the PDF print dialog.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getPrintScaling--">getPrintScaling()</api> PDF export configuration setting.
<br/>
Possible values are <code>default</code> and <code>none</code>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.user.password -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.user.password">
    <description>
Property that contains the user password needed to open the document, if it is encrypted.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getUserPassword--">getUserPassword()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.version -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.version">
    <description>
Property that contains a <code>Character</code> instance representing the version of the generated PDF.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getPdfVersion--">getPdfVersion()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdfa.conformance -->
  
  <configProperty name="net.sf.jasperreports.export.pdfa.conformance">
    <description>
Property whose value is used as default for the <api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getPdfaConformance--">getPdfaConformance()</api> 
export configuration setting. It specifies the conformance level of the PDF/A document. Possible values are: <code>pdfa1a</code>, <code>pdfa1b</code> and <code>none</code>.
<br/>
By default, this property is set to <code>none</code>. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdfa.icc.profile.path -->
  
  <configProperty name="net.sf.jasperreports.export.pdfa.icc.profile.path">
    <description>
Property whose value is used as default for the <api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getIccProfilePath--">getIccProfilePath()</api> 
export configuration setting. It specifies the path to the ICC profile file for the PDF/A compliant documents.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tagged -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tagged">
    <description>
Property that specifies whether the exporter should put structure tags in the generated PDF.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#isTagged--">isTagged()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.language -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.language">
    <description>
Property that specifies the language that the exporter should put in the language tag of the generated PDF.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PdfExporterConfiguration.html#getTagLanguage--">getTagLanguage()</api> PDF export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.metadata.application -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.metadata.application">
    <description>
Property that contains the application information to use for the generated PPTX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PptxExporterConfiguration.html#getMetadataApplication--">getMetadataApplication()</api> PPTX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.metadata.author -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.metadata.author">
    <description>
Property that contains the author information to use for the generated PPTX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PptxExporterConfiguration.html#getMetadataAuthor--">getMetadataAutor()</api> PPTX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.metadata.keywords -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.metadata.keywords">
    <description>
Property that contains the keywords to use for the generated PPTX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PptxExporterConfiguration.html#getMetadataKeywords--">getMetadataKeywords()</api> PPTX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.metadata.subject -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.metadata.subject">
    <description>
Property that contains the subject information to use for the generated PPTX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PptxExporterConfiguration.html#getMetadataSubject--">getMetadataSubject()</api> PPTX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.metadata.title -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.metadata.title">
    <description>
Property that contains the title information to use for the generated PPTX metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PptxExporterConfiguration.html#getMetadataTitle--">getMetadataTitle()</api> PPTX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.embed.fonts -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.embed.fonts">
    <description>
This property indicates whether the fonts used in the report should be embedded into the generated PPTX document. 
<br/>
<b>Note: </b>PowerPoint does not embed TTF content type. Only EOT (Embedded OpenType) fonts are considered for embedding. 
Embeddable TTF fonts should be converted into EOT format first, then placed in the classpath using the font extension mechanism.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PptxReportConfiguration.html#isEmbedFonts--">isEmbedFonts()</api> PPTX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.background.as.slide.master -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.background.as.slide.master">
    <description>
Property that specifies whether the elements from the background section on the first page should be exported as the contents of the slide master, 
and then ignoring the background section elements for all pages/slides.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/PptxExporterConfiguration.html#isBackgroundAsSlideMaster--">isBackgroundAsSlideMaster()</api> PPTX export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.to.slide.master -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.to.slide.master">
    <description>
Property that specifies whether the element, when found on the first page, should be exported as the contents of the slide master, 
and then ignored for all pages/slides.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.slide.master.report -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.slide.master.report">
    <description>
Property that specifies from which report is the page providing slide master content coming from, in a multi-report batch export. The default is 1, meaning the first report.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.slide.master.page -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.slide.master.page">
    <description>
Property that specifies the page number from which the slide master content is coming from. The default is 1, meaning the first page.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.hide.slide.master.pages -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.hide.slide.master.pages">
    <description>
Property specifying the pages and/or page ranges for which the contents of the slide master should be hidden on.
The value of the property should be a comma separated list of page numbers or page ranges. Page ranges are made of page numbers separated by a hyphen-minus character. 
For example: 1, 3-5, 7 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pptx.field.type -->
  
  <configProperty name="net.sf.jasperreports.export.pptx.field.type">
    <description>
Property that specifies the field type associated with this element in the PPTX export. 
When this property is set, the element value will be automatically updated when the presentation is open. 
The result displayed in the field depends on the report locale.
<ul>
<li><code>slidenum</code> - the current slide number will be displayed in this field</li>
<li><code>datetime</code> - the current date/time will be displayed in this field, according to default date/time rendering format of the PPTX viewer application</li>
<li><code>datetime1</code> - the current date will be displayed using a localized 'MM/dd/yyyy' date format</li>
<li><code>datetime2</code> - the current date will be displayed using a localized 'Day, Month dd, yyyy' date format</li>
<li><code>datetime3</code> - the current date will be displayed using a localized 'dd Month yyyy' date format</li>
<li><code>datetime4</code> - the current date will be displayed using a localized 'Month dd, yyyy' date format</li>
<li><code>datetime5</code> - the current date will be displayed using a localized 'dd-Mon-yy' date format</li>
<li><code>datetime6</code> - the current date will be displayed using a localized 'Month yy' date format</li>
<li><code>datetime7</code> - the current date will be displayed using a localized 'Mon-yy' date format</li>
<li><code>datetime8</code> - the current date/time will be displayed using a localized 'MM/dd/yyyy hh:mm a' date time format</li>
<li><code>datetime9</code> - the current date/time will be displayed using a localized 'MM/dd/yyyy hh:mm:ss a' date time format</li>
<li><code>datetime10</code> - the current time will be displayed using a localized 'HH:mm' timestamp format</li>
<li><code>datetime11</code> - the current time will be displayed using a localized 'HH:mm:ss' timestamp format</li>
<li><code>datetime12</code> - the current time will be displayed using a localized 'hh:mm a' timestamp format</li>
<li><code>datetime13</code> - the current time will be displayed using a localized 'hh:mm:ss a' timestamp format</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.text.character.width -->
  
  <configProperty name="net.sf.jasperreports.export.text.character.width">
    <description>
Property whose floating point value is representing the pixel/character horizontal ratio.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/TextReportConfiguration.html#getCharWidth--">getCharWidth()</api> Text export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.text.page.separator -->
  
  <configProperty name="net.sf.jasperreports.export.text.page.separator">
    <description>
Property whose value represents text that will be inserted between pages of the generated report.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/TextExporterConfiguration.html#getPageSeparator--">getPageSeparator()</api> Text export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.text.character.height -->
  
  <configProperty name="net.sf.jasperreports.export.text.character.height">
    <description>
Property whose floating point value is representing the pixel/character vertical ratio.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/TextReportConfiguration.html#getCharHeight--">getCharHeight()</api> Text export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.text.page.width -->
  
  <configProperty name="net.sf.jasperreports.export.text.page.width">
    <description>
Property whose integer value is representing the page width in characters.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/TextReportConfiguration.html#getPageWidthInChars--">getPageWidthInChars()</api> Text export configuration setting.
    </description>
  </configProperty>
  
 
  <!-- net.sf.jasperreports.export.text.line.separator -->
  
  <configProperty name="net.sf.jasperreports.export.text.line.separator">
    <description>
Property whose value represents the separator between two lines of text in the exported report.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/TextExporterConfiguration.html#getLineSeparator--">getLineSeparator()</api> Text export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.text.page.height -->
  
  <configProperty name="net.sf.jasperreports.export.text.page.height">
    <description>
Property whose integer value representing the page height in characters.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/TextReportConfiguration.html#getPageHeightInChars--">getPageHeightInChars()</api> Text export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.text.trim.line.right -->
  
  <configProperty name="net.sf.jasperreports.export.text.trim.line.right">
    <description>
Property that specifies whether the text lines in the document should be trimmed to the right.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/TextExporterConfiguration.html#isTrimLineRight--">isTrimLineRight()</api> export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.auto.filter -->
  
  <configProperty name="net.sf.jasperreports.export.xls.auto.filter">
    <description>
This element-level property is used to indicate the boundaries of the autofilter data range in the current sheet. 
Allowed values are:
<ul>
<li><code>Start</code> - The current cell will be marked as autofilter heading cell, and column data below/to the right of 
this cell can be considered as part of the autofilter data range. The starting point of the autofilter data range will be 
the next cell below the current cell (ie if the current cell reference is B4, the autofilter range will start with the "B5" 
cell reference: "B5:M20").
<br/>
If multiple autofilter <code>Start</code> values are found in the same sheet, only the last one will be considered. If the 
<code>Start</code> value is present but no <code>End</code> value is found in the sheet, then only the current column will 
be considered for the data range.
<br/>
If the autofilter <code>Start</code> value is set on the same row as the autofilter <code>End</code> value, the data range 
will include all data below this heading row, placed between the start column and the end column.</li>
<li><code>End</code> - The current cell will be marked as autofilter ending cell, and column data in this cell and 
above/to the left can be considered as part of the autofilter data range. The ending cell in the data range is the 
current cell reference (ie if the current cell reference is M20, the autofilter range will end in "M20": "B5:M20"). 
The heading cell for the current column will be placed in the same column on the row containing the autofilter <code>Start</code> value. 
<br/>
<b>Caution:</b> If no autofilter <code>Start</code> value is found in the sheet, the autofilter <code>End</code> value will be considered 
as <code>Start</code> value instead. 
<br/>
If multiple autofilter <code>End</code> values are found in the same sheet, only the last one will be considered. 
<br/>
If the autofilter <code>Start</code> value is set on the same row as the autofilter <code>End</code> value, the data range 
will include all data below this heading row, placed between the start column and the end column.</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.auto.fit.column -->
  
  <configProperty name="net.sf.jasperreports.export.xls.auto.fit.column">
    <description>
Flag property that indicates whether Excel should autofit the current column width.
<br/>
Allowed values are:
<ul>
<li><code>true</code></li>
<li><code>false</code></li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.auto.fit.page.height -->
  
  <configProperty name="net.sf.jasperreports.export.xls.auto.fit.page.height">
    <description>
Flag property that provides a default value for the <api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isAutoFitPageHeight--">isAutoFitPageHeight()</api> export setting.
If set to true, the exporter will automatically fit the print height of a sheet to the number of JasperPrint pages exported in that sheet
<br/>
Allowed values are:
<ul>
<li><code>true</code></li>
<li><code>false</code></li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.auto.fit.row -->
  
  <configProperty name="net.sf.jasperreports.export.xls.auto.fit.row">
    <description>
Flag property that indicates whether Excel should autofit the current row height.
<br/>
Allowed values are:
<ul>
<li><code>true</code></li>
<li><code>false</code></li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.collapse.row.span -->
  
  <configProperty name="net.sf.jasperreports.export.xls.collapse.row.span">
    <description>
Property that specifies whether row spans should be collapsed and merging cells across rows should be inhibited.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isCollapseRowSpan--">isCollapseRowSpan()</api> Excel export configuration setting.
    </description>
  </configProperty>
  

  <!-- net.sf.jasperreports.export.xls.column.name -->
  
  <configProperty name="net.sf.jasperreports.export.xls.column.name">
    <description>
Represents the name for the column that should appear in the metadata-based Excel export. It must be one of the column names stored in 
<a href="#net.sf.jasperreports.export.xls.column.names.{arbitrary_name}">net.sf.jasperreports.export.xls.column.names.{suffix}</a>, if provided.    
    </description>
    <api>net/sf/jasperreports/engine/export/JRXlsAbstractMetadataExporter.html#PROPERTY_COLUMN_NAME</api>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.column.names.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.export.xls.column.names.{arbitrary_name}">
    <description>
Properties with '<code>net.sf.jasperreports.export.xls.column.names.</code>' prefix contain a list of comma-separated 
column names used in the metadata-based Excel export. 
<br/>
Column names in these properties are used as default list of values for the 
<api href="net/sf/jasperreports/export/XlsMetadataReportConfiguration.html#getColumnNames--">getColumnNames()</api> Excel metadata export configuration setting.
<br/>
The order of the columns is important and for accurate results they should be in the same order as the original columns.   
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.column.width -->
  
  <configProperty name="net.sf.jasperreports.export.xls.column.width">
    <description>
Element-level property used to adjust the column width to values suitable for Excel output, taking into account 
that column widths are measured in Excel in Normal style default character width units. The pixel-to-character width 
translation depends on the default normal style character width, so it cannot be always accurately fitted. In this case, 
one can adjust the current column width by setting this property with an integer value measured in pixels. The JR engine 
will perform the pixel-to-character width mapping using this value instead of the element's <code>width</code> attribute.
<br/>
If defined, this property will override the <api href="net/sf/jasperreports/export/XlsReportConfiguration.html#PROPERTY_COLUMN_WIDTH_RATIO">PROPERTY_COLUMN_WIDTH_RATIO</api> 
value for the current column
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.column.width.ratio -->
  
  <configProperty name="net.sf.jasperreports.export.xls.column.width.ratio">
    <description>
Property used to adjust all column widths in a document or sheet with the same width ratio, in order to get column width 
values suitable for Excel output. Usually column widths are measured by Excel in Normal style default character width 
units, while the JR engine uses pixels as default size units. When exporting the report to the Excel output format, the 
pixel-to-character width translation depends on the normal style default character width provided by the Excel instance, 
so it cannot be always accurately fitted. In this case, one can alter the generated column widths by setting this property 
with a float value representing the adjustment ratio. The property can be set:
<ul>
<li>globally - then all the columns in all documents exported to the Excel output format will be adjusted with the same width ratio</li>
<li>at report level - then all the columns in the document will be adjusted with the same width ratio</li>
<li>at element level - then all the columns in the current sheet will be adjusted with the same width ratio</li>
</ul> 
Global settings are overridden by report level settings and report level settings are overridden by element level settings. If 
present, a <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporter.html#PROPERTY_COLUMN_WIDTH">PROPERTY_COLUMN_WIDTH</api> property will override the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#PROPERTY_COLUMN_WIDTH_RATIO">PROPERTY_COLUMN_WIDTH_RATIO</api> value for that column only.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.cell.hidden -->
  
  <configProperty name="net.sf.jasperreports.export.xls.cell.hidden">
    <description>
Property that specifies if the cell content is hidden or exposed in the formula bar of a protected sheet. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isCellHidden--">isCellHidden()</api> Excel export configuration setting.
<br/>
By default the property is not set (<code>false</code>), and the cell content is not hidden.
<br/>
This property has effect only if the enclosing sheet is protected.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.cell.locked -->
  
  <configProperty name="net.sf.jasperreports.export.xls.cell.locked">
    <description>
Property that specifies if the cell content is locked (read-only) within a protected sheet. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isCellLocked--">isCellLocked()</api> Excel export configuration setting.
<br/>
By default the property is considered (<code>true</code>), but it only has effect if the enclosing sheet is protected.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.create.custom.palette -->
  
  <configProperty name="net.sf.jasperreports.export.xls.create.custom.palette">
    <description>
Flag property specifying whether the standard color palette should be customized so that the XLS result uses the original report colors.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsExporterConfiguration.html#isCreateCustomPalette--">isCreateCustomPalette()</api> Excel export configuration setting.
<br/>
The colors used in the result XLS are determined in the following manner:
<ol>
<li>If this flag is not set, the nearest color from the standard XLS palette is chosen for a report color.</li>
<li>If the flag is set, the nearest not yet modified color from the palette is chosen and modified to exactly match the report color. 
If all the colors from the palette are modified (the palette has a fixed size), the nearest color from the palette is chosen for further report colors.</li>
</ol>
This property is by default not set (<code>false</code>).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.data -->
  
  <configProperty name="net.sf.jasperreports.export.xls.data">
    <description>
Property that specifies the value to be placed in the cell associated with the 
<api href="net/sf/jasperreports/engine/export/JRXlsAbstractMetadataExporter.html#PROPERTY_COLUMN_NAME">PROPERTY_COLUMN_NAME</api> 
in the metadata-based Excel export. 
<br/>
When working with this property, numbers have to be written with no thousand separators and using a period as decimal. For instance, 1,000,000 should be written as 
"1000000" and 2,000.45 should be written as "2000.45". Dates must be written according to ISO 8601 standard: "yyyy-MM-dd'T'HH:mm:ss".
<br/>
By default this value is represented by the value stored in the report element this property is assigned to.    
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.export.xls.defined.names.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.export.xls.defined.names.{arbitrary_name}">
    <description>
Property prefix used to identify a set of properties that store defined names for the generated Excel workbook.
<br/>
Defined names in these properties are used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getDefinedNames--">getDefinedNames()</api> Excel export configuration setting.
<br/>
Each property suffix (the <code>{arbitrary_name}</code> part) serves as name identifier and should 
be in accordance with the following rules (see <a href="https://support.office.com/en-us/article/Define-and-use-names-in-formulas-4d0f13ac-53b7-422e-afd2-abd7ff379c64#bmsyntax_rules_for_names">Rules for Excel defined names</a>):
<ul>
<li>the first character in a name should be a letter, an underscore or a backslash</li>
<li>the remaining characters may be letters, digits, periods or underscores; spaces are not allowed</li>
<li>a name cannot represent a cell reference (names like <code>"A10"</code>, <code>"$A$10"</code> or <code>"R2C5"</code> are invalid)</li>
<li>a name cannot exceed 255 characters</li>
<li>names are not case sensitive: <code>"name1"</code>, <code>"Name1"</code> and <code>"NAME1"</code> represent the same name</li>
<li>a name identifier should be unique within a given report, in order to be properly collected at export time</li>
</ul>
The value of such a property contains two distinct parts, separated by a pipe (<code>"|"</code>) sign:
<ul>
<li>the first part, which is mandatory, may represent:
<ul>
<li>a cell reference in a given sheet (such as <code>"Sheet_1!$A$10"</code>, <code>"Sheet_1!A10"</code>, or <code>"'Sheet 1'!$A$10"</code>); 
the <code>"A10"</code> cell reference is relative, while <code>"$A$10"</code> is absolute</li>
<li>a cell range reference in a given sheet (such as <code>"Sheet_1!A10:C20"</code>, <code>"Sheet_1!$A$10:$C$20"</code>, <code>"'Sheet 1'!$A$10:$C$20"</code>)</li>
<li>a formula (such as <code>"SUM('Sheet 1'!$A$10:$C$20)"</code>)</li>
</ul>
<b>Note: The R1C1 Excel reference style is NOT supported in a cell reference, cell range or formula.</b>
</li>
<li>an optional second part represents the scope for the defined name. It can be either a sheet name, 
or the <code>"workbook"</code> literal constant, representing the entire workbook. In case this second part
is missing, the scope associated by default will be the entire workbook.</li>
</ul>
<b>Examples:</b>
<ul>
<li> <code>&lt;property name="net.sf.jasperreports.export.xls.defined.names.test_sum" value="SUM(Sheet_1!$A$10:$C$20)|SecondSheet"/&gt;</code></li>
</ul>
This name, identified as <code>"test_sum"</code>, is visible only in a sheet named <code>"SecondSheet"</code> and is associated 
with a formula that calculates a sum over the cell range <code>[$A$10:$C$20]</code> belonging to a sheet named <code>"Sheet_1"</code>.
<ul>
<li> <code>&lt;property name="net.sf.jasperreports.export.xls.defined.names.test_range" value="'Sheet 1'!$A$10:$C$20"/&gt;</code></li>
</ul>
This name, identified as <code>"test_range"</code>, is visible in the entire workbook and is associated 
with the cell range <code>[$A$10:$C$20]</code> in the sheet named <code>"Sheet 1"</code>.
<br/>
<ul>
<li> <code>&lt;property name="net.sf.jasperreports.export.xls.defined.names.test_sum_1" value="SUM(Sheet_1!$A$10:$C$20)|Sheet_1"/&gt;</code></li>
<li> <code>&lt;property name="net.sf.jasperreports.export.xls.defined.names.test_sum_all" value="Sheet_1!test_sum_1"/&gt;</code></li>
</ul>
In this case the name <code>test_sum_1</code> is visible only in the sheet named <code>Sheet_1</code>. 
<br/>
<br/>
The name <code>test_sum_all</code> is visible in the entire workbook and refers to the <code>test_sum_1</code> name defined for <code>Sheet_1</code>. 
<br/>
<br/>
<b>Note: Names that reference other names with limited visibility/scope (like the above <code>test_sum_all</code>) are NOT supported for 
the XLS (Excel 2003) export format. They work only in the XLSX (Excel 2007 or newer) exporter. A good practice would be to use only names 
visible in the entire workbook when exporting to XLS.</b>
<br/>
    </description>
  </configProperty>
  
  <!-- net.sf.jasperreports.export.xls.detect.cell.type -->
  
  <configProperty name="net.sf.jasperreports.export.xls.detect.cell.type">
    <description>
Property that specifies whether the exporter should take into consideration the type of the original text field expressions and set the cell types and values accordingly.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isDetectCellType--">isDetectCellType()</api> Excel export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.fit.height -->
  
  <configProperty name="net.sf.jasperreports.export.xls.fit.height">
    <description>
Property used at print time to indicate the number of pages height to fit the sheet in. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getFitHeight--">getFitHeight()</api> Excel export configuration setting.
<br/>
Print pages for a given sheet in Excel are generated according to 'Paper size' settings in the Print menu, 
with no respect to the initial pagination of the report. In this case differences between a JasperReport print page and a page in Excel may occur. 
<br/>
Usually the content of a given sheet is considered to be printed into a single page. But when a sheet contains too many rows, including all of them in a single page may lead to an unreadable printed 
document. In this case the sheet must be split into multiple print pages. In JasperReports this number of pages can be set with the <code>net.sf.jasperreports.export.xls.fit.height</code> property.
<br/>
<b>Note:</b> When this property is set to a value (for instance, n), Excel will estimate if n pages are enough to cover the entire sheet height, keeping font settings and row heights unchanged. 
If the number of pages is too small, font and row height adjustments will be performed in order to make room for the entire content. The printed document will come out with smaller fonts and thinner 
rows than those exposed in the related sheet.
<br/>
See also the <a href="#net.sf.jasperreports.export.xls.fit.width">net.sf.jasperreports.export.xls.fit.width</a> property.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.fit.width -->
  
  <configProperty name="net.sf.jasperreports.export.xls.fit.width">
    <description>
Property used at print time to indicate the number of pages width to fit the sheet in. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getFitWidth--">getFitWidth()</api> Excel export configuration setting.
<br/>
Print pages for a given sheet in Excel are generated according to 'Paper size' settings in the Print menu, 
with no respect to the initial pagination of the report. In this case differences between a JasperReport print page and a page in Excel may occur. 
<br/>
In most common cases the content of a given sheet is supposed to be printed into a single page. But problems may occur when a sheet contains too many rows and/or columns and the printed page 
becomes unreadable. If too many columns are involved, we can split the sheet width into multiple print pages, in order to make the content readable. In JasperReports this number of pages can 
be set with the <code>net.sf.jasperreports.export.xls.fit.width</code> property.
<br/>
<b>Note:</b> When this property is set to a value (for instance, n), Excel will estimate if n pages are enough to cover the entire sheet width, keeping font settings and column widths unchanged. 
If the number of pages is too small, font and column width adjustments will be performed in order to include the entire content into available pages. The printed document will come out with 
smaller fonts and thinner columns than those exposed in the related sheet.
<br/>
See also the <a href="#net.sf.jasperreports.export.xls.fit.height">net.sf.jasperreports.export.xls.fit.height</a> property.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.first.page.number -->
  
  <configProperty name="net.sf.jasperreports.export.xls.first.page.number">
    <description>
Property that specifies the first page number in the page setup dialog.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getFirstPageNumber--">getFirstPageNumber()</api> Excel export configuration setting.
<br/>
When the property is set at Element level, it can be used to set the first page number for the current sheet.
<br/>
Global settings are overridden by report level settings; report level settings are overridden by element (sheet) level settings.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.font.size.fix.enabled -->
  
  <configProperty name="net.sf.jasperreports.export.xls.font.size.fix.enabled">
    <description>
Flag property that indicates whether the font size should be decreased so that texts fit into the specified cell height.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isFontSizeFixEnabled--">isFontSizeFixEnabled()</api> Excel export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.force.page.breaks -->
  
  <configProperty name="net.sf.jasperreports.export.xls.force.page.breaks">
    <description>
Flag property that provides a default value for the <api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isForcePageBreaks--">isForcePageBreaks()</api> export setting.
If set to true, the exporter will automatically add a page break at the end of each page exported on the current sheet.
<br/>
Allowed values are:
<ul>
<li><code>true</code></li>
<li><code>false</code></li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.pattern.{arbitrary_pattern} -->
  
  <configProperty name="net.sf.jasperreports.export.xls.pattern.{arbitrary_pattern}">
    <description>
Properties having <code>net.sf.jasperreports.export.xls.pattern.</code> prefix are used to store specific Excel 
format patterns that correspond to their related Java format pattern. The <code>{arbitrary_pattern}</code> suffix represents 
the Java pattern and the property value is the related Excel pattern. When these properties are defined in a JRXML report design, 
special characters should be XML-escaped. When they are defined in a properties file, one should also escape special characters. 
If some properties are defined in the report, they will override the context properties.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.ignore.anchors -->
  
  <configProperty name="net.sf.jasperreports.export.xls.ignore.anchors">
    <description>
Flag property that indicates whether local anchors should be ignored when elements are exported to Excel. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isIgnoreAnchors--">isIgnoreAnchors()</api> Excel export configuration setting.
<br/>
If set to <code>true</code>, local anchors will be excluded from export. 
Otherwise they will be exported along with elements they belong to.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.ignore.cell.background -->
  
  <configProperty name="net.sf.jasperreports.export.xls.ignore.cell.background">
    <description>
Property that specifies whether cell background color should be ignored in the generated document.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isIgnoreCellBackground--">isIgnoreCellBackground()</api> Excel export configuration setting.
<br/>
If the property is set at element level, its value will be applied only to the sheet containing that element. 
Other sheets in the document will not be affected.
<br/>
<br/>
<b>Note:</b> Since v.6.2.0 this property can be set also per report element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.ignore.cell.border -->
  
  <configProperty name="net.sf.jasperreports.export.xls.ignore.cell.border">
    <description>
Property that specifies whether cell borders should be ignored in the generated document.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isIgnoreCellBorder--">isIgnoreCellBorder()</api> Excel export configuration setting.
<br/>
If the property is set at element level, its value will be applied only to the sheet containing that element. 
Other sheets in the document will not be affected.
<br/>
<br/>
<b>Note:</b> Since v.6.2.0 this property can be set also per report element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.ignore.graphics -->
  
  <configProperty name="net.sf.jasperreports.export.xls.ignore.graphics">
    <description>
Property that specifies whether graphic elements should be ignored and only text elements will be exported.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isIgnoreGraphics--">isIgnoreGraphics()</api> Excel export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.image.anchor.type -->
  
  <configProperty name="net.sf.jasperreports.export.xls.image.anchor.type">
    <description>
Property that specifies the image anchor type. Possible values are:
<ul>
<li><code>MoveSize</code> - images move and size with cells</li>
<li><code>MoveNoSize</code> - images move but don't size with cells</li>
<li><code>NoMoveNoSize</code> - images don't move or size with cells</li>
</ul>
Global settings are overridden by report level settings; report level settings are overridden by element level settings.   
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getImageAnchorType--">getImageAnchorType()</api> Excel export configuration setting.
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.image.border.fix.enabled -->
  
  <configProperty name="net.sf.jasperreports.export.xls.image.border.fix.enabled">
    <description>
Flag property that specifies whether the minimum image padding will be forced to 1 pixel, to avoid situations where the image hides the cell border.    
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isImageBorderFixEnabled--">isImageBorderFixEnabled()</api> Excel export configuration setting.
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.max.rows.per.sheet -->
  
  <configProperty name="net.sf.jasperreports.export.xls.max.rows.per.sheet">
    <description>
Property that specifies the maximum number of rows allowed to be exported to the same sheet. Negative values or zero means that no limit has been set.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getMaxRowsPerSheet--">getMaxRowsPerSheet()</api> Excel export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.metadata.application -->
  
  <configProperty name="net.sf.jasperreports.export.xls.metadata.application">
    <description>
Property that contains the application information to use for the generated XLS metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsExporterConfiguration.html#getMetadataApplication--">getMetadataApplication()</api> XLS export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.metadata.author -->
  
  <configProperty name="net.sf.jasperreports.export.xls.metadata.author">
    <description>
Property that contains the author information to use for the generated XLS metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsExporterConfiguration.html#getMetadataAuthor--">getMetadataAutor()</api> XLS export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.metadata.keywords -->
  
  <configProperty name="net.sf.jasperreports.export.xls.metadata.keywords">
    <description>
Property that contains the keywords to use for the generated XLS metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsExporterConfiguration.html#getMetadataKeywords--">getMetadataKeywords()</api> XLS export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.metadata.subject -->
  
  <configProperty name="net.sf.jasperreports.export.xls.metadata.subject">
    <description>
Property that contains the subject information to use for the generated XLS metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsExporterConfiguration.html#getMetadataSubject--">getMetadataSubject()</api> XLS export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.metadata.title -->
  
  <configProperty name="net.sf.jasperreports.export.xls.metadata.title">
    <description>
Property that contains the title information to use for the generated XLS metadata.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsExporterConfiguration.html#getMetadataTitle--">getMetadataTitle()</api> XLS export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.one.page.per.sheet -->
  
  <configProperty name="net.sf.jasperreports.export.xls.one.page.per.sheet">
    <description>
Property that specifies whether each report page should be written in a different XLS sheet.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isOnePagePerSheet--">isOnePagePerSheet()</api> Excel export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.remove.empty.space.between.columns -->
  
  <configProperty name="net.sf.jasperreports.export.xls.remove.empty.space.between.columns">
    <description>
Property that specifies whether the empty spacer columns should be removed or not.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isRemoveEmptySpaceBetweenColumns--">isRemoveEmptySpaceBetweenColumns()</api> Excel export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.remove.empty.space.between.rows -->
  
  <configProperty name="net.sf.jasperreports.export.xls.remove.empty.space.between.rows">
    <description>
Property that specifies whether the empty spacer rows should be removed or not.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isRemoveEmptySpaceBetweenRows--">isRemoveEmptySpaceBetweenRows()</api> Excel export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.ignore.text.formatting -->
  
  <configProperty name="net.sf.jasperreports.export.xls.ignore.text.formatting">
    <description>
Property that specifies whether the text formatting (such as text color, background color, bold style, italic, underline, etc) 
should be ignored in the resulting Excel document at export time or not. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isIgnoreTextFormatting--">isIgnoreTextFormatting()</api> Excel export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.use.timezone -->
  
  <configProperty name="net.sf.jasperreports.export.xls.use.timezone">
    <description>
Property that determines whether date values are to be translated to the timezone that was used to fill the report.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isUseTimeZone--">isUseTimeZone()</api> Excel export configuration setting.
<br/>
By default, date values are exported to Excel using the default timezone of the system.
Setting this property to <code>true</code> instructs the exporter to use he report fill timezone to export date values.
<br/>
The property only has effect when <code>net.sf.jasperreports.export.xls.detect.cell.type</code> is set.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.white.page.background -->
  
  <configProperty name="net.sf.jasperreports.export.xls.white.page.background">
    <description>
Property that specifies whether the page background should be white or the default XLS background color.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isWhitePageBackground--">isWhitePageBackground()</api> Excel export configuration setting.
<br/>
If the property is set at element level, its value will be applied only to the sheet containing that element. 
Other sheets in the document will not be affected.
<br/>
<br/>
<b>Note:</b> Since v.6.2.0 this property can be set also per report element
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.workbook.template -->
  
  <configProperty name="net.sf.jasperreports.export.xls.workbook.template">
    <description>
Property used to store the location of an existing workbook template. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsExporterConfiguration.html#getWorkbookTemplate--">getWorkbookTemplate()</api> Excel export configuration setting.
<br/>
The content of an existing workbook document 
or template can be embedded into exported document if the template location is known. In this case the content of 
the template will be exported first and the content of the exported report will be appended to this one. Macros and 
other settings in the existing template will be also preserved in the generated document. Templates can be loaded from 
Excel template files (*.xlt) as well as from valid Excel documents (*.xls).
<br/>
This property is used in the Excel exporter based on Apache POI APIs 
(<api href="net/sf/jasperreports/engine/export/JRXlsExporter.html">JRXlsExporter</api>). There's no similar property 
for the <api href="net/sf/jasperreports/engine/export/ooxml/JRXlsxExporter.html">JRXlsxExporter</api>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.workbook.template.keep.sheets -->
  
  <configProperty name="net.sf.jasperreports.export.xls.workbook.template.keep.sheets">
    <description>
Flag property that specifies whether to keep the sheets of the existing template into generated document. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsExporterConfiguration.html#isKeepWorkbookTemplateSheets--">isKeepWorkbookTemplateSheets()</api> Excel export configuration setting.
Sometimes is important to embed in a generated document only macros and/or other global settings from an existing template, but 
without keeping the own sheets of the template document. If set to false, this property prevent the template sheets to be exported.
<br/>
This property is used in conjunction with <api href="net/sf/jasperreports/export/XlsExporterConfiguration.html#PROPERTY_WORKBOOK_TEMPLATE">PROPERTY_WORKBOOK_TEMPLATE</api>.
<br/>
Allowed values are:
<ul>
<li><code>true</code></li>
<li><code>false</code> - this is the default value.</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.formula -->
  
  <configProperty name="net.sf.jasperreports.export.xls.formula">
    <description>
Property that stores the formula which has to be applied to a given cell in an Excel sheet.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.freeze.column -->
  
  <configProperty name="net.sf.jasperreports.export.xls.freeze.column">
    <description>
Indicates the name of the first unlocked column in document's sheets. All columns to the left of this one will be 'frozen'. 
Allowed values are letters or letter combinations representing valid column names in Excel, such as A, B, AB, AC, etc. 
The property should be used when all sheets in the document have the same freeze column name.<br/>
The property is available for: 
<ul>
<li><api href="net/sf/jasperreports/engine/export/JRXlsExporter.html">JRXlsExporter</api></li>
<li><api href="net/sf/jasperreports/engine/export/JRXlsMetadataExporter.html">JRXlsMetadataExporter</api></li>
<li><api href="net/sf/jasperreports/engine/export/ooxml/JRXlsxExporter.html">JRXlsxExporter</api></li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.freeze.column.edge -->
  
  <configProperty name="net.sf.jasperreports.export.xls.freeze.column.edge">
    <description>
Property that indicates the vertical edge of the freeze pane, relative to the current cell. If set, it overrides the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#PROPERTY_FREEZE_COLUMN">PROPERTY_FREEZE_COLUMN</api> value. 
<br/>
Allowed values are:
<ul>
<li>
<code>Left</code> - the current column is the first unlocked column in the sheet. All columns to the left are 'frozen'.
</li>
<li>
<code>Right</code> - the current column is the last 'frozen' column in the sheet. All columns to the right are unlocked.
</li>
</ul>
If several elements in a sheet contain this property, the freeze pane edge will pick its value from the element 
with maximum column index.
<br/>
The property is available for: 
<ul>
<li><api href="net/sf/jasperreports/engine/export/JRXlsExporter.html">JRXlsExporter</api></li>
<li><api href="net/sf/jasperreports/engine/export/JRXlsMetadataExporter.html">JRXlsMetadataExporter</api></li>
<li><api href="net/sf/jasperreports/engine/export/ooxml/JRXlsxExporter.html">JRXlsxExporter</api> (since 6.2.0)</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.freeze.row -->
  
  <configProperty name="net.sf.jasperreports.export.xls.freeze.row">
    <description>
Specifies the index of the first unlocked row in document's sheets. All rows above this will be 'frozen'. 
Allowed values are represented by positive integers in the 1..65536 range. Negative values are not considered. 
The property should be used when all sheets in the document have the same freeze row index.<br/>
The property is available for: 
<ul>
<li><api href="net/sf/jasperreports/engine/export/JRXlsExporter.html">JRXlsExporter</api></li>
<li><api href="net/sf/jasperreports/engine/export/JRXlsMetadataExporter.html">JRXlsMetadataExporter</api></li>
<li><api href="net/sf/jasperreports/engine/export/ooxml/JRXlsxExporter.html">JRXlsxExporter</api></li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.freeze.row.edge -->
  
  <configProperty name="net.sf.jasperreports.export.xls.freeze.row.edge">
    <description>
Property that indicates the horizontal edge of the freeze pane, relative to the current cell. If set, it overrides the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#PROPERTY_FREEZE_ROW">PROPERTY_FREEZE_ROW</api> value.
<br/>
Allowed values are:
<ul>
<li>
<code>Top</code> - the current row is the first unlocked row in the sheet. All rows above are 'frozen'.
</li>
<li>
<code>Bottom</code> - the current row is the last 'frozen' row in the sheet. All rows below are unlocked.
</li>
</ul>
If several elements in a sheet contain this property, the freeze pane edge will pick its value from the element 
with maximum row index.
<br/>
The property is available for: 
<ul>
<li><api href="net/sf/jasperreports/engine/export/JRXlsExporter.html">JRXlsExporter</api></li>
<li><api href="net/sf/jasperreports/engine/export/JRXlsMetadataExporter.html">JRXlsMetadataExporter</api></li>
<li><api href="net/sf/jasperreports/engine/export/ooxml/JRXlsxExporter.html">JRXlsxExporter</api> (since 6.2.0)</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.page.scale -->
  
  <configProperty name="net.sf.jasperreports.export.xls.page.scale">
    <description>
Property used to adjust the page content to a given percent of the normal size in the print preview pane. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPageScale--">getPageScale()</api> Excel export configuration setting.
<br/>
Allowed values are positive integers from 10 to 400, representing percents of the normal size.
<br/>
When the property is set at Element level, it can be used to set the page scale per sheet
<br/>
Global settings are overridden by report level settings; report level settings are overridden by element (sheet) level settings.
<br/>
The property overrides the <api href="net/sf/jasperreports/export/XlsReportConfiguration.html#PROPERTY_FIT_WIDTH">PROPERTY_FIT_WIDTH</api> and 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#PROPERTY_FIT_HEIGHT">PROPERTY_FIT_HEIGHT</api> values.
<br/>
This property is by default not set (<code>null</code>).                      
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.password -->
  
  <configProperty name="net.sf.jasperreports.export.xls.password">
    <description>
Property that contains a String value representing the password in case of password protected sheets in documents.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPassword--">getPassword()</api> Excel export configuration setting.
<br/>
This property is by default not set (<code>null</code>).                      
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.pattern -->
  
  <configProperty name="net.sf.jasperreports.export.xls.pattern">
    <description>
Property whose value is an Excel compatible pattern, to be used as replacement for the text field pattern when exporting to XLS formats.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.print.page.height -->
  
  <configProperty name="net.sf.jasperreports.export.xls.print.page.height">
    <description>
Custom property specifying the page height in print preview pane, measured in pixels. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPrintPageHeight--">getPrintPageHeight()</api> Excel export configuration setting.
When this property is set globally or per report, all sheets in the generated document will come with the same page height. 
If this page height should differ from a sheet to another, we can set the above property at element level, so that the page height in a 
sheet will be read from the element in the sheet that contains this property. When several elements in a sheet provide the page height property, the 
maximum value for the page height will be considered.
<br/>
Properties set at element level take priority over properties set globally or per report level. The property is not set by default.          
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.print.page.width -->
  
  <configProperty name="net.sf.jasperreports.export.xls.print.page.width">
    <description>
Custom property specifying the page width in print preview pane, measured in pixels. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPrintPageWidth--">getPrintPageWidth()</api> Excel export configuration setting.
When this property is set globally or per report, all sheets in the generated document will come with the same page width. 
If this page width should differ from a sheet to another, we can set the above property at element level, so that the page width in a 
sheet will be read from the element in the sheet that contains this property. When several elements in a sheet provide the page width property, the 
maximum value for the page height will be considered.
<br/>
Properties set at element level take priority over properties set globally or per report level. The property is not set by default.          
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.print.header.margin -->
  
  <configProperty name="net.sf.jasperreports.export.xls.print.header.margin">
    <description>
Custom property storing the header margin for an Excel sheet, expressed in pixels. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPrintHeaderMargin--">getPrintHeaderMargin()</api> Excel export configuration setting.
When this property is set globally or per report, all sheets in the generated document will come with the same header margins. 
If these margins should differ from a sheet to another, we can set the above property at element level, so that header margins in a 
sheet will be read from the element in the sheet that contains this property. When several elements in a sheet provide header margin properties, the 
maximum value for the header margin will be considered.
<br/>
Properties set at element level take priority over properties set globally or per report level. Default value for this property is 0.          
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.print.footer.margin -->
  
  <configProperty name="net.sf.jasperreports.export.xls.print.footer.margin">
    <description>
Custom property storing the footer margin for an Excel sheet, expressed in pixels. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPrintFooterMargin--">getPrintFooterMargin()</api> Excel export configuration setting:
When this property is set globally or per report, all sheets in the generated document will come with the same footer margins. 
If these margins should differ from a sheet to another, we can set the above property at element level, so that footer margins in a 
sheet will be read from the element in the sheet that contains this property. When several elements in a sheet provide footer margin properties, the 
maximum value for the footer margin will be considered.
<br/>
Properties set at element level take priority over properties set globally or per report level. Default value for this property is 0.          
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.print.page.top.margin -->
  
  <configProperty name="net.sf.jasperreports.export.xls.print.page.top.margin">
    <description>
Custom property storing the top page margin for an Excel sheet, expressed in pixels. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPrintPageTopMargin--">getPrintPageTopMargin()</api> 
Excel export configuration setting.
<br/>
When this property is set globally or per report level, all sheets in the generated document will have the same top page margins. 
If these margins should differ from a sheet to another, we can set the above property at element level, so that the top page margin in a 
sheet will be read from the element in the sheet that contains this property. When several elements in a sheet provide top page margin properties, the 
maximum value for the related margin will be considered. Default value for this property is 0.
<br/>
Properties set at element level take priority over properties set globally or per report level.            
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.print.page.left.margin -->
  
  <configProperty name="net.sf.jasperreports.export.xls.print.page.left.margin">
    <description>
Custom property storing the left page margin for an Excel sheet, expressed in pixels. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPrintPageLeftMargin--">getPrintPageLeftMargin()</api> 
Excel export configuration setting.
<br/>
When this property is set globally or per report level, all sheets in the generated document will have the same left page margins. 
If these margins should differ from a sheet to another, we can set the above property at element level, so that the left page margin in a 
sheet will be read from the element in the sheet that contains this property. When several elements in a sheet provide left page margin 
properties, the maximum value for the related margin will be considered. Default value for this property is 0.
<br/>
Properties set at element level take priority over properties set globally or per report level.            
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.print.page.bottom.margin -->
  
  <configProperty name="net.sf.jasperreports.export.xls.print.page.bottom.margin">
    <description>
Custom property storing the bottom page margin for an Excel sheet, expressed in pixels. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPrintPageBottomMargin--">getPrintPageBottomMargin()</api> 
Excel export configuration setting.
<br/>
When this property is set globally or per report level, all sheets in the generated document will have the same bottom page margins. 
If these margins should differ from a sheet to another, we can set the above property at element level, so that the bottom page margin in a 
sheet will be read from the element in the sheet that contains this property. When several elements in a sheet provide bottom page margin 
properties, the maximum value for the related margin will be considered. Default value for this property is 0.
<br/>
Properties set at element level take priority over properties set globally or per report level.            
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.print.page.right.margin -->
  
  <configProperty name="net.sf.jasperreports.export.xls.print.page.right.margin">
    <description>
Custom property storing the right page margin for an Excel sheet, expressed in pixels. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getPrintPageRightMargin--">getPrintPageRightMargin()</api> 
Excel export configuration setting.
<br/>
When this property is set globally or per report level, all sheets in the generated document will have the same right page margins. 
If these margins should differ from a sheet to another, we can set the above property at element level, so that the right page margin in a 
sheet will be read from the element in the sheet that contains this property. When several elements in a sheet provide right page margin 
properties, the maximum value for the related margin will be considered. Default value for this property is 0.
<br/>
Properties set at element level take priority over properties set globally or per report level.            
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.break.before.row -->
  
  <configProperty name="net.sf.jasperreports.export.xls.break.before.row">
    <description>
Custom element property specifying if a sheet will break before the row displaying that element. 
It is very useful especially when displaying each report's group on a separate sheet is intended.             
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.break.after.row -->
  
  <configProperty name="net.sf.jasperreports.export.xls.break.after.row">
    <description>
Custom element property specifying if a sheet will break after the row displaying that element. 
It is very useful especially when displaying each report's group on a separate sheet is intended.             
    </description>
    <api>net/sf/jasperreports/engine/export/JRXlsAbstractExporterNature.html#PROPERTY_BREAK_AFTER_ROW</api>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.row.outline.level.{arbitrary_level} -->
  
  <configProperty name="net.sf.jasperreports.export.xls.row.outline.level.{arbitrary_level}">
    <description>
Property prefix used to indicate the current outline row level, and when necessary, the ending row of the current outline row 
group with the given level. The suffix of these properties is associated with the outline level, while the property value indicates 
if the current row group should continue or should end. The most recommended practice is to use the outline level itself as property 
suffix, although this is not mandatory. The suffix may take any other string value, but one has to keep in mind that suffixes are 
used as sorted row levels descriptors. For instance, because "aaa" &lt; "bbb", the outline level associated with the "aaa" suffix 
will be smaller than the level associated with the "bbb" suffix. A completely intuitive representation of the row levels uses the row 
level as property suffix.
<br/>
In such a case, the <code>net.sf.jasperreports.export.xls.outline.level.2</code> property means that its value is correlated with 
the outline level 2, so the current row belongs to a level 2 row group. Based on Office Open XML specs, allowed values for outline 
levels are positive integers from 1 to 7.
<br/>
The value of this property could be any expression (including <code>null</code>). When such a property occurrence is met, the suffix 
indicates the outline level for that row. If multiple properties with the same prefix are defined for the same row, the deepest 
outline level is considered for that row. To end an outline row group one has to set the related outline level property with the 
<code>End</code> value. This is a special property value instructing the JR engine that the current row group of that level ends 
on the current row. 
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.repeat.value -->
  
  <configProperty name="net.sf.jasperreports.export.xls.repeat.value">
    <description>
Property that specifies whether the value associated with 
<api href="net/sf/jasperreports/engine/export/JRXlsAbstractMetadataExporter.html#PROPERTY_COLUMN_NAME">PROPERTY_COLUMN_NAME</api> 
should be repeated or not when it is missing. This property is available for the metadata-based Excel export.    
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.direction -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.direction">
    <description>
This property indicates if the sheet is left-to-right or right-to-left oriented. Possible values are:
<ul>
  <li><code>LTR</code></li>
  <li><code>RTL</code></li>
</ul>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getSheetDirection--">getSheetDirection()</api> Excel export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.header.left -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.header.left">
    <description>
Custom property storing the text content of the Excel sheet left headers. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getSheetHeaderLeft--">getSheetHeaderLeft()</api> 
Excel export configuration setting.
The text content in Excel left header is limited to 255 characters. It may be normal plain text, or may contain some special 
character sequences that are usually interpreted by Excel app as dynamic settings for headers/footers:
<ul>
<li>&amp;P - the current page number</li>
<li>&amp;N - the total number of pages</li>
<li>&amp;D - the current date</li>
<li>&amp;T - the current time</li>
<li>&amp;A - the sheet name</li>
<li>&amp;F - the file name</li>
<li>&amp;Z - the file full name</li>
</ul>             
<b>Note: </b>Being a special XML character, &amp; should be escaped as &amp;amp;
<br/>
For instance, a left header property that contains the 'Page &lt;i&gt; of &lt;n&gt;' structure should be set as follows:
<br/>
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.header.left" value="Page &amp;amp;P of &amp;amp;N"/&gt;</code>
<br/>
<br/>
Starting with v.6.4.3 this property can be set also at element level, in order to control headers/footers in each sheet separately. 
If several elements in a sheet contain the same left header property, the value for the last element in the sheet will be considered.
Properties set at element level take priority over properties set globally or per report level.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.header.center -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.header.center">
    <description>
Custom property storing the text content of the Excel sheet center headers. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getSheetHeaderCenter--">getSheetHeaderCenter()</api> 
Excel export configuration setting.
The text content in Excel center header is limited to 255 characters. It may be normal plain text, or may contain some special 
character sequences that are usually interpreted by Excel app as dynamic settings for headers/footers:
<ul>
<li>&amp;P - the current page number</li>
<li>&amp;N - the total number of pages</li>
<li>&amp;D - the current date</li>
<li>&amp;T - the current time</li>
<li>&amp;A - the sheet name</li>
<li>&amp;F - the file name</li>
<li>&amp;Z - the file full name</li>
</ul>             
<b>Note: </b>Being a special XML character, &amp; should be escaped as &amp;amp;
<br/>
For instance, a center header property that contains the 'Page &lt;i&gt; of &lt;n&gt;' structure should be set as follows:
<br/>
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.header.center" value="Page &amp;amp;P of &amp;amp;N"/&gt;</code>
<br/>
<br/>
Starting with v.6.4.3 this property can be set also at element level, in order to control headers/footers in each sheet separately. 
If several elements in a sheet contain the same center header property, the value for the last element in the sheet will be considered.
Properties set at element level take priority over properties set globally or per report level.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.header.right -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.header.right">
    <description>
Custom property storing the text content of the Excel sheet right headers. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getSheetHeaderRight--">getSheetHeaderRight()</api> 
Excel export configuration setting.
The text content in Excel right header is limited to 255 characters. It may be normal plain text, or may contain some special 
character sequences that are usually interpreted by Excel app as dynamic settings for headers/footers:
<ul>
<li>&amp;P - the current page number</li>
<li>&amp;N - the total number of pages</li>
<li>&amp;D - the current date</li>
<li>&amp;T - the current time</li>
<li>&amp;A - the sheet name</li>
<li>&amp;F - the file name</li>
<li>&amp;Z - the file full name</li>
</ul>             
<b>Note: </b>Being a special XML character, &amp; should be escaped as &amp;amp;
<br/>
For instance, a right header property that contains the 'Page &lt;i&gt; of &lt;n&gt;' structure should be set as follows:
<br/>
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.header.right" value="Page &amp;amp;P of &amp;amp;N"/&gt;</code>
<br/>
<br/>
Starting with v.6.4.3 this property can be set also at element level, in order to control headers/footers in each sheet separately. 
If several elements in a sheet contain the same right header property, the value for the last element in the sheet will be considered.
Properties set at element level take priority over properties set globally or per report level.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.footer.left -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.footer.left">
    <description>
Custom property storing the text content of the Excel sheet left footers. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getSheetFooterLeft--">getSheetFooterLeft()</api> 
Excel export configuration setting.
The text content in Excel left footer is limited to 255 characters. It may be normal plain text, or may contain some special 
character sequences that are usually interpreted by Excel app as dynamic settings for headers/footers:
<ul>
<li>&amp;P - the current page number</li>
<li>&amp;N - the total number of pages</li>
<li>&amp;D - the current date</li>
<li>&amp;T - the current time</li>
<li>&amp;A - the sheet name</li>
<li>&amp;F - the file name</li>
<li>&amp;Z - the file full name</li>
</ul>             
<b>Note: </b>Being a special XML character, &amp; should be escaped as &amp;amp;
<br/>
For instance, a left footer property that contains the 'Page &lt;i&gt; of &lt;n&gt;' structure should be set as follows:
<br/>
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.footer.left" value="Page &amp;amp;P of &amp;amp;N"/&gt;</code>
<br/>
<br/>
Starting with v.6.4.3 this property can be set also at element level, in order to control headers/footers in each sheet separately. 
If several elements in a sheet contain the same left footer property, the value for the last element in the sheet will be considered.
Properties set at element level take priority over properties set globally or per report level.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.footer.center -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.footer.center">
    <description>
Custom property storing the text content of the Excel sheet center footers. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getSheetFooterCenter--">getSheetFooterCenter()</api> 
Excel export configuration setting.
The text content in Excel center footer is limited to 255 characters. It may be normal plain text, or may contain some special 
character sequences that are usually interpreted by Excel app as dynamic settings for headers/footers:
<ul>
<li>&amp;P - the current page number</li>
<li>&amp;N - the total number of pages</li>
<li>&amp;D - the current date</li>
<li>&amp;T - the current time</li>
<li>&amp;A - the sheet name</li>
<li>&amp;F - the file name</li>
<li>&amp;Z - the file full name</li>
</ul>             
<b>Note: </b>Being a special XML character, &amp; should be escaped as &amp;amp;
<br/>
For instance, a center footer property that contains the 'Page &lt;i&gt; of &lt;n&gt;' structure should be set as follows:
<br/>
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.footer.center" value="Page &amp;amp;P of &amp;amp;N"/&gt;</code>
<br/>
<br/>
Starting with v.6.4.3 this property can be set also at element level, in order to control headers/footers in each sheet separately. 
If several elements in a sheet contain the same center footer property, the value for the last element in the sheet will be considered.
Properties set at element level take priority over properties set globally or per report level.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.footer.right -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.footer.right">
    <description>
Custom property storing the text content of the Excel sheet right footers. 
Its value is used as default for the related 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getSheetFooterRight--">getSheetFooterRight()</api> 
Excel export configuration setting.
The text content in Excel right footer is limited to 255 characters. It may be normal plain text, or may contain some special 
character sequences that are usually interpreted by Excel app as dynamic settings for headers/footers:
<ul>
<li>&amp;P - the current page number</li>
<li>&amp;N - the total number of pages</li>
<li>&amp;D - the current date</li>
<li>&amp;T - the current time</li>
<li>&amp;A - the sheet name</li>
<li>&amp;F - the file name</li>
<li>&amp;Z - the file full name</li>
</ul>             
<b>Note: </b>Being a special XML character, &amp; should be escaped as &amp;amp;
<br/>
For instance, a right footer property that contains the 'Page &lt;i&gt; of &lt;n&gt;' structure should be set as follows:
<br/>
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.footer.right" value="Page &amp;amp;P of &amp;amp;N"/&gt;</code>
<br/>
<br/>
Starting with v.6.4.3 this property can be set also at element level, in order to control headers/footers in each sheet separately. 
If several elements in a sheet contain the same right footer property, the value for the last element in the sheet will be considered.
Properties set at element level take priority over properties set globally or per report level.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.name -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.name">
    <description>
Property used to set the name of the sheet containing a given element. Its value overrides the report-level settings for the sheet name. 
<br/>
If several elements in the sheet contain this property, the engine will consider the value of the last exported element's property.
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.names.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.names.{arbitrary_name}">
    <description>
Report properties (exporter hints) that configure sheet names to be used when exporting to Excel.
The properties are useful when defining sheet names in the JRXML template is required.
<br/>
Sheet names set via these properties are used as defaults for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#getSheetNames--">getSheetNames()</api> Excel export configuration setting.
<br/>
The properties should start with the 
<code>net.sf.jasperreports.export.xls.sheet.names.</code> prefix, followed by an 
arbitrary suffix. Each property can hold a single sheet name or several names 
separated by the slash ("/") character. Values are collected in the  
order in which the properties appear in the JRXML template, so one has to be careful with the 
order when editing a JRXML. The property suffixes are not important, but the order of the properties matters.
<br/>
For instance, if a given report has 3 resulting sheets, there are multiple 
possibilities to define the sheet names as "First sheet", "Second sheet" and "Third sheet" within the JRXML template:
<ol>
<li> Having one property for each sheet name:
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.names.sheet1" value="First sheet" /&gt;
</code>
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.names.second.sheet.name" value="Second sheet" /&gt;</code>
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.names.3" value="Third sheet" /&gt;</code>
<br/>
</li>
<li>
Having a single property containing all sheet names, separated by "/":
<br/>
<code>
&lt;property name="net.sf.jasperreports.export.xls.sheet.names.all" value="First
sheet/Second sheet/Third sheet" /&gt;</code>
<br/>
</li>
<li>
Using a combination of 1) and 2):
<br/>
<code>
&lt;property name="net.sf.jasperreports.export.xls.sheet.names.first" value="First
sheet" /&gt;</code>
<br/>
<code>&lt;property name="net.sf.jasperreports.export.xls.sheet.names.others"
value="Second sheet/Third sheet" /&gt;</code>
</li>
</ol>
If the user defines fewer sheet names (let's say x names) than the 
number of sheets produced when exporting the report, the exporter will use the custom user sheet names for the 
first x sheets in the document, and the remaining sheets will be named by 
default as "Page y", where y is the current page number.
<br/>
By default no sheet name properties are set.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.sheet.tab.color -->
  
  <configProperty name="net.sf.jasperreports.export.xls.sheet.tab.color">
    <description>
Property whose value is used to set the tab color of a given sheet in XLSX and ODS output formats. 
When set at report level, all sheets in the document will have their tabs colored the same way. 
When set at report element level and multiple elements in a sheet provide this property, 
the last read value will be considered.
<br/>
Its value usually can be expressed as #-prefixed CSS color.
<br/>
Report-level settings are overridden by element-level settings for this property. 
If several elements in a sheet contain this property, the engine will consider the value of the 
last exported element's property.
<br/>
<b>Note: </b>This property is not supported by the XLS output format.
	</description>
  </configProperty>
  

  <!-- net.sf.jasperreports.export.xls.show.gridlines -->
  
  <configProperty name="net.sf.jasperreports.export.xls.show.gridlines">
    <description>
Flag property that specifies if the gridlines in a given sheet are shown. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isShowGridLines--">isShowGridLines()</api> Excel export configuration setting.
<br/>
If multiple elements in a sheet provide this property, the last read value will be considered.
Global settings are overridden by report level settings; report level settings are overridden by element (sheet) level settings.    
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.shrink.to.fit -->
  
  <configProperty name="net.sf.jasperreports.export.xls.shrink.to.fit">
    <description>
Flag property that indicates whether the text font size should be decreased in order to 
keep the entire text visible in the cell. If set to true, this will automatically disable the 
wrap text setting for the cell (see <a href="#net.sf.jasperreports.export.xls.wrap.text">net.sf.jasperreports.export.xls.wrap.text</a>). 
<br/>
Usually this property works in conjunction with <a href="#net.sf.jasperreports.print.keep.full.text">net.sf.jasperreports.print.keep.full.text</a>, 
in order to preserve the entire text content at export time.
<br/>
The value of this property is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isShrinkToFit--">isShrinkToFit()</api> Excel export configuration setting.
<br/>
Settings at global level are overridden by report level settings; report level settings are overridden by element level settings.    
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.wrap.text -->
  
  <configProperty name="net.sf.jasperreports.export.xls.wrap.text">
    <description>
Custom element property specifying if text wrapping is allowed in a given cell. 
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsReportConfiguration.html#isWrapText--">isWrapText()</api> Excel export configuration setting.
<br/>
If set to <code>false</code>, text wrapping is forbidden, otherwise it is allowed.
</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xls.write.header -->
  
  <configProperty name="net.sf.jasperreports.export.xls.write.header">
    <description>
Property that specifies whether the export header (the column names) should be written or not, in the metadata-based Excel export.    
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/XlsMetadataReportConfiguration.html#isWriteHeader--">isWriteHeader()</api> Excel metadata export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xlsx.macro.template -->
  
  <configProperty name="net.sf.jasperreports.export.xlsx.macro.template">
    <description>
Property used to store the location of an existing Excel 2007 workbook template containing a macro object. 
When exporting into Excel 2007 format, the macro object will be copied into the generated document if the template location is valid. 
Macros can be loaded from Excel 2007 macro-enabled template files (*.xltm) as well as from valid 
Excel macro-enabled documents (*.xlsm).
<br/>
The value of this property is used as default for the 
<api href="net/sf/jasperreports/export/XlsxExporterConfiguration.html#getMacroTemplate--">getMacroTemplate()</api> Excel 2007 export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.awt.ignore.missing.font -->
  
  <configProperty name="net.sf.jasperreports.awt.ignore.missing.font">
    <description>When set to <code>false</code>, it forces the engine to check if the font used as value for the <code>fontName</code> attribute inside 
the report template is available either through the JasperReports font extension mechanism or as a JVM accesible font, 
and raise a <api href="net/sf/jasperreports/engine/util/JRFontNotFoundException.html">JRFontNotFoundException</api> exception, if this font is not available.</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.awt.indent.first.line -->
  
  <configProperty name="net.sf.jasperreports.awt.indent.first.line">
    <description>Property used to disable the indentation for the first line in a paragraph.</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.awt.justify.last.line -->
  
  <configProperty name="net.sf.jasperreports.awt.justify.last.line">
    <description>Property used to force the justified alignment for the last line in a paragraph.</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.awt.superscript.fix.enabled -->
  
  <configProperty name="net.sf.jasperreports.awt.superscript.fix.enabled">
    <description>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xml.start.page.index -->
  
  <configProperty name="net.sf.jasperreports.export.xml.start.page.index">
    <description>
Property used to store the start page index for the XML export.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xml.end.page.index -->
  
  <configProperty name="net.sf.jasperreports.export.xml.end.page.index">
    <description>
Property used to store the end page index for the XML export.    
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.xml.page.count -->
  
  <configProperty name="net.sf.jasperreports.export.xml.page.count">
    <description>
Property used to store the page count for the XML export.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.table -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.table">
    <description>
Property used to associate a PDF TABLE tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.tr -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.tr">
    <description>
Property used to associate a PDF TR tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.th -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.th">
    <description>
 Property used to associate a PDF TH tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.td -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.td">
    <description>
Property used to associate a PDF TD tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.l -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.l">
    <description>
Property used to associate a PDF L tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.li -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.li">
    <description>
Property used to associate a PDF LI tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.h1 -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.h1">
    <description>
Property used to associate a PDF H1 tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.h2 -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.h2">
    <description>
Property used to associate a PDF H2 tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.h3 -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.h3">
    <description>
Property used to associate a PDF H3 tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.h4 -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.h4">
    <description>
Property used to associate a PDF H4 tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.h5 -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.h5">
    <description>
Property used to associate a PDF H5 tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.h6 -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.h6">
    <description>
Property used to associate a PDF H6 tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.colspan -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.colspan">
    <description>
Property used to associate a PDF COLSPAN tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.tag.rowspan -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.tag.rowspan">
    <description>
Property used to associate a PDF ROWSPAN tag with this element.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.big.decimal.minimum.precision -->
  
  <configProperty name="net.sf.jasperreports.big.decimal.minimum.precision">
    <description>
An integer property that provides the minimum precision to be used for <code>java.math.BigDecimal</code> division operations.
Important note: this property is only effective when Java 1.5 or newer is used.  See <api href="net/sf/jasperreports/engine/util/BigDecimalUtils.html">BigDecimalUtils</api> for details.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.{built_in_component_name}.version -->
  
  <configProperty name="net.sf.jasperreports.components.{built_in_component_name}.version">
    <description>
Properties having this prefix specify the version for the associated built-in component in a given report. Built-in components are those who are shipped as part of the
JasperReports Library JAR.
<br/>
For instance, for the table component shipped with JR distribution, the version is given with a property as follows: 
<br/>
<br/>
<code>&lt;property name="net.sf.jasperreports.components.table.version" value="4.0.0" /&gt;</code>
<br/>
<br/>
If not specified, the component version is considered to be the one specified by the <a href="#net.sf.jasperreports.report.version">net.sf.jasperreports.report.version</a>.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.awt.check.available.printers -->
  
  <configProperty name="net.sf.jasperreports.awt.check.available.printers">
    <description>
Property whose value is used to check the availability of printers accepting jobs.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.html.flush.output -->
  
  <configProperty name="net.sf.jasperreports.export.html.flush.output">
    <description>
A boolean property that determines whether the HTML exporter should flush the output stream after writing the HTML content to it.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.collapse.missing.bookmark.levels -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.collapse.missing.bookmark.levels">
    <description>
Property that determines if missing bookmark levels are collapsed, or if 
empty bookmarks are created for the missing levels.
<p>
The property dictates what happens when a filled report contains an anchor
having a bookmark level that is not the immediate successor of its parent
(e.g. an anchor with bookmark level 3 follows immediately after a bookmark
of level 1).
If the property is not set, an empty bookmark is created for the missing
level(s) in order to preserve the original level of the bookmark.
When the property is set, the level of the bookmark will be collapsed and
the bookmark will be created as a direct descendant of its nearest parent.
</p>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.pdf.size.page.to.content -->
  
  <configProperty name="net.sf.jasperreports.export.pdf.size.page.to.content">
    <description>
Property which specifies if the size of each page should be increased to accommodate its content.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.extension.file.repository.resolve.absolute.path -->
  
  <configProperty name="net.sf.jasperreports.extension.file.repository.resolve.absolute.path">
    <description>
Flag property that indicates whether the absolute path to be used instead, when resources are not found in the file repository.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.extension.file.repository.root -->
  
  <configProperty name="net.sf.jasperreports.extension.file.repository.root">
    <description>
Specifies the file repository root location.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.page.break.no.pagination -->
  
  <configProperty name="net.sf.jasperreports.page.break.no.pagination">
    <description>
Determines how page breaks are to be handled in reports that are not paginated.
<br/>
Possible values are:
<ul>
  <li><code>ignore</code> - page breaks are ignored in non paginated reports.</li>
  <li><code>apply</code> - page breaks are honoured in non paginated reports.</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.parameter.evaluation.time -->
  
  <configProperty name="net.sf.jasperreports.parameter.evaluation.time">
    <description>
Specifies the default value for the <api href="net/sf/jasperreports/engine/JRParameter.html#getEvaluationTime--">getEvaluationTime()</api> property of a dataset parameter.
<br/>
Possible values are defined by the <api href="net/sf/jasperreports/engine/type/ParameterEvaluationTimeType.html">ParameterEvaluationTimeType</api> enumeration.
<ul>
  <li><code>Early</code> - Evaluate the parameter default value expression before parameter contributors.</li>
  <li><code>Late</code> - Evaluate the parameter default value expression after parameter contributors.</li>
</ul>
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.property.evaluation.time -->
  
  <configProperty name="net.sf.jasperreports.property.evaluation.time">
    <description>
Specifies the default value for the <api href="net/sf/jasperreports/engine/DatasetPropertyExpression.html#getEvaluationTime--">getEvaluationTime()</api> setting of a dataset property expression.
<br/>
Possible values are defined by the <api href="net/sf/jasperreports/engine/type/PropertyEvaluationTimeType.html">PropertyEvaluationTimeType</api> enumeration.
<ul>
  <li><code>Early</code> - Evaluate the property expression before parameter contributors.</li>
  <li><code>Late</code> - Evaluate the property expression after parameter contributors.</li>
  <li><code>Report</code> - Evaluate the property expression at the end of the report.</li>
</ul>
    </description>
  </configProperty>


  <!-- net.sf.jasperreports.default.locale -->
  
  <configProperty name="net.sf.jasperreports.default.locale">
    <description>
The default locale used to fill reports.  The property is overridden by the <code>REPORT_LOCALE</code> parameter value.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.default.timezone -->
  
  <configProperty name="net.sf.jasperreports.default.timezone">
    <description>
The default time zone used to fill reports.  The property is overridden by the <code>REPORT_TIME_ZONE</code> parameter value.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.text.pattern.date -->
  
  <configProperty name="net.sf.jasperreports.text.pattern.date">
    <description>
Provides a default pattern to be used for <code>java.sql.Date</code> values.

<p>
Locale specific values can be configured by appending _&lt;locale code&gt; to the property name.
</p>

<p>
The property can be set at global/JasperReports context level.
</p>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.text.pattern.time -->
  
  <configProperty name="net.sf.jasperreports.text.pattern.time">
    <description>
Provides a default pattern to be used for <code>java.sql.Time</code> values.

<p>
Locale specific values can be configured by appending _&lt;locale code&gt; to the property name.
</p>

<p>
The property can be set at global/JasperReports context level.
</p>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.text.pattern.datetime -->
  
  <configProperty name="net.sf.jasperreports.text.pattern.datetime">
    <description>
Provides a default pattern to be used for <code>java.util.Date</code> values other than <code>java.sql.Date</code> and <code>java.sql.Time</code>.

<p>
Locale specific values can be configured by appending _&lt;locale code&gt; to the property name.
</p>

<p>
The property can be set at global/JasperReports context level.
</p>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.text.pattern.integer -->
  
  <configProperty name="net.sf.jasperreports.text.pattern.integer">
    <description>
Provides a default pattern to be used for numerical values that are known to be integer, i.e. integer primitive wrapper types and <code>java.math.BigInteger</code>.

<p>
Locale specific values can be configured by appending _&lt;locale code&gt; to the property name.
</p>

<p>
The property can be set at global/JasperReports context level.
</p>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.text.pattern.number -->
  
  <configProperty name="net.sf.jasperreports.text.pattern.number">
    <description>
Provides a default pattern to be used for numerical values other than the integer types.

<p>
Locale specific values can be configured by appending _&lt;locale code&gt; to the property name.
</p>

<p>
The property can be set at global/JasperReports context level.
</p>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.frame.border.split.type -->
  
  <configProperty name="net.sf.jasperreports.frame.border.split.type">
    <description>
Provides the default border split type for frames.

<p>
The property can be set at report and global/JasperReports context levels.
The property value can be NoBorders, in which case frames that span two pages do not have the bottom border of the first fragment and the top border of the second fragment drawn,
and DrawBorders, in which case both fragments have borders drawn on all sides.
</p>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.jdbc.fields.time.zone -->
  
  <configProperty name="net.sf.jasperreports.jdbc.fields.time.zone">
    <description>
Property specifying the default time zone to be used for all date/time fields when sending and retrieving date/time values to and from the database.
<br/>
The property can be set globally or at dataset level.
<br/>
The property value can be a time zone ID or REPORT_TIME_ZONE.
In the latter case the report time zone (as in <api href="net/sf/jasperreports/engine/JRParameter.html#REPORT_TIME_ZONE">JRParameter.REPORT_TIME_ZONE</api>) will be used.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.jdbc.parameters.time.zone -->
  
  <configProperty name="net.sf.jasperreports.jdbc.parameters.time.zone">
    <description>
Property specifying the default time zone to be used for all date/time parameters when sending and retrieving date/time values to and from the database.
<br/>
The property can be set globally or at dataset level.
<br/>
The property value can be a time zone ID or REPORT_TIME_ZONE.
In the latter case the report time zone (as in <api href="net/sf/jasperreports/engine/JRParameter.html#REPORT_TIME_ZONE">JRParameter.REPORT_TIME_ZONE</api>) will be used.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.jdbc.time.zone -->
  
  <configProperty name="net.sf.jasperreports.jdbc.time.zone">
    <description>
Property specifying the default time zone to be used for sending and retrieving date/time values to and from the database.
 
<br/>
The property can be set globally, at dataset level, at parameter and field levels, and as a report/dataset parameter.
Note that sending a value as parameter will override all properties, and the time zone will be used for all date/time parameters and fields in the report. 

<br/>
The property value can be a time zone ID or REPORT_TIME_ZONE.
In the latter case the report time zone (as in <api href="net/sf/jasperreports/engine/JRParameter.html#REPORT_TIME_ZONE">JRParameter.REPORT_TIME_ZONE</api>) will be used.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.olap.field.mapping -->
  
  <configProperty name="net.sf.jasperreports.olap.field.mapping">
    <description>
Property specifying the mapping for the dataset field in case an OLAP data source is used. 
This mapping was previously specified using the <code>fieldDescription</code> attribute, but using this custom property is now recommended.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.executable.path -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.executable.path">
    <description>
Property specifying the path to the PhantomJS binary/executable file.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.expiration.count -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.expiration.count">
    <description>
Property specifying the number of jobs after PhantomJS will expire. Default value is 1000.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.expiration.time -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.expiration.time">
    <description>
Property specifying the PhantomJS expiration time (in milliseconds). Default value is 1200000 (20 minutes).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.idle.ping.interval -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.idle.ping.interval">
    <description>
Property specifying the PhantomJS process idle ping interval (in milliseconds). Default value is 40000 (40 seconds).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.idle.timeout -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.idle.timeout">
    <description>
Property specifying the PhantomJS process idle timeout (in milliseconds). Default value is 300000 (5 minutes).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.max.process.count -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.max.process.count">
    <description>
Property specifying the maximum number of processes in the PhantomJS pool. Default value is 8.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.options.{arbitrary_suffix} -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.options.{arbitrary_suffix}">
    <description>
Property prefix used to identify a set of properties that store command options for the PhantomJS start command. For instance:
<br/>
<ul>
<li><code>net.sf.jasperreports.phantomjs.options.1=--load-images=true</code></li>
<li><code>net.sf.jasperreports.phantomjs.options.2=--output-encoding=utf8</code></li>
</ul>
These properties are by default not set.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.pool.borrow.timeout -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.pool.borrow.timeout">
    <description>
Property specifying the PhantomJS pool process borrow timeout (in milliseconds). Default value is 120000 (2 minutes). 
If no process is available after this time an exception will be thrown.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.request.timeout -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.request.timeout">
    <description>
Property specifying the PhantomJS request timeout (in milliseconds). Default value is 60000 (1 minute).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.start.timeout -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.start.timeout">
    <description>
Property specifying the PhantomJS process start timeout (in milliseconds). Default value is 10000 (10 seconds).
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.phantomjs.tempdir.path -->
  
  <configProperty name="net.sf.jasperreports.phantomjs.tempdir.path">
    <description>
Property specifying the path to the directory of temporary files.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.format -->
  
  <configProperty name="net.sf.jasperreports.xls.format">
    <description>
Built-in parameter/property holding the value of the Excel format to be used when parsing the Excel data source.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xls.sheet.selection -->
  
  <configProperty name="net.sf.jasperreports.xls.sheet.selection">
    <description>
Built-in parameter/property holding the value of the sheet name to be used when parsing the Excel data source.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xml.date.pattern -->
  
  <configProperty name="net.sf.jasperreports.xml.date.pattern">
    <description>
Property holding the value of the date format pattern to be used when parsing the XML data.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xml.detect.namespaces -->
  
  <configProperty name="net.sf.jasperreports.xml.detect.namespaces">
    <description>
Boolean parameter/property that specifies whether the XML document should be parsed for namespaces or not.
This property is meaningful only when:
<ul>
<li>the <api href="net/sf/jasperreports/engine/query/XalanXPathQueryExecuterFactory.html#PARAMETER_XML_NAMESPACE_MAP">PARAMETER_XML_NAMESPACE_MAP</api> 
parameter is not provided or provided with a <code>null</code> value
</li>
<li>there are no properties prefixed with 
<api href="net/sf/jasperreports/engine/query/XalanXPathQueryExecuterFactory.html#XML_NAMESPACE_PREFIX">XML_NAMESPACE_PREFIX</api>;
</li>
<li>the xpath query expression that is provided <b>contains</b> XML namespace prefixes
</li>
</ul>
It defaults to <code>false</code>
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xml.load.unknown.entities -->
  
  <configProperty name="net.sf.jasperreports.xml.load.unknown.entities">
    <description>
Property that determines whether loading entities that are not known to the engine is allowed.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xml.namespace.{arbitrary_prefix} -->
  
  <configProperty name="net.sf.jasperreports.xml.namespace.{arbitrary_prefix}">
    <description>
Prefix for properties holding the namespace prefix and uri (e.g. net.sf.jasperreports.xml.namespace.{arbitrary_prefix} = uri).
<br/>
This property has a lower priority than 
<api href="net/sf/jasperreports/engine/query/XalanXPathQueryExecuterFactory.html#PARAMETER_XML_NAMESPACE_MAP">PARAMETER_XML_NAMESPACE_MAP</api>, 
that, if it is specified, will cause the prefixed properties not to be searched for.
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.xml.number.pattern -->
  
  <configProperty name="net.sf.jasperreports.xml.number.pattern">
    <description>
Property holding the value of the number format pattern to be used when parsing the XLS data.
	</description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.week.start.day -->
  
  <configProperty name="net.sf.jasperreports.week.start.day">
    <description>
Numeric property that determines which is the first weekday by default: 
<ul>
<li>if set to 1, the week starts on Sunday</li>
<li>if set to 2, the week starts on Monday.</li>
</ul>
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.velocity.{arbitrary_suffix} -->
  
  <configProperty name="net.sf.jasperreports.velocity.{arbitrary_suffix}">
    <description>
Properties with this prefix are loaded into an <code>org.apache.velocity.app.VelocityEngine</code> instance object in 
order to process velocity templates.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.web.embed.component.metadata.in.html.output -->
  
  <configProperty name="net.sf.jasperreports.web.embed.component.metadata.in.html.output">
    <description>
Property that specifies whether the component metadata should be embedded in HTML output.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.web.report.execution.path -->
  
  <configProperty name="net.sf.jasperreports.web.report.execution.path">
    <description>
Property that specifies the report execution path.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.web.report.interaction.path -->
  
  <configProperty name="net.sf.jasperreports.web.report.interaction.path">
    <description>
Property that specifies the report interaction path.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.web.report.resources.path -->
  
  <configProperty name="net.sf.jasperreports.web.report.resources.path">
    <description>
Property that specifies the report resources path.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.web.request.parameter.dynamic.resource -->
  
  <configProperty name="net.sf.jasperreports.web.request.parameter.dynamic.resource">
    <description>
Property that specifies the name of the request parameter that indicates if this is a dynamic resource.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.web.request.parameter.resource.bundle -->
  
  <configProperty name="net.sf.jasperreports.web.request.parameter.resource.bundle">
    <description>
Property that specifies the name of the request parameter associated with this resource bundle.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.web.request.parameter.resource.locale -->
  
  <configProperty name="net.sf.jasperreports.web.request.parameter.resource.locale">
    <description>
Property that specifies the name of the request parameter associated with this resource Locale.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.web.request.parameter.resource.uri -->
  
  <configProperty name="net.sf.jasperreports.web.request.parameter.resource.uri">
    <description>
Property that specifies the name of the request parameter associated with this resource URI.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.export.graphics2d.white.page.background -->
  
  <configProperty name="net.sf.jasperreports.export.graphics2d.white.page.background">
    <description>
Property that that determines whether the Graphics2D exporter is to draw white backgrounds for exported pages.
<br/>
Its value is used as default for the 
<api href="net/sf/jasperreports/export/Graphics2DReportConfiguration.html#isWhitePageBackground--">isWhitePageBackground()</api> Graphics2D export configuration setting.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.qrcode.character.encoding -->
  
  <configProperty name="net.sf.jasperreports.components.qrcode.character.encoding">
    <description>
Property that provides the character encoding to be used for QR code component elements.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.components.table.name -->
  
  <configProperty name="net.sf.jasperreports.components.table.name">
    <description>
Property that provides a name for table.
The name is used as report name in element origins.
    </description>
  </configProperty>
  
  
  <!-- net.sf.jasperreports.legacy.relative.path.enabled -->
  
  <configProperty name="net.sf.jasperreports.legacy.relative.path.enabled">
    <description>
Property that determines whether resource paths in subreports, style templates and data adapters 
should be interpreted as relative to the master report location.
<br/>
Starting with version 6.6.0, relative paths in subreports, style templates and data adapters are
resolved as relative to the resource that contains them.
Prior to version 6.6.0, relative paths in subreports, style templates and data adapters were 
resolved as relative to the master report resource.
This property can be set to <code>true</code> to restore the pre 6.6.0 functionality.
<br/>
The default value of the property is <code>false</code>.
<br/>
The property should only be set when upgrading from a version older than 6.6.0 with a repository
that relied on the fact that paths were relative to the master report.
The property might be removed at some point in the future.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.chrome.enabled -->
  
  <configProperty name="net.sf.jasperreports.chrome.enabled">
    <description>
Determines whether Chromium/Google Chrome is to be used to render JavaScript based components
(such as Custom Visualization Components) for exporting to formats other than HTML.
<br/>
When enabled, a browser instance is launched (in headless mode by default) on the machine 
where JasperReports is running.
Scripts and resources needed to render the components are written to a temporary folder,
and JasperReports communicates with the browser instance via the Chrome DevTools Protocol.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.chrome.executable.path -->
  
  <configProperty name="net.sf.jasperreports.chrome.executable.path">
    <description>
The path of the Chromium/Google Chrome executable.
<br/>
If not set, a predefined list of common paths will be checked.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.chrome.headless -->
  
  <configProperty name="net.sf.jasperreports.chrome.headless">
    <description>
Determines whether Chromium/Google Chrome is to be launched in headless mode.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.chrome.argument.{name} -->
  
  <configProperty name="net.sf.jasperreports.chrome.argument.{name}">
    <description>
An arbitrary argument used when launching Chromium/Google Chrome.
<br/>
The {name} suffix is used as argument name, and the property value as
argument value.
A boolean property value is required for flags.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.chrome.tempdir.path -->
  
  <configProperty name="net.sf.jasperreports.chrome.tempdir.path">
    <description>
The path were temporary resource files used for rendering components will be written. 
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.chrome.idle.timeout -->
  
  <configProperty name="net.sf.jasperreports.chrome.idle.timeout">
    <description>
The number of milliseconds after which an idle Chromium/Google Chrome instance will be
shut down.
<br/>
After shuttind down an idle instnace, a fresh browser process is launched when needed.
<br/>
The property can be set to 0 to repress shutting down idle instances.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.chrome.live.timeout -->
  
  <configProperty name="net.sf.jasperreports.chrome.live.timeout">
    <description>
The number of milliseconds a Chromium/Google Chrome instance is allowed to live.
<br/>
The instance is shut down after the configured timeout, first waiting for the 
ongoing component render tasks to finish.
After shuttind down an instance, a fresh browser process is launched when needed.
<br/>
The property can be set to 0 to repress shutting down browser instances.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.chrome.page.timeout -->
  
  <configProperty name="net.sf.jasperreports.chrome.page.timeout">
    <description>
The number of milliseconds after which a component render task is interrupted.
<br/>
A component render task usually consists of loading an HTML page from a temporary
file, running JavaScript code to render the component and retriving an SVG
representation of the component or taking a screenshot.
Interrupting a component render task raises an exception which in most cases
aborts the report export process.
<br/>
The property can be set to 0 to repress the interrupting component render tasks
(unless the component itself has a timeout defined).
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.chrome.page.isolate -->
  
  <configProperty name="net.sf.jasperreports.chrome.page.isolate">
    <description>
Whether to create Chrome pages in isolated mode for component render tasks.
<br/>
Isolated pages do not share cookies and other page data.
The implementation relies on the Chrome DevTools Protocol Target.createBrowserContext command.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.legacy.frame.width.stretch.disabled -->
  
  <configProperty name="net.sf.jasperreports.legacy.frame.width.stretch.disabled">
    <description>
Flag to disable stretching the width of frames to accomodate containing elements
that become wider than their design time width at fill time (such as crosstabs
and subreports).
<br/>
Before version 6.13.0, frame width was not increased in such cases, resulting in frames
whose contents exceeded the frame width.  Some exporters are not able to properly
handle such frames, therefore starting from version 6.13.0 frames are automatically
stretched horizontally.
<br/>
The property can be set to <code>true</code> to revert to the pre 6.13.0 behaviour.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.report.class.filter.enabled -->
  
  <configProperty name="net.sf.jasperreports.report.class.filter.enabled">
    <description>
Flag to enable filtering of classes that can be used in report expressions.
<br/>
The list of allowed classes is configured via 
<a href="#net.sf.jasperreports.report.class.whitelist.{arbitrary_name}">net.sf.jasperreports.report.class.whitelist.{arbitrary_name}</a>
properties.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.report.class.whitelist.{arbitrary_name} -->
  
  <configProperty name="net.sf.jasperreports.report.class.whitelist.{arbitrary_name}">
    <description>
Defines a list of classes that are allowed in report expressions.
<br/>
The property value should be a comma separated list of class names.  Wildcards are supported in class names:
<ul>
 <li><code>*</code> stands for any class/package name or part of a class/package name, e.g.
  <ul>
   <li><code>net.sf.jasperreports.*</code> means any class in the <code>net.sf.jasperreports</code> package (but not in subpackages)</li>
   <li><code>net.sf.jasperreports.*Enum</code> means any class in the <code>net.sf.jasperreports</code> package that ends in <code>Enum</code></li>
  </ul>
 </li>
 <li><code>**</code> stands for any fully qualified class name or part of a fully qualified class name, e.g.
  <ul>
   <li><code>net.sf.jasperreports.**</code> means any class in the <code>net.sf.jasperreports</code> package or in a subpackage</li>
   <li><code>net.sf.jasperreports.**Enum</code> means any class that ends in <code>Enum</code> in the <code>net.sf.jasperreports</code> package or in a subpackage</li>
   <li><code>**</code> means any class (note that for performance reasons instead of whitelisting all classes it's better to unset the <code>net.sf.jasperreports.report.class.filter.enabled</code> flag)</li>
  </ul>
 </li>
</ul>
<br/>
The <a href="#net.sf.jasperreports.report.class.filter.enabled">net.sf.jasperreports.report.class.filter.enabled</a>
flag needs to be set in order for the whitelist to apply.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.legacy.compiler.source.included.parameters -->
  
  <configProperty name="net.sf.jasperreports.legacy.compiler.source.included.parameters">
    <description>
Property to specify parameters that are to be included in classes generated for reports.
<br/>
Starting with JasperReports 6.13.0, classes generated for reports only include parameters that are used in expressions.
This property can be used to specify parameters to include in classes, even when not used in expressions.
<br/>
The property value can either be <code>*</code>, which means that all parameters are to be included in classes,
or a list of comma separated parameter names.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.legacy.compiler.source.included.fields -->
  
  <configProperty name="net.sf.jasperreports.legacy.compiler.source.included.fields">
    <description>
Property to specify fields that are to be included in classes generated for reports.
<br/>
Starting with JasperReports 6.13.0, classes generated for reports only include fields that are used in expressions.
This property can be used to specify fields to include in classes, even when not used in expressions.
<br/>
The property value can either be <code>*</code>, which means that all fields are to be included in classes,
or a list of comma separated field names.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.legacy.compiler.source.included.variables -->
  
  <configProperty name="net.sf.jasperreports.legacy.compiler.source.included.variables">
    <description>
Property to specify variables that are to be included in classes generated for reports.
<br/>
Starting with JasperReports 6.13.0, classes generated for reports only include variables that are used in expressions.
This property can be used to specify variables to include in classes, even when not used in expressions.
<br/>
The property value can either be <code>*</code>, which means that all variables are to be included in classes,
or a list of comma separated variable names.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.jdbc.data.adapter.auto.commit -->
  
  <configProperty name="net.sf.jasperreports.jdbc.data.adapter.auto.commit">
    <description>
Flag that sets a default value for the <code>autoCommit</code> attribute of JDBC data adapters.
<br/>
By default no value is set, which means that <code>setAutoCommit</code> is not called on JDBC connections created by data adapter.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.jdbc.data.adapter.read.only -->
  
  <configProperty name="net.sf.jasperreports.jdbc.data.adapter.read.only">
    <description>
Flag that sets a default value for the <code>readOnly</code> attribute of JDBC data adapters.
<br/>
By default no value is set, which means that <code>setReadOnly</code> is not called on JDBC connections created by data adapter.
    </description>
  </configProperty>
  
  
  <!-- 	net.sf.jasperreports.jdbc.data.adapter.transaction.isolation -->
  
  <configProperty name="net.sf.jasperreports.jdbc.data.adapter.transaction.isolation">
    <description>
Property that sets a default value for the <code>transactionIsolation</code> attribute of JDBC data adapters.
<br/>
By default no value is set, which means that <code>setTransactionIsolation</code> is not called on JDBC connections created by data adapter.
Possible values are:
<ul>
  <li><code>NONE</code></li>
  <li><code>READ_UNCOMMITTED</code></li>
  <li><code>READ_COMMITTED</code></li>
  <li><code>REPEATABLE_READ</code></li>
  <li><code>SERIALIZABLE</code></li>
</ul>
See the documentation of <code>java.sql.Connection</code> for details on the transaction isolation types.
    </description>
  </configProperty>
  
  
</configReference>
