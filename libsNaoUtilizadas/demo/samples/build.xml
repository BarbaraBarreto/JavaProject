<project name="Samples" default="testAll" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<description>Helps testing all the samples at once.</description>
	
	<target name="testAll" description="Test all the samples.">
		<echo message=""/>
		<echo message="***********************************"/>
		<echo message="* TESTING ALL THE SAMPLES         *"/>
		<echo message="***********************************"/>
		<echo message=""/>

		<subant target="test">
			<!-- FIXMEIVY -->
			<fileset dir="." includes="*/build.xml"/>
		</subant>
	</target>


	<target name="clean" description="Clean all the samples.">
		<subant target="clean">
			<fileset dir="." includes="*/build.xml"/>
		</subant>
	</target>


	<!-- Sample Level Targets -->

	<path id="project-classpath">
		<path refid="project-lib"/>
		<pathelement location="../../build/classes"/>
	</path>

	<path id="sample-classpath">
		<pathelement location="${sample.dir}/build/classes"/>
        <pathelement location="${sample.dir}/build/components"/>
		<pathelement location="../../ext/fonts"/>
		<path refid="project-classpath"/>
	</path>

	<target name="prepare-compile-classpath">
		<ant dir="../../" target="compile"/>
		<ivy:configure file="../../ivysettings.xml" override="true"/>
		<local name="ivy-file"/>
		<condition property="ivy-file" value="${sample.dir}/ivy.xml" else="../../ivy.xml">
			<available file="${sample.dir}/ivy.xml"/>
		</condition>
		<ivy:resolve file="${ivy-file}" log="download-only" conf="compile"/> 
		<ivy:cachepath pathid="project-lib"/> 
	</target>

	<target name="prepare-test-classpath">
		<ant dir="../../" target="compile"/>
		<ivy:configure file="../../ivysettings.xml" override="true"/>
		<local name="ivy-file"/>
		<condition property="ivy-file" value="${sample.dir}/ivy.xml" else="../../ivy.xml">
			<available file="${sample.dir}/ivy.xml"/>
		</condition>
		<ivy:resolve file="${ivy-file}" log="download-only" conf="test"/> 
		<ivy:cachepath pathid="project-lib"/> 
	</target>

	<target name="javac" depends="prepare-compile-classpath">
		<mkdir dir="${sample.dir}/build/classes"/> 
		<javac srcdir="${sample.dir}/src" destdir="${sample.dir}/build/classes" debug="true" optimize="false" target="1.8" source="1.8"
				encoding="UTF-8" includeantruntime="false">
			<classpath refid="sample-classpath"/>
			<compilerarg value="-Xlint:-unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:-options"/>
		</javac>
		<copy todir="${sample.dir}/build/classes">
			<fileset dir="${sample.dir}/src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="prepare-compile-classpath">
		<mkdir dir="${sample.dir}/build/reports"/> 
		<taskdef name="jrc" classname="net.sf.jasperreports.ant.JRAntCompileTask"> 
			<classpath refid="sample-classpath"/>
		</taskdef>
		<jrc 
			destdir="${sample.dir}/build/reports"
			tempdir="${sample.dir}/build/reports"
			>
			<!-- keepjava="true" -->
			<src>
				<fileset dir="${sample.dir}/reports">
					<include name="**/*.jrxml"/>
				</fileset>
			</src>
			<classpath refid="sample-classpath"/>
		</jrc>
		<copy todir="${sample.dir}/build/reports">
			<fileset dir="${sample.dir}/reports">
				<exclude name="**/*.jrxml"/>
			</fileset>
		</copy>
	</target>

	<target name="fill" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="fill"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="view" depends="prepare-test-classpath">
		<java classname="net.sf.jasperreports.view.JasperViewer" fork="true" dir="${sample.dir}">
			<arg value="build/reports/${sample.report.name}.jrprint"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="viewXml" depends="prepare-test-classpath">
		<java classname="net.sf.jasperreports.view.JasperViewer" fork="true" dir="${sample.dir}">
			<arg value="build/reports/${sample.report.name}.jrpxml"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="print" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="print"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="pdf" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="pdf"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>
	
	<target name="pdfa1" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="pdfa1"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="xml" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="xml"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="xmlEmbed" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="xmlEmbed"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="html" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="html"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="rtf" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="rtf"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>
	
	<target name="xls" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="xls"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="csv" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="csv"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>
	
	<target name="csvMetadata" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="csvMetadata"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>
	
	<target name="xlsMetadata" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="xlsMetadata"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>
	
	<target name="jsonMetadata" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="jsonMetadata"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>
	
	<target name="odt" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="odt"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="ods" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="ods"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="docx" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="docx"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="xlsx" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="xlsx"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="pptx" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="pptx"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="run" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="run"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="writeXml" depends="prepare-compile-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<arg value="writeXml"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="viewDesignXml" depends="prepare-test-classpath">
		<java classname="net.sf.jasperreports.view.JasperDesignViewer" fork="true">
			<arg value="${sample.dir}/reports/${sample.report.name}.jrxml"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="viewDesign" depends="prepare-test-classpath">
		<java classname="net.sf.jasperreports.view.JasperDesignViewer" fork="true">
			<arg value="${sample.dir}/build/reports/${sample.report.name}.jasper"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

	<target name="decompile" depends="prepare-compile-classpath">
		<mkdir dir="${sample.dir}/build/reports"/> 
		<taskdef name="jrdc" classname="net.sf.jasperreports.ant.JRAntDecompileTask"> 
			<classpath refid="sample-classpath"/>
		</taskdef>
		<jrdc destdir="${sample.dir}/build/reports">
			<src>
				<fileset dir="${sample.dir}/build/reports">
					<include name="**/*.jasper"/>
				</fileset>
			</src>
			<classpath refid="sample-classpath"/>
		</jrdc> 
	</target>

	<target name="writeApi" depends="prepare-compile-classpath">
		<mkdir dir="${sample.dir}/build/reports"/> 
		<taskdef name="jraw" classname="net.sf.jasperreports.ant.JRAntApiWriteTask"> 
			<classpath refid="sample-classpath"/>
		</taskdef>
		<jraw destdir="${sample.dir}/build/reports">
			<src>
				<fileset dir="${sample.dir}/reports">
					<include name="**/*.jasper"/>
					<include name="**/*.jrxml"/>
				</fileset>
			</src>
			<classpath refid="sample-classpath"/>
		</jraw> 
	</target>

	<target name="writeApiXml" depends="prepare-compile-classpath">
		<mkdir dir="${sample.dir}/build/classes"/> 
		<javac srcdir="${sample.dir}/build/reports" destdir="${sample.dir}/build/reports" debug="true" optimize="false" target="1.8" source="1.8"
				encoding="UTF-8" includeantruntime="false">
			<classpath refid="sample-classpath"/>
			<compilerarg value="-Xlint:-unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:-options"/>
		</javac>
		<taskdef name="jraw" classname="net.sf.jasperreports.ant.JRAntApiWriteTask"> 
			<classpath refid="sample-classpath"/>
		</taskdef>
		<jraw destdir="${sample.dir}/build/reports" runApi="true">
			<src>
				<fileset dir="${sample.dir}/build/reports">
					<include name="**/*.class"/>
				</fileset>
			</src>
			<classpath refid="sample-classpath"/>
		</jraw> 
	</target>

	<target name="clean-sample">
		<delete dir="${sample.dir}/build" />
		<delete dir="${sample.dir}/target" />
	</target>

	<target name="test" depends="prepare-test-classpath">
		<java classname="${sample.app.name}" fork="true" dir="${sample.dir}">
			<jvmarg value="-Djava.awt.headless=true"/>
			<arg value="test"/>
			<classpath refid="sample-classpath"/>
		</java>
	</target>

</project>
